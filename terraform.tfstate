{
  "version": 4,
  "terraform_version": "1.5.4",
  "serial": 592,
  "lineage": "21024c2b-bb8a-845e-03c8-c0460d745f19",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "airflow_operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "airflow",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "airflow-prd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.6.3",
                "chart": "airflow",
                "name": "airflow-prd",
                "namespace": "datalake",
                "revision": 10,
                "values": "{\"airflow\":{\"clusterDomain\":\"cluster.local\",\"config\":{\"AIRFLOW__CORE__LOAD_EXAMPLES\":\"False\",\"AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL\":\"30\",\"AIRFLOW__WEBSERVER__BASE_URL\":\"http://192.168.36.90\"},\"connections\":[],\"connectionsTemplates\":{},\"connectionsUpdate\":true,\"dbMigrations\":{\"affinity\":{},\"annotations\":{},\"checkInterval\":300,\"enabled\":true,\"labels\":{},\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"resources\":{},\"runAsJob\":false,\"safeToEvict\":true,\"securityContext\":{},\"tolerations\":[]},\"defaultAffinity\":{},\"defaultNodeSelector\":{},\"defaultSecurityContext\":{\"fsGroup\":0},\"defaultTolerations\":[],\"executor\":\"CeleryExecutor\",\"extraContainers\":[],\"extraEnv\":[],\"extraPipPackages\":[\"apache-airflow-providers-apache-kafka\",\"apache-airflow-providers-mysql\",\"apache-airflow-providers-common-sql\",\"airflow-providers-clickhouse\",\"apache-airflow\",\"clickhouse-driver\",\"airflow-clickhouse-plugin\",\"airflow-provider-kafka\",\"influxdb-client\",\"pymongo\",\"pysnmp\",\"sqlalchemy\",\"boto3\",\"pysftp\",\"apache-airflow-providers-mongo\",\"snakebite\",\"pyarrow\",\"hdfs\",\"psycopg2-binary\",\"minio\",\"eloquent\",\"redis\",\"pandas\",\"mysql-connector-python\",\"requests\",\"datetime\"],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"fernetKey\":\"7T512UXSSmBOkpWimFHIVb8jK6lfmSAvx4mO6Arehnc=\",\"image\":{\"gid\":0,\"pullPolicy\":\"IfNotPresent\",\"pullSecret\":\"\",\"repository\":\"jackt72xp/airflowsnmp\",\"tag\":\"v01\",\"uid\":50000},\"kubernetesPodTemplate\":{\"affinity\":{},\"extraContainers\":[],\"extraInitContainers\":[{\"command\":[\"/bin/sh\",\"-c\",\"apt-get update \\u0026\\u0026 apt-get install -y snmp \\u0026\\u0026 apt-get clean #magic___^_^___line\\n\"],\"image\":\"debian:buster\",\"name\":\"install-snmp\"}],\"extraPipPackages\":[\"apache-airflow-providers-apache-kafka\",\"apache-airflow-providers-mysql\",\"apache-airflow-providers-common-sql\",\"airflow-providers-clickhouse\",\"apache-airflow\",\"clickhouse-driver\",\"airflow-clickhouse-plugin\",\"airflow-provider-kafka\",\"influxdb-client\",\"pymongo\",\"pysnmp\",\"sqlalchemy\",\"boto3\",\"pysftp\",\"apache-airflow-providers-mongo\",\"snakebite\",\"pyarrow\",\"hdfs\",\"psycopg2-binary\",\"minio\",\"eloquent\",\"redis\",\"pandas\",\"mysql-connector-python\",\"requests\",\"datetime\"],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"resources\":{},\"securityContext\":{},\"shareProcessNamespace\":false,\"stringOverride\":\"\",\"tolerations\":[]},\"legacyCommands\":false,\"localSettings\":{\"existingSecret\":\"\",\"stringOverride\":\"\"},\"podAnnotations\":{},\"pools\":[],\"poolsUpdate\":true,\"protectedPipPackages\":[\"apache-airflow\"],\"sync\":{\"affinity\":{},\"annotations\":{},\"labels\":{},\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"resources\":{},\"safeToEvict\":true,\"securityContext\":{},\"tolerations\":[]},\"users\":[{\"email\":\"admin@example.com\",\"firstName\":\"admin\",\"lastName\":\"admin\",\"password\":\"admin\",\"role\":\"Admin\",\"username\":\"admin\"}],\"usersTemplates\":{},\"usersUpdate\":true,\"variables\":[],\"variablesTemplates\":{},\"variablesUpdate\":true,\"webserverSecretKey\":\"MySecretKey123!\"},\"dags\":{\"gitSync\":{\"branch\":\"main\",\"depth\":1,\"enabled\":true,\"httpSecret\":\"airflow-git-https-secret\",\"httpSecretPasswordKey\":\"httpSecretPasswordKey\",\"httpSecretUsernameKey\":\"httpSecretUsernameKey\",\"image\":{\"gid\":65533,\"pullPolicy\":\"IfNotPresent\",\"repository\":\"registry.k8s.io/git-sync/git-sync\",\"tag\":\"v3.6.5\",\"uid\":65533},\"maxFailures\":0,\"repo\":\"https://github.com/Bifrost3-0/airflow-dags.git\",\"repoSubPath\":\"DAGS/Production\",\"resources\":{},\"revision\":\"HEAD\",\"submodules\":\"recursive\",\"syncTimeout\":120,\"syncWait\":60},\"path\":\"/opt/airflow/dags\",\"persistence\":{\"accessMode\":\"ReadOnlyMany\",\"enabled\":false,\"existingClaim\":\"\",\"size\":\"1Gi\",\"storageClass\":\"\",\"subPath\":\"\"}},\"externalDatabase\":{\"database\":\"airflow\",\"host\":\"localhost\",\"password\":\"\",\"passwordSecret\":\"\",\"passwordSecretKey\":\"postgresql-password\",\"port\":5432,\"properties\":\"\",\"type\":\"postgres\",\"user\":\"airflow\",\"userSecret\":\"\",\"userSecretKey\":\"postgresql-user\"},\"externalRedis\":{\"databaseNumber\":1,\"host\":\"localhost\",\"password\":\"\",\"passwordSecret\":\"\",\"passwordSecretKey\":\"redis-password\",\"port\":6379,\"properties\":\"\"},\"extraManifests\":[],\"flower\":{\"affinity\":{},\"annotations\":{},\"basicAuthSecret\":\"\",\"basicAuthSecretKey\":\"\",\"enabled\":true,\"extraPipPackages\":[\"apache-airflow-providers-apache-kafka\",\"apache-airflow-providers-mysql\",\"apache-airflow-providers-common-sql\",\"airflow-providers-clickhouse\",\"apache-airflow\",\"clickhouse-driver\",\"airflow-clickhouse-plugin\",\"airflow-provider-kafka\",\"influxdb-client\",\"pymongo\",\"pysnmp\",\"sqlalchemy\",\"boto3\",\"pysftp\",\"apache-airflow-providers-mongo\",\"snakebite\",\"pyarrow\",\"hdfs\",\"psycopg2-binary\",\"minio\",\"eloquent\",\"redis\",\"pandas\",\"mysql-connector-python\",\"requests\",\"datetime\"],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"labels\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":5},\"nodeSelector\":{},\"podAnnotations\":{},\"podDisruptionBudget\":{\"apiVersion\":\"policy/v1\",\"enabled\":false,\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podLabels\":{},\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":5},\"replicas\":10,\"resources\":{},\"safeToEvict\":true,\"securityContext\":{},\"service\":{\"annotations\":{},\"externalPort\":5555,\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":[],\"nodePort\":{\"http\":null},\"type\":\"ClusterIP\"},\"tolerations\":[]},\"ingress\":{\"apiVersion\":\"networking.k8s.io/v1\",\"enabled\":false,\"flower\":{\"annotations\":{},\"host\":\"\",\"ingressClassName\":\"\",\"labels\":{},\"path\":\"\",\"precedingPaths\":[],\"succeedingPaths\":[],\"tls\":{\"enabled\":false,\"secretName\":\"\"}},\"web\":{\"annotations\":{},\"host\":\"192.168.36.90\",\"ingressClassName\":\"\",\"labels\":{},\"path\":\"\",\"precedingPaths\":[],\"succeedingPaths\":[],\"tls\":{\"enabled\":false,\"secretName\":\"\"}}},\"logs\":{\"path\":\"/opt/airflow/logs\",\"persistence\":{\"accessMode\":\"ReadWriteMany\",\"enabled\":false,\"existingClaim\":\"\",\"size\":\"5Gi\",\"storageClass\":\"\",\"subPath\":\"\"}},\"pgbouncer\":{\"affinity\":{},\"annotations\":{},\"authType\":\"md5\",\"clientSSL\":{\"caFile\":{\"existingSecret\":\"\",\"existingSecretKey\":\"root.crt\"},\"certFile\":{\"existingSecret\":\"\",\"existingSecretKey\":\"client.crt\"},\"ciphers\":\"normal\",\"keyFile\":{\"existingSecret\":\"\",\"existingSecretKey\":\"client.key\"},\"mode\":\"prefer\"},\"enabled\":true,\"image\":{\"gid\":1001,\"pullPolicy\":\"IfNotPresent\",\"repository\":\"ghcr.io/airflow-helm/pgbouncer\",\"tag\":\"1.18.0-patch.1\",\"uid\":1001},\"labels\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":5,\"periodSeconds\":30,\"timeoutSeconds\":60},\"logConnections\":0,\"logDisconnections\":0,\"maxClientConnections\":1000,\"nodeSelector\":{},\"podAnnotations\":{},\"podDisruptionBudget\":{\"apiVersion\":\"policy/v1\",\"enabled\":false,\"maxUnavailable\":null,\"minAvailable\":null},\"podLabels\":{},\"poolSize\":20,\"resources\":{},\"safeToEvict\":true,\"securityContext\":{},\"serverSSL\":{\"caFile\":{\"existingSecret\":\"\",\"existingSecretKey\":\"root.crt\"},\"certFile\":{\"existingSecret\":\"\",\"existingSecretKey\":\"server.crt\"},\"ciphers\":\"normal\",\"keyFile\":{\"existingSecret\":\"\",\"existingSecretKey\":\"server.key\"},\"mode\":\"prefer\"},\"startupProbe\":{\"enabled\":true,\"failureThreshold\":30,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"timeoutSeconds\":15},\"terminationGracePeriodSeconds\":120,\"tolerations\":[]},\"postgresql\":{\"enabled\":true,\"existingSecret\":\"\",\"existingSecretKey\":\"postgresql-password\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"registry\":\"ghcr.io\",\"repository\":\"airflow-helm/postgresql-bitnami\",\"tag\":\"11.16-patch.0\"},\"master\":{\"affinity\":{},\"nodeSelector\":{},\"podAnnotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\"},\"tolerations\":[]},\"metrics\":{\"enabled\":true},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"enabled\":true,\"size\":\"25Gi\",\"storageClass\":\"\"},\"postgresqlDatabase\":\"airflow\",\"postgresqlPassword\":\"airflow\",\"postgresqlUsername\":\"postgres\"},\"prometheusRule\":{\"additionalLabels\":{},\"enabled\":false,\"groups\":[]},\"rbac\":{\"create\":true,\"events\":true},\"redis\":{\"cluster\":{\"enabled\":false,\"slaveCount\":1},\"enabled\":true,\"existingSecret\":\"\",\"existingSecretPasswordKey\":\"redis-password\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"registry\":\"docker.io\",\"repository\":\"bitnami/redis\",\"tag\":\"5.0.14-debian-10-r173\"},\"master\":{\"affinity\":{},\"nodeSelector\":{},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"enabled\":false,\"size\":\"8Gi\",\"storageClass\":\"\"},\"podAnnotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\"},\"resources\":{},\"tolerations\":[]},\"password\":\"airflow\",\"slave\":{\"affinity\":{},\"nodeSelector\":{},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"enabled\":false,\"size\":\"8Gi\",\"storageClass\":\"\"},\"podAnnotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\"},\"resources\":{},\"tolerations\":[]}},\"scheduler\":{\"affinity\":{},\"annotations\":{},\"extraInitContainers\":[],\"extraPipPackages\":[\"apache-airflow-providers-apache-kafka\",\"apache-airflow-providers-mysql\",\"apache-airflow-providers-common-sql\",\"airflow-providers-clickhouse\",\"apache-airflow\",\"clickhouse-driver\",\"airflow-clickhouse-plugin\",\"airflow-provider-kafka\",\"influxdb-client\",\"pymongo\",\"pysnmp\",\"sqlalchemy\",\"boto3\",\"pysftp\",\"apache-airflow-providers-mongo\",\"snakebite\",\"pyarrow\",\"hdfs\",\"psycopg2-binary\",\"minio\",\"eloquent\",\"redis\",\"pandas\",\"mysql-connector-python\",\"requests\",\"datetime\"],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"labels\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":5,\"initialDelaySeconds\":10,\"periodSeconds\":30,\"taskCreationCheck\":{\"enabled\":false,\"schedulerAgeBeforeCheck\":180,\"thresholdSeconds\":300},\"timeoutSeconds\":60},\"logCleanup\":{\"enabled\":true,\"intervalSeconds\":600,\"resources\":{},\"retentionMinutes\":6000},\"nodeSelector\":{},\"numRuns\":-1,\"podAnnotations\":{},\"podDisruptionBudget\":{\"apiVersion\":\"policy/v1\",\"enabled\":false,\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podLabels\":{},\"replicas\":16,\"resources\":{\"limits\":{\"cpu\":\"1500m\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"800m\",\"memory\":\"1200Mi\"}},\"safeToEvict\":true,\"securityContext\":{},\"tolerations\":[]},\"serviceAccount\":{\"annotations\":{},\"create\":true,\"name\":\"\"},\"serviceMonitor\":{\"enabled\":false,\"interval\":\"30s\",\"path\":\"/admin/metrics\",\"selector\":{\"prometheus\":\"kube-prometheus\"}},\"triggerer\":{\"affinity\":{},\"annotations\":{},\"capacity\":1000,\"enabled\":true,\"extraPipPackages\":[\"apache-airflow-providers-apache-kafka\",\"apache-airflow-providers-mysql\",\"apache-airflow-providers-common-sql\",\"airflow-providers-clickhouse\",\"apache-airflow\",\"clickhouse-driver\",\"airflow-clickhouse-plugin\",\"airflow-provider-kafka\",\"influxdb-client\",\"pymongo\",\"pysnmp\",\"sqlalchemy\",\"boto3\",\"pysftp\",\"apache-airflow-providers-mongo\",\"snakebite\",\"pyarrow\",\"hdfs\",\"psycopg2-binary\",\"minio\",\"eloquent\",\"redis\",\"pandas\",\"mysql-connector-python\",\"requests\",\"datetime\"],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"labels\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":5,\"initialDelaySeconds\":10,\"periodSeconds\":30,\"timeoutSeconds\":60},\"nodeSelector\":{},\"podAnnotations\":{},\"podDisruptionBudget\":{\"apiVersion\":\"policy/v1\",\"enabled\":false,\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podLabels\":{},\"replicas\":10,\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"600Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"400Mi\"}},\"safeToEvict\":true,\"securityContext\":{},\"tolerations\":[]},\"web\":{\"affinity\":{},\"annotations\":{},\"extraPipPackages\":[\"apache-airflow-providers-apache-kafka\",\"apache-airflow-providers-mysql\",\"apache-airflow-providers-common-sql\",\"airflow-providers-clickhouse\",\"apache-airflow\",\"clickhouse-driver\",\"airflow-clickhouse-plugin\",\"airflow-provider-kafka\",\"influxdb-client\",\"pymongo\",\"pysnmp\",\"sqlalchemy\",\"boto3\",\"pysftp\",\"apache-airflow-providers-mongo\",\"snakebite\",\"pyarrow\",\"hdfs\",\"psycopg2-binary\",\"minio\",\"eloquent\",\"redis\",\"pandas\",\"mysql-connector-python\",\"requests\",\"datetime\"],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"labels\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":5},\"nodeSelector\":{},\"podAnnotations\":{},\"podDisruptionBudget\":{\"apiVersion\":\"policy/v1\",\"enabled\":false,\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podLabels\":{},\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":5},\"replicas\":1,\"resources\":{},\"safeToEvict\":true,\"securityContext\":{},\"service\":{\"annotations\":{},\"externalPort\":8080,\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":[],\"nodePort\":{\"http\":\"\"},\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"ClusterIP\"},\"tolerations\":[],\"webserverConfig\":{\"enabled\":true,\"existingSecret\":\"\",\"stringOverride\":\"from airflow import configuration as conf\\nfrom flask_appbuilder.security.manager import AUTH_DB\\n\\n# the SQLAlchemy connection string\\nSQLALCHEMY_DATABASE_URI = conf.get('core', 'SQL_ALCHEMY_CONN')\\n\\n# use embedded DB for auth\\nAUTH_TYPE = AUTH_DB\\n\"}},\"workers\":{\"affinity\":{},\"annotations\":{},\"autoscaling\":{\"apiVersion\":\"autoscaling/v2\",\"enabled\":true,\"maxReplicas\":40,\"metrics\":[]},\"celery\":{\"gracefullTermination\":true,\"gracefullTerminationPeriod\":600},\"enabled\":true,\"extraPipPackages\":[\"apache-airflow-providers-apache-kafka\",\"apache-airflow-providers-mysql\",\"apache-airflow-providers-common-sql\",\"airflow-providers-clickhouse\",\"apache-airflow\",\"clickhouse-driver\",\"airflow-clickhouse-plugin\",\"airflow-provider-kafka\",\"influxdb-client\",\"pymongo\",\"pysnmp\",\"sqlalchemy\",\"boto3\",\"pysftp\",\"apache-airflow-providers-mongo\",\"snakebite\",\"pyarrow\",\"hdfs\",\"psycopg2-binary\",\"minio\",\"eloquent\",\"redis\",\"pandas\",\"mysql-connector-python\",\"requests\",\"datetime\"],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"labels\":{},\"logCleanup\":{\"enabled\":true,\"intervalSeconds\":600,\"resources\":{},\"retentionMinutes\":6000},\"nodeSelector\":{},\"podAnnotations\":{},\"podDisruptionBudget\":{\"apiVersion\":\"policy/v1\",\"enabled\":false,\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podLabels\":{},\"replicas\":32,\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"700m\",\"memory\":\"1200Mi\"}},\"safeToEvict\":true,\"securityContext\":{},\"terminationPeriod\":60,\"tolerations\":[]}}",
                "version": "8.8.0"
              }
            ],
            "name": "airflow-prd",
            "namespace": "datalake",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://airflow-helm.github.io/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "airflow:\n  ## if we use legacy 1.10 airflow commands\n  ##\n  legacyCommands: false\n\n  ## configs for the airflow container image\n  ##\n  image:\n    repository: jackt72xp/airflowsnmp\n    tag: v01\n    pullPolicy: IfNotPresent\n    pullSecret: \"\"\n    uid: 50000\n    gid: 0\n\n  ## the airflow executor type to use\n  ## - allowed values: \"CeleryExecutor\", \"KubernetesExecutor\", \"CeleryKubernetesExecutor\"\n  ## - customize the \"KubernetesExecutor\" pod-template with `airflow.kubernetesPodTemplate.*`\n  ##\n  executor: CeleryExecutor\n\n  ## the fernet encryption key (sets `AIRFLOW__CORE__FERNET_KEY`)\n  ## - [WARNING] you must change this value to ensure the security of your airflow\n  ## - set `AIRFLOW__CORE__FERNET_KEY` with `airflow.extraEnv` from a Secret to avoid storing this in your values\n  ## - use this command to generate your own fernet key:\n  ##   python -c \"from cryptography.fernet import Fernet; FERNET_KEY = Fernet.generate_key().decode(); print(FERNET_KEY)\"\n  ##\n  fernetKey: \"7T512UXSSmBOkpWimFHIVb8jK6lfmSAvx4mO6Arehnc=\"\n\n  ## the secret_key for flask (sets `AIRFLOW__WEBSERVER__SECRET_KEY`)\n  ## - [WARNING] you must change this value to ensure the security of your airflow\n  ## - set `AIRFLOW__WEBSERVER__SECRET_KEY` with `airflow.extraEnv` from a Secret to avoid storing this in your values\n  ##\n  webserverSecretKey: \"MySecretKey123!\"\n\n  ## environment variables for airflow configs\n  ## - airflow env-vars are structured: \"AIRFLOW__{config_section}__{config_name}\"\n  ## - airflow configuration reference:\n  ##   https://airflow.apache.org/docs/apache-airflow/stable/configurations-ref.html\n  ##\n  ## ____ EXAMPLE _______________\n  ##   config:\n  ##     # dag configs\n  ##     AIRFLOW__CORE__LOAD_EXAMPLES: \"False\"\n  ##     AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: \"30\"\n  ##\n  ##     # email configs\n  ##     AIRFLOW__EMAIL__EMAIL_BACKEND: \"airflow.utils.email.send_email_smtp\"\n  ##     AIRFLOW__SMTP__SMTP_HOST: \"smtpmail.example.com\"\n  ##     AIRFLOW__SMTP__SMTP_MAIL_FROM: \"admin@example.com\"\n  ##     AIRFLOW__SMTP__SMTP_PORT: \"25\"\n  ##     AIRFLOW__SMTP__SMTP_SSL: \"False\"\n  ##     AIRFLOW__SMTP__SMTP_STARTTLS: \"False\"\n  ##\n  ##     # domain used in airflow emails\n  ##     AIRFLOW__WEBSERVER__BASE_URL: \"http://airflow.example.com\"\n  ##\n  ##     # ether environment variables\n  ##     HTTP_PROXY: \"http://proxy.example.com:8080\"\n  ##\n  config:\n    AIRFLOW__CORE__LOAD_EXAMPLES: \"False\"\n    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: \"30\"\n    AIRFLOW__WEBSERVER__BASE_URL: \"http://192.168.36.90\"\n\n\n  ## a list of users to create\n  ## - templates can ONLY be used in: `password`, `email`, `firstName`, `lastName`\n  ## - templates used a bash-like syntax: ${MY_USERNAME}, $MY_USERNAME\n  ## - templates are defined in `usersTemplates`\n  ## - `role` can be a single role or a list of roles\n  ##\n  users:\n  - username: admin\n    password: admin\n    role: Admin\n    email: admin@example.com\n    firstName: admin\n    lastName: admin\n\n  ## bash-like templates to be used in `airflow.users`\n  ## - [WARNING] if a Secret or ConfigMap is missing, the sync Pod will crash\n  ## - [WARNING] all keys must match the regex: ^[a-zA-Z_][a-zA-Z0-9_]*$\n  ##\n  ## ____ EXAMPLE _______________\n  ##   usersTemplates\n  ##     MY_USERNAME:\n  ##       kind: configmap\n  ##       name: my-configmap\n  ##       key: username\n  ##     MY_PASSWORD:\n  ##       kind: secret\n  ##       name: my-secret\n  ##       key: password\n  ##\n  usersTemplates: {}\n\n  ## if we create a Deployment to perpetually sync `airflow.users`\n  ## - when `true`, users are updated in real-time, as ConfigMaps/Secrets change\n  ## - when `true`, users changes from the WebUI will be reverted automatically\n  ## - when `false`, users will only update one-time, after each `helm upgrade`\n  ##\n  usersUpdate: true\n\n  ## a list airflow connections to create\n  ## - templates can ONLY be used in: `host`, `login`, `password`, `schema`, `extra`\n  ## - templates used a bash-like syntax: ${AWS_ACCESS_KEY} or $AWS_ACCESS_KEY\n  ## - templates are defined in `connectionsTemplates`\n  ##\n  ## ____ EXAMPLE _______________\n  ##   connections:\n  ##     - id: my_aws\n  ##       type: aws\n  ##       description: my AWS connection\n  ##       extra: |-\n  ##         { \"aws_access_key_id\": \"${AWS_KEY_ID}\",\n  ##           \"aws_secret_access_key\": \"${AWS_ACCESS_KEY}\",\n  ##           \"region_name\":\"eu-central-1\" }\n  ##\n  connections: []\n\n  ## bash-like templates to be used in `airflow.connections`\n  ## - see docs for `airflow.usersTemplates`\n  ##\n  connectionsTemplates: {}\n\n  ## if we create a Deployment to perpetually sync `airflow.connections`\n  ## - see docs for `airflow.usersUpdate`\n  ##\n  connectionsUpdate: true\n\n  ## a list airflow variables to create\n  ## - templates can ONLY be used in: `value`\n  ## - templates used a bash-like syntax: ${MY_VALUE} or $MY_VALUE\n  ## - templates are defined in `connectionsTemplates`\n  ##\n  ## ____ EXAMPLE _______________\n  ##   variables:\n  ##     - key: \"var_1\"\n  ##       value: \"my_value_1\"\n  ##     - key: \"var_2\"\n  ##       value: \"my_value_2\"\n  ##\n  variables: []\n\n  ## bash-like templates to be used in `airflow.variables`\n  ## - see docs for `airflow.usersTemplates`\n  ##\n  variablesTemplates: {}\n\n  ## if we create a Deployment to perpetually sync `airflow.variables`\n  ## - see docs for `airflow.usersUpdate`\n  ##\n  variablesUpdate: true\n\n  ## a list airflow pools to create\n  ##\n  ## ____ EXAMPLE _______________\n  ##   pools:\n  ##     - name: \"pool_1\"\n  ##       description: \"example pool with 5 slots\"\n  ##       slots: 5\n  ##     - name: \"pool_2\"\n  ##       description: \"example pool with 2 cron policies\"\n  ##       slots: 0\n  ##       ## at each sync interval, the policy with the most recently past `recurrence` is applied\n  ##       policies:\n  ##         - name: \"scale up at 7pm UTC\"\n  ##           slots: 50\n  ##           recurrence: \"0 19 * * *\"\n  ##         - name: \"scale down at 6am UTC\"\n  ##           slots: 10\n  ##           recurrence: \"0 6 * * *\"\n  ##\n  pools: []\n\n  ## if we create a Deployment to perpetually sync `airflow.pools`\n  ## - see docs for `airflow.usersUpdate`\n  ##\n  poolsUpdate: true\n\n  ## default nodeSelector for airflow Pods (is overridden by pod-specific values)\n  ## - docs for nodeSelector:\n  ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n  ##\n  defaultNodeSelector: {}\n\n  ## default affinity configs for airflow Pods (is overridden by pod-specific values)\n  ## - spec for Affinity:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n  ##\n  defaultAffinity: {}\n\n  ## default toleration configs for airflow Pods (is overridden by pod-specific values)\n  ## - spec for Toleration:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n  ##\n  defaultTolerations: []\n\n  ## default securityContext configs for airflow Pods (is overridden by pod-specific values)\n  ## - spec for PodSecurityContext:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core\n  ##\n  defaultSecurityContext:\n    ## sets the filesystem owner group of files/folders in mounted volumes\n    ## this does NOT give root permissions to Pods, only the \"root\" group\n    fsGroup: 0\n\n  ## extra annotations for airflow Pods\n  ##\n  podAnnotations: {}\n\n  ## extra pip packages to install in airflow Pods\n  ##\n  ## ____ EXAMPLE _______________\n  ##   extraPipPackages:\n  ##     - \"SomeProject==1.0.0\"\n  ##\n  extraPipPackages:\n  - \"apache-airflow-providers-apache-kafka\"\n  - \"apache-airflow-providers-mysql\"\n  - \"apache-airflow-providers-common-sql\"\n  - \"airflow-providers-clickhouse\"\n  - \"apache-airflow\"\n  - \"clickhouse-driver\"\n  - \"airflow-clickhouse-plugin\"\n  - \"airflow-provider-kafka\"\n  - \"influxdb-client\"\n  - \"pymongo\"\n  - \"pysnmp\"\n  - \"sqlalchemy\"\n  - \"boto3\"\n  - \"pysftp\"\n  - \"apache-airflow-providers-mongo\"\n  - \"snakebite\"\n  - \"pyarrow\"\n  - \"hdfs\"\n  - \"psycopg2-binary\"\n  - \"minio\"\n  - \"eloquent\"\n  - \"redis\"\n  - \"pandas\"\n  - \"mysql-connector-python\"\n  - \"requests\"\n  - \"datetime\"\n\n  ## pip packages that are protected from upgrade/downgrade by `extraPipPackages`\n  ## - [WARNING] Pods will fail to start if `extraPipPackages` would cause these packages to change versions\n  ##\n  protectedPipPackages:\n  - \"apache-airflow\"\n\n  ## extra environment variables for the airflow Pods\n  ## - spec for EnvVar:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#envvar-v1-core\n  ##\n  extraEnv: []\n\n  ## extra containers for the airflow Pods\n  ## - spec for Container:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#container-v1-core\n  ##\n  extraContainers: []\n\n  ## extra VolumeMounts for the airflow Pods\n  ## - spec for VolumeMount:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volumemount-v1-core\n  ##\n  extraVolumeMounts: []\n\n  ## extra Volumes for the airflow Pods\n  ## - spec for Volume:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volume-v1-core\n  ##\n  extraVolumes: []\n\n  ## kubernetes cluster domain name\n  ## - configured in the kubelet with `--cluster-domain` flag (deprecated):\n  ##   https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/\n  ## - or configured in the kubelet with configuration file `clusterDomain` option:\n  ##   https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/\n  ##\n  clusterDomain: \"cluster.local\"\n\n  ########################################\n  ## FILE | airflow_local_settings.py\n  ########################################\n  ##\n  localSettings:\n    ## the full content of the `airflow_local_settings.py` file (as a string)\n    ## - docs for airflow cluster policies:\n    ##   https://airflow.apache.org/docs/apache-airflow/stable/concepts/cluster-policies.html\n    ##\n    ## ____ EXAMPLE _______________\n    ##    stringOverride: |\n    ##      # use a custom `xcom_sidecar` image for KubernetesPodOperator()\n    ##      from airflow.kubernetes.pod_generator import PodDefaults\n    ##      PodDefaults.SIDECAR_CONTAINER.image = \"gcr.io/PROJECT-ID/custom-sidecar-image\"\n    ##\n    stringOverride: \"\"\n\n    ## the name of a Secret containing a `airflow_local_settings.py` key\n    ## - if set, this disables `airflow.localSettings.stringOverride`\n    ##\n    existingSecret: \"\"\n\n  ########################################\n  ## FILE | pod_template.yaml\n  ########################################\n  ## - generates a file for `AIRFLOW__KUBERNETES__POD_TEMPLATE_FILE`\n  ## - the `dags.gitSync` values will create a git-sync init-container in the pod\n  ## - the `airflow.extraPipPackages` will NOT be installed\n  ##\n  kubernetesPodTemplate:\n    ## the full content of the pod-template file (as a string)\n    ## - [WARNING] all other `kubernetesPodTemplate.*` are disabled when this is set\n    ## - docs for pod-template file:\n    ##   https://airflow.apache.org/docs/apache-airflow/stable/executor/kubernetes.html#pod-template-file\n    ##\n    ## ____ EXAMPLE _______________\n    ##   stringOverride: |-\n    ##     apiVersion: v1\n    ##     kind: Pod\n    ##     spec: ...\n    ##\n    stringOverride: \"\"\n\n    ## resource requests/limits for the Pod template \"base\" container\n    ## - spec for ResourceRequirements:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n    ##\n    resources: {}\n\n    ## the nodeSelector configs for the Pod template\n    ## - docs for nodeSelector:\n    ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n    ##\n    nodeSelector: {}\n\n    ## the affinity configs for the Pod template\n    ## - spec for Affinity:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n    ##\n    affinity: {}\n\n    ## the toleration configs for the Pod template\n    ## - spec for Toleration:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n    ##\n    tolerations: []\n\n    ## labels for the Pod template\n    ##\n    podLabels: {}\n\n    ## annotations for the Pod template\n    ##\n    podAnnotations: {}\n\n    ## the security context for the Pod template\n    ## - spec for PodSecurityContext:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core\n    ##\n    securityContext: {}\n\n    ## the shareProcessNamespace config for the Pod template\n    ## - docs for shareProcessNamespace:\n    ##   https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/\n    ##\n    shareProcessNamespace: false\n\n    ## extra pip packages to install in the Pod template\n    ##\n    ## ____ EXAMPLE _______________\n    ##   extraPipPackages:\n    ##     - \"SomeProject==1.0.0\"\n    ##\n    extraPipPackages:\n    - \"apache-airflow-providers-apache-kafka\"\n    - \"apache-airflow-providers-mysql\"\n    - \"apache-airflow-providers-common-sql\"\n    - \"airflow-providers-clickhouse\"\n    - \"apache-airflow\"\n    - \"clickhouse-driver\"\n    - \"airflow-clickhouse-plugin\"\n    - \"airflow-provider-kafka\"\n    - \"influxdb-client\"\n    - \"pymongo\"\n    - \"pysnmp\"\n    - \"sqlalchemy\"\n    - \"boto3\"\n    - \"pysftp\"\n    - \"apache-airflow-providers-mongo\"\n    - \"snakebite\"\n    - \"pyarrow\"\n    - \"hdfs\"\n    - \"psycopg2-binary\"\n    - \"minio\"\n    - \"eloquent\"\n    - \"redis\"\n    - \"pandas\"\n    - \"mysql-connector-python\"\n    - \"requests\"\n    - \"datetime\"\n\n\n    ## extra containers for the pod template\n    ## - spec for Container:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#container-v1-core\n    ##\n    extraContainers: []\n\n    ## extra init-containers for the Pod template\n    ## - spec of Container:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#container-v1-core\n    ##\n    extraInitContainers:\n    - name: install-snmp\n      image: debian:buster\n      command:\n      - \"/bin/sh\"\n      - \"-c\"\n      - \u003e\n        apt-get update \u0026\u0026 apt-get install -y snmp \u0026\u0026 apt-get clean #magic___^_^___line\n      ## extra VolumeMounts for the Pod template\n    ## - spec for VolumeMount:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volumemount-v1-core\n    ##\n    extraVolumeMounts: []\n\n    ## extra Volumes for the Pod template\n    ## - spec for Volume:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volume-v1-core\n    ##\n    extraVolumes: []\n\n  ########################################\n  ## COMPONENT | db-migrations Deployment\n  ########################################\n  dbMigrations:\n    ## if the db-migrations Deployment/Job is created\n    ## - [WARNING] if `false`, you have to MANUALLY run `airflow db upgrade` when required\n    ##\n    enabled: true\n\n    ## if a post-install helm Job should be used (instead of a Deployment)\n    ## - [WARNING] setting `true` will NOT work with the helm `--wait` flag,\n    ##   this is because post-install helm Jobs run AFTER the main resources become Ready,\n    ##   which will cause a deadlock, as other resources require db-migrations to become Ready\n    ##\n    runAsJob: false\n\n    ## resource requests/limits for the db-migrations Pods\n    ## - spec for ResourceRequirements:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n    ##\n    resources: {}\n\n    ## the nodeSelector configs for the db-migrations Pods\n    ## - docs for nodeSelector:\n    ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n    ##\n    nodeSelector: {}\n\n    ## the affinity configs for the db-migrations Pods\n    ## - spec for Affinity:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n    ##\n    affinity: {}\n\n    ## the toleration configs for the db-migrations Pods\n    ## - spec for Toleration:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n    ##\n    tolerations: []\n\n    ## the security context for the db-migrations Pods\n    ## - spec for PodSecurityContext:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core\n    ##\n    securityContext: {}\n\n    ## Labels for the db-migrations Deployment\n    ##\n    labels: {}\n\n    ## Pod labels for the db-migrations Deployment\n    ##\n    podLabels: {}\n\n    ## annotations for the db-migrations Deployment/Job\n    ##\n    annotations: {}\n\n    ## Pod annotations for the db-migrations Deployment/Job\n    ##\n    podAnnotations: {}\n\n    ## if we add the annotation: \"cluster-autoscaler.kubernetes.io/safe-to-evict\" = \"true\"\n    ##\n    safeToEvict: true\n\n    ## the number of seconds between checks for unapplied db migrations\n    ## - only applies if `airflow.dbMigrations.runAsJob` is `false`\n    ##\n    checkInterval: 300\n\n  ########################################\n  ## COMPONENT | Sync Deployments\n  ########################################\n  ## - used by the Deployments/Jobs used by `airflow.{connections,pools,users,variables}`\n  ##\n  sync:\n    ## resource requests/limits for the sync Pods\n    ## - spec for ResourceRequirements:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n    ##\n    resources: {}\n\n    ## the nodeSelector configs for the sync Pods\n    ## - docs for nodeSelector:\n    ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n    ##\n    nodeSelector: {}\n\n    ## the affinity configs for the sync Pods\n    ## - spec for Affinity:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n    ##\n    affinity: {}\n\n    ## the toleration configs for the sync Pods\n    ## - spec for Toleration:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n    ##\n    tolerations: []\n\n    ## the security context for the sync Pods\n    ## - spec for PodSecurityContext:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core\n    ##\n    securityContext: {}\n\n    ## Labels for the sync Deployments/Jobs\n    ##\n    labels: {}\n\n    ## Pod labels for the sync Deployments/Jobs\n    ##\n    podLabels: {}\n\n    ## annotations for the sync Deployments/Jobs\n    ##\n    annotations: {}\n\n    ## Pod annotations for the sync Deployments/Jobs\n    ##\n    podAnnotations: {}\n\n    ## if we add the annotation: \"cluster-autoscaler.kubernetes.io/safe-to-evict\" = \"true\"\n    ##\n    safeToEvict: true\nscheduler:\n  ## the number of scheduler Pods to run\n  ## - if you set this \u003e1 we recommend defining a `scheduler.podDisruptionBudget`\n  ##\n  replicas: 16\n\n  ## resource requests/limits for the scheduler Pod\n  ## - spec of ResourceRequirements:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n  ##\n  resources:\n    requests:\n      cpu: \"800m\" # Solicita 100 milicore, 0.1 core\n      memory: \"1200Mi\" # Solicita 200 MiB de memoria\n    limits:\n      cpu: \"1500m\" # Límite de 500 milicore, 0.5 core\n      memory: \"2Gi\" # Límite de 500 MiB de memoria\n\n\n  ## the nodeSelector configs for the scheduler Pods\n  ## - docs for nodeSelector:\n  ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n  ##\n  nodeSelector: {}\n\n  ## the affinity configs for the scheduler Pods\n  ## - spec of Affinity:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n  ##\n  affinity: {}\n\n  ## the toleration configs for the scheduler Pods\n  ## - spec of Toleration:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n  ##\n  tolerations: []\n\n  ## the security context for the scheduler Pods\n  ## - spec of PodSecurityContext:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core\n  ##\n  securityContext: {}\n\n  ## labels for the scheduler Deployment\n  ##\n  labels: {}\n\n  ## Pod labels for the scheduler Deployment\n  ##\n  podLabels: {}\n\n  ## annotations for the scheduler Deployment\n  ##\n  annotations: {}\n\n  ## Pod annotations for the scheduler Deployment\n  ##\n  podAnnotations: {}\n\n  ## if we add the annotation: \"cluster-autoscaler.kubernetes.io/safe-to-evict\" = \"true\"\n  ##\n  safeToEvict: true\n\n  ## configs for the PodDisruptionBudget of the scheduler\n  ##\n  podDisruptionBudget:\n    ## if a PodDisruptionBudget resource is created for the scheduler\n    ##\n    enabled: false\n\n    ## the `apiVersion` to use for PodDisruptionBudget resources\n    ## - for Kubernetes 1.21 and later: \"policy/v1\"\n    ## - for Kubernetes 1.20 and before: \"policy/v1beta1\"\n    ##\n    apiVersion: policy/v1\n\n    ## the maximum unavailable pods/percentage for the scheduler\n    ##\n    maxUnavailable: \"\"\n\n    ## the minimum available pods/percentage for the scheduler\n    ##\n    minAvailable: \"\"\n\n  ## configs for the log-cleanup sidecar of the scheduler\n  ## - helps prevent excessive log buildup by regularly deleting old files\n  ##\n  logCleanup:\n    ## if the log-cleanup sidecar is enabled\n    ## - [WARNING] must be disabled if `logs.persistence.enabled` is `true`\n    ##\n    enabled: true\n\n    ## resource requests/limits for the log-cleanup container\n    ## - spec of ResourceRequirements:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n    ##\n    resources: {}\n\n    ## the number of minutes to retain log files (by last-modified time)\n    ##\n    retentionMinutes: 6000\n\n    ## the number of seconds between each check for files to delete\n    ##\n    intervalSeconds: 600\n\n  ## sets `airflow --num_runs` parameter used to run the airflow scheduler\n  ##\n  numRuns: -1\n\n  ## configs for the scheduler Pods' liveness probe\n  ## - \"unhealthy\" means the SchedulerJob has not had a heartbeat for\n  ##   AIRFLOW__SCHEDULER__SCHEDULER_HEALTH_CHECK_THRESHOLD seconds\n  ## - `periodSeconds` x `failureThreshold` = max seconds a scheduler can be in an \"unhealthy\" state\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 10\n    periodSeconds: 30\n    timeoutSeconds: 60\n    failureThreshold: 5\n\n    ## configs for an additional check that ensures tasks are being created by the scheduler\n    ## - this check works by ensuring that the most recent LocalTaskJob had a `start_date` no more than\n    ##   `taskCreationCheck.thresholdSeconds` seconds ago\n    ## - this check is useful because the scheduler can deadlock with a heartbeat, but not be scheduling new tasks:\n    ##   https://github.com/apache/airflow/issues/7935 - patched in airflow `2.0.2`\n    ##   https://github.com/apache/airflow/issues/15938 - patched in airflow `2.1.1`\n    ##\n    taskCreationCheck:\n      ## if the task creation check is enabled\n      ##\n      enabled: false\n\n      ## the maximum number of seconds since the start_date of the most recent LocalTaskJob\n      ## - [WARNING] must be AT LEAST equal to your shortest DAG schedule_interval\n      ## - [WARNING] DummyOperator tasks will NOT be seen by this probe\n      ##\n      thresholdSeconds: 300\n\n      ## minimum number of seconds the scheduler must have run before the task creation check begins\n      ## - [WARNING] must be long enough for the scheduler to boot and create a task\n      ##\n      schedulerAgeBeforeCheck: 180\n\n  ## extra pip packages to install in the scheduler Pods\n  ##\n  ## ____ EXAMPLE _______________\n  ##   extraPipPackages:\n  ##     - \"SomeProject==1.0.0\"\n  ##\n  extraPipPackages:\n  - \"apache-airflow-providers-apache-kafka\"\n  - \"apache-airflow-providers-mysql\"\n  - \"apache-airflow-providers-common-sql\"\n  - \"airflow-providers-clickhouse\"\n  - \"apache-airflow\"\n  - \"clickhouse-driver\"\n  - \"airflow-clickhouse-plugin\"\n  - \"airflow-provider-kafka\"\n  - \"influxdb-client\"\n  - \"pymongo\"\n  - \"pysnmp\"\n  - \"sqlalchemy\"\n  - \"boto3\"\n  - \"pysftp\"\n  - \"apache-airflow-providers-mongo\"\n  - \"snakebite\"\n  - \"pyarrow\"\n  - \"hdfs\"\n  - \"psycopg2-binary\"\n  - \"minio\"\n  - \"eloquent\"\n  - \"redis\"\n  - \"pandas\"\n  - \"mysql-connector-python\"\n  - \"requests\"\n  - \"datetime\"\n\n  ## extra VolumeMounts for the scheduler Pods\n  ## - spec of VolumeMount:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volumemount-v1-core\n  ##\n  extraVolumeMounts: []\n\n  ## extra Volumes for the scheduler Pods\n  ## - spec of Volume:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volume-v1-core\n  ##\n  extraVolumes: []\n\n  ## extra init containers to run in the scheduler Pods\n  ## - spec of Container:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#container-v1-core\n  ##\n  extraInitContainers: []\nweb:\n  ########################################\n  ## FILE | webserver_config.py\n  ########################################\n  ##\n  webserverConfig:\n    ## if the `webserver_config.py` file is mounted\n    ## - set to false if you wish to mount your own `webserver_config.py` file\n    ##\n    enabled: true\n\n    ## the full content of the `webserver_config.py` file (as a string)\n    ## - docs for Flask-AppBuilder security configs:\n    ##   https://flask-appbuilder.readthedocs.io/en/latest/security.html\n    ##\n    ## ____ EXAMPLE _______________\n    stringOverride: |\n      from airflow import configuration as conf\n      from flask_appbuilder.security.manager import AUTH_DB\n\n      # the SQLAlchemy connection string\n      SQLALCHEMY_DATABASE_URI = conf.get('core', 'SQL_ALCHEMY_CONN')\n\n      # use embedded DB for auth\n      AUTH_TYPE = AUTH_DB\n    ##\n    # stringOverride: \"\"\n\n    ## the name of a Secret containing a `webserver_config.py` key\n    ##\n    existingSecret: \"\"\n\n  ## the number of web Pods to run\n  ## - if you set this \u003e1 we recommend defining a `web.podDisruptionBudget`\n  ##\n  replicas: 1\n\n  ## resource requests/limits for the web Pod\n  ## - spec for ResourceRequirements:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n  ##\n  resources: {}\n\n  ## the nodeSelector configs for the web Pods\n  ## - docs for nodeSelector:\n  ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n  ##\n  nodeSelector: {}\n\n  ## the affinity configs for the web Pods\n  ## - spec for Affinity:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n  ##\n  affinity: {}\n\n  ## the toleration configs for the web Pods\n  ## - spec for Toleration:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n  ##\n  tolerations: []\n\n  ## the security context for the web Pods\n  ## - spec for PodSecurityContext:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core\n  ##\n  securityContext: {}\n\n  ## labels for the web Deployment\n  ##\n  labels: {}\n\n  ## Pod labels for the web Deployment\n  ##\n  podLabels: {}\n\n  ## annotations for the web Deployment\n  ##\n  annotations: {}\n\n  ## Pod annotations for the web Deployment\n  ##\n  podAnnotations: {}\n\n  ## if we add the annotation: \"cluster-autoscaler.kubernetes.io/safe-to-evict\" = \"true\"\n  ##\n  safeToEvict: true\n\n  ## configs for the PodDisruptionBudget of the web Deployment\n  ##\n  podDisruptionBudget:\n    ## if a PodDisruptionBudget resource is created for the web Deployment\n    ##\n    enabled: false\n\n    ## the `apiVersion` to use for PodDisruptionBudget resources\n    ## - for Kubernetes 1.21 and later: \"policy/v1\"\n    ## - for Kubernetes 1.20 and before: \"policy/v1beta1\"\n    ##\n    apiVersion: policy/v1\n\n    ## the maximum unavailable pods/percentage for the web Deployment\n    ##\n    maxUnavailable: \"\"\n\n    ## the minimum available pods/percentage for the web Deployment\n    ##\n    minAvailable: \"\"\n\n  ## configs for the Service of the web Pods\n  ##\n  service:\n    annotations: {}\n    sessionAffinity: \"None\"\n    sessionAffinityConfig: {}\n    type: ClusterIP\n    externalPort: 8080\n    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n    nodePort:\n      http: \"\"\n\n  ## configs for the web Pods' readiness probe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 6\n\n  ## configs for the web Pods' liveness probe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 6\n\n  ## extra pip packages to install in the web Pods\n  ##\n  ## ____ EXAMPLE _______________\n  ##   extraPipPackages:\n  ##     - \"SomeProject==1.0.0\"\n  ##\n  extraPipPackages:\n  - \"apache-airflow-providers-apache-kafka\"\n  - \"apache-airflow-providers-mysql\"\n  - \"apache-airflow-providers-common-sql\"\n  - \"airflow-providers-clickhouse\"\n  - \"apache-airflow\"\n  - \"clickhouse-driver\"\n  - \"airflow-clickhouse-plugin\"\n  - \"airflow-provider-kafka\"\n  - \"influxdb-client\"\n  - \"pymongo\"\n  - \"pysnmp\"\n  - \"sqlalchemy\"\n  - \"boto3\"\n  - \"pysftp\"\n  - \"apache-airflow-providers-mongo\"\n  - \"snakebite\"\n  - \"pyarrow\"\n  - \"hdfs\"\n  - \"psycopg2-binary\"\n  - \"minio\"\n  - \"eloquent\"\n  - \"redis\"\n  - \"pandas\"\n  - \"mysql-connector-python\"\n  - \"requests\"\n  - \"datetime\"\n\n  ## extra VolumeMounts for the web Pods\n  ## - spec for VolumeMount:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volumemount-v1-core\n  ##\n  extraVolumeMounts: []\n\n  ## extra Volumes for the web Pods\n  ## - spec for Volume:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volume-v1-core\n  ##\n  extraVolumes: []\nworkers:\n  ## if the airflow workers StatefulSet should be deployed\n  ##\n  enabled: true\n\n  ## the number of worker Pods to run\n  ## - if you set this \u003e1 we recommend defining a `workers.podDisruptionBudget`\n  ## - this is the minimum when `workers.autoscaling.enabled` is true\n  ##\n  replicas: 32\n\n  ## resource requests/limits for the worker Pod\n  ## - spec for ResourceRequirements:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n  ##\n  resources:\n    requests:\n      cpu: \"700m\" # Solicita 100 milicore, 0.1 core\n      memory: \"1200Mi\" # Solicita 200 MiB de memoria\n    limits:\n      cpu: \"2000m\" # Límite de 500 milicore, 0.5 core\n      memory: \"2Gi\" # Límite de 500 MiB de memoria\n\n\n  ## the nodeSelector configs for the worker Pods\n  ## - docs for nodeSelector:\n  ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n  ##\n  nodeSelector: {}\n\n  ## the affinity configs for the worker Pods\n  ## - spec for Affinity:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n  ##\n  affinity: {}\n\n  ## the toleration configs for the worker Pods\n  ## - spec for Toleration:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n  ##\n  tolerations: []\n\n  ## the security context for the worker Pods\n  ## - spec for PodSecurityContext:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core\n  ##\n  securityContext: {}\n\n  ## labels for the worker StatefulSet\n  ##\n  labels: {}\n\n  ## Pod labels for the worker StatefulSet\n  ##\n  podLabels: {}\n\n  ## annotations for the worker StatefulSet\n  ##\n  annotations: {}\n\n  ## Pod annotations for the worker StatefulSet\n  ##\n  podAnnotations: {}\n\n  ## if we add the annotation: \"cluster-autoscaler.kubernetes.io/safe-to-evict\" = \"true\"\n  ##\n  safeToEvict: true\n\n  ## configs for the PodDisruptionBudget of the worker StatefulSet\n  ##\n  podDisruptionBudget:\n    ## if a PodDisruptionBudget resource is created for the worker StatefulSet\n    ##\n    enabled: false\n\n    ## the `apiVersion` to use for PodDisruptionBudget resources\n    ## - for Kubernetes 1.21 and later: \"policy/v1\"\n    ## - for Kubernetes 1.20 and before: \"policy/v1beta1\"\n    ##\n    apiVersion: policy/v1\n\n    ## the maximum unavailable pods/percentage for the worker StatefulSet\n    ##\n    maxUnavailable: \"\"\n\n    ## the minimum available pods/percentage for the worker StatefulSet\n    ##\n    minAvailable: \"\"\n\n  ## configs for the HorizontalPodAutoscaler of the worker Pods\n  ## - [WARNING] if using git-sync, ensure `dags.gitSync.resources` is set\n  ## - [WARNING] if using worker log-cleanup, ensure `workers.logCleanup.resources` is set\n  ##\n  ## ____ EXAMPLE _______________\n  ##   autoscaling:\n  ##     enabled: true\n  ##     maxReplicas: 16\n  ##     metrics:\n  ##     - type: Resource\n  ##       resource:\n  ##         name: memory\n  ##         target:\n  ##           type: Utilization\n  ##           averageUtilization: 80\n  ##\n  autoscaling:\n    enabled: true\n    maxReplicas: 40\n    metrics: []\n\n    ## the `apiVersion` to use for HorizontalPodAutoscaler resources\n    ## - for Kubernetes 1.23 and later: \"autoscaling/v2\"\n    ## - for Kubernetes 1.22 and before: \"autoscaling/v2beta2\"\n    ##\n    apiVersion: autoscaling/v2\n\n  ## configs for the celery worker Pods\n  ##\n  celery:\n    ## if celery worker Pods are gracefully terminated\n    ## - consider defining a `workers.podDisruptionBudget` to prevent there not being\n    ##   enough available workers during graceful termination waiting periods\n    ##\n    ## graceful termination process:\n    ##  1. prevent worker accepting new tasks\n    ##  2. wait AT MOST `workers.celery.gracefullTerminationPeriod` for tasks to finish\n    ##  3. send SIGTERM to worker\n    ##  4. wait AT MOST `workers.terminationPeriod` for kill to finish\n    ##  5. send SIGKILL to worker\n    ##\n    gracefullTermination: true\n\n    ## how many seconds to wait for tasks to finish before SIGTERM of the celery worker\n    ##\n    gracefullTerminationPeriod: 600\n\n  ## how many seconds to wait after SIGTERM before SIGKILL of the celery worker\n  ## - [WARNING] tasks that are still running during SIGKILL will be orphaned, this is important\n  ##   to understand with KubernetesPodOperator(), as Pods may continue running\n  ##\n  terminationPeriod: 60\n\n  ## configs for the log-cleanup sidecar of the worker Pods\n  ## - helps prevent excessive log buildup by regularly deleting old files\n  ##\n  logCleanup:\n    ## if the log-cleanup sidecar is enabled\n    ## - [WARNING] must be disabled if `logs.persistence.enabled` is `true`\n    ##\n    enabled: true\n\n    ## resource requests/limits for the log-cleanup container\n    ## - spec of ResourceRequirements:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n    ##\n    resources: {}\n\n    ## the number of minutes to retain log files (by last-modified time)\n    ##\n    retentionMinutes: 6000\n\n    ## the number of seconds between each check for files to delete\n    ##\n    intervalSeconds: 600\n\n  ## extra pip packages to install in the worker Pod\n  ##\n  ## ____ EXAMPLE _______________\n  ##   extraPipPackages:\n  ##     - \"SomeProject==1.0.0\"\n  ##\n  extraPipPackages:\n  - \"apache-airflow-providers-apache-kafka\"\n  - \"apache-airflow-providers-mysql\"\n  - \"apache-airflow-providers-common-sql\"\n  - \"airflow-providers-clickhouse\"\n  - \"apache-airflow\"\n  - \"clickhouse-driver\"\n  - \"airflow-clickhouse-plugin\"\n  - \"airflow-provider-kafka\"\n  - \"influxdb-client\"\n  - \"pymongo\"\n  - \"pysnmp\"\n  - \"sqlalchemy\"\n  - \"boto3\"\n  - \"pysftp\"\n  - \"apache-airflow-providers-mongo\"\n  - \"snakebite\"\n  - \"pyarrow\"\n  - \"hdfs\"\n  - \"psycopg2-binary\"\n  - \"minio\"\n  - \"eloquent\"\n  - \"redis\"\n  - \"pandas\"\n  - \"mysql-connector-python\"\n  - \"requests\"\n  - \"datetime\"\n  ## extra VolumeMounts for the worker Pods\n  ## - spec for VolumeMount:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volumemount-v1-core\n  ##\n  extraVolumeMounts: []\n\n  ## extra Volumes for the worker Pods\n  ## - spec for Volume:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volume-v1-core\n  ##\n  extraVolumes: []\ntriggerer:\n  ## if the airflow triggerer should be deployed\n  ## - [WARNING] the triggerer component was added in airflow 2.2.0\n  ## - [WARNING] if `airflow.legacyCommands` is `true` the triggerer will NOT be deployed\n  ##\n  enabled: true\n\n  ## the number of triggerer Pods to run\n  ## - if you set this \u003e1 we recommend defining a `triggerer.podDisruptionBudget`\n  ##\n  replicas: 10\n\n  ## resource requests/limits for the triggerer Pods\n  ## - spec for ResourceRequirements:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n  ##\n  resources:\n    requests:\n      cpu: \"200m\" # Solicita 100 milicore, 0.1 core\n      memory: \"400Mi\" # Solicita 200 MiB de memoria\n    limits:\n      cpu: \"500m\" # Límite de 500 milicore, 0.5 core\n      memory: \"600Mi\" # Límite de 500 MiB de memoria\n\n  ## the nodeSelector configs for the triggerer Pods\n  ## - docs for nodeSelector:\n  ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n  ##\n  nodeSelector: {}\n\n  ## the affinity configs for the triggerer Pods\n  ## - spec for Affinity:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n  ##\n  affinity: {}\n\n  ## the toleration configs for the triggerer Pods\n  ## - spec for Toleration:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n  ##\n  tolerations: []\n\n  ## the security context for the triggerer Pods\n  ## - spec for PodSecurityContext:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core\n  ##\n  securityContext: {}\n\n  ## labels for the triggerer Deployment\n  ##\n  labels: {}\n\n  ## Pod labels for the triggerer Deployment\n  ##\n  podLabels: {}\n\n  ## annotations for the triggerer Deployment\n  ##\n  annotations: {}\n\n  ## Pod annotations for the triggerer Deployment\n  ##\n  podAnnotations: {}\n\n  ## if we add the annotation: \"cluster-autoscaler.kubernetes.io/safe-to-evict\" = \"true\"\n  ##\n  safeToEvict: true\n\n  ## configs for the PodDisruptionBudget of the triggerer Deployment\n  ##\n  podDisruptionBudget:\n    ## if a PodDisruptionBudget resource is created for the triggerer Deployment\n    ##\n    enabled: false\n\n    ## the `apiVersion` to use for PodDisruptionBudget resources\n    ## - for Kubernetes 1.21 and later: \"policy/v1\"\n    ## - for Kubernetes 1.20 and before: \"policy/v1beta1\"\n    ##\n    apiVersion: policy/v1\n\n    ## the maximum unavailable pods/percentage for the triggerer Deployment\n    ##\n    maxUnavailable: \"\"\n\n    ## the minimum available pods/percentage for the triggerer Deployment\n    ##\n    minAvailable: \"\"\n\n  ## maximum number of triggers each triggerer will run at once (sets `AIRFLOW__TRIGGERER__DEFAULT_CAPACITY`)\n  ##\n  capacity: 1000\n\n  ## configs for the triggerer Pods' liveness probe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 10\n    periodSeconds: 30\n    timeoutSeconds: 60\n    failureThreshold: 5\n\n  ## extra pip packages to install in the triggerer Pod\n  ##\n  ## ____ EXAMPLE _______________\n  ##   extraPipPackages:\n  ##     - \"SomeProject==1.0.0\"\n  ##\n  extraPipPackages:\n  - \"apache-airflow-providers-apache-kafka\"\n  - \"apache-airflow-providers-mysql\"\n  - \"apache-airflow-providers-common-sql\"\n  - \"airflow-providers-clickhouse\"\n  - \"apache-airflow\"\n  - \"clickhouse-driver\"\n  - \"airflow-clickhouse-plugin\"\n  - \"airflow-provider-kafka\"\n  - \"influxdb-client\"\n  - \"pymongo\"\n  - \"pysnmp\"\n  - \"sqlalchemy\"\n  - \"boto3\"\n  - \"pysftp\"\n  - \"apache-airflow-providers-mongo\"\n  - \"snakebite\"\n  - \"pyarrow\"\n  - \"hdfs\"\n  - \"psycopg2-binary\"\n  - \"minio\"\n  - \"eloquent\"\n  - \"redis\"\n  - \"pandas\"\n  - \"mysql-connector-python\"\n  - \"requests\"\n  - \"datetime\"\n\n  ## extra VolumeMounts for the triggerer Pods\n  ## - spec for VolumeMount:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volumemount-v1-core\n  ##\n  extraVolumeMounts: []\n\n  ## extra Volumes for the triggerer Pods\n  ## - spec for Volume:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volume-v1-core\n  ##\n  extraVolumes: []\nflower:\n  ## if the airflow flower UI should be deployed\n  ##\n  enabled: true\n\n  ## the number of flower Pods to run\n  ## - if you set this \u003e1 we recommend defining a `flower.podDisruptionBudget`\n  ##\n  replicas: 10\n\n  ## resource requests/limits for the flower Pod\n  ## - spec for ResourceRequirements:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n  ##\n  resources: {}\n\n  ## the nodeSelector configs for the flower Pods\n  ## - docs for nodeSelector:\n  ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n  ##\n  nodeSelector: {}\n\n  ## the affinity configs for the flower Pods\n  ## - spec for Affinity:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n  ##\n  affinity: {}\n\n  ## the toleration configs for the flower Pods\n  ## - spec for Toleration:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n  ##\n  tolerations: []\n\n  ## the security context for the flower Pods\n  ## - spec for PodSecurityContext:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core\n  ##\n  securityContext: {}\n\n  ## labels for the flower Deployment\n  ##\n  labels: {}\n\n  ## Pod labels for the flower Deployment\n  ##\n  podLabels: {}\n\n  ## annotations for the flower Deployment\n  ##\n  annotations: {}\n\n  ## Pod annotations for the flower Deployment\n  ##\n  podAnnotations: {}\n\n  ## if we add the annotation: \"cluster-autoscaler.kubernetes.io/safe-to-evict\" = \"true\"\n  ##\n  safeToEvict: true\n\n  ## configs for the PodDisruptionBudget of the flower Deployment\n  ##\n  podDisruptionBudget:\n    ## if a PodDisruptionBudget resource is created for the flower Deployment\n    ##\n    enabled: false\n\n    ## the `apiVersion` to use for PodDisruptionBudget resources\n    ## - for Kubernetes 1.21 and later: \"policy/v1\"\n    ## - for Kubernetes 1.20 and before: \"policy/v1beta1\"\n    ##\n    apiVersion: policy/v1\n\n    ## the maximum unavailable pods/percentage for the flower Deployment\n    ##\n    maxUnavailable: \"\"\n\n    ## the minimum available pods/percentage for the flower Deployment\n    ##\n    minAvailable: \"\"\n\n  ## the name of a pre-created secret containing the basic authentication value for flower\n  ## - this will override any value of `config.AIRFLOW__CELERY__FLOWER_BASIC_AUTH`\n  ##\n  basicAuthSecret: \"\"\n\n  ## the key within `flower.basicAuthSecret` containing the basic authentication string\n  ##\n  basicAuthSecretKey: \"\"\n\n  ## configs for the Service of the flower Pods\n  ##\n  service:\n    annotations: {}\n    type: ClusterIP\n    externalPort: 5555\n    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n    nodePort:\n      http:\n\n  ## configs for the flower Pods' readinessProbe probe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 6\n\n  ## configs for the flower Pods' liveness probe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 6\n\n  ## extra pip packages to install in the flower Pod\n  ##\n  ## ____ EXAMPLE _______________\n  ##   extraPipPackages:\n  ##     - \"SomeProject==1.0.0\"\n  ##\n  extraPipPackages:\n  - \"apache-airflow-providers-apache-kafka\"\n  - \"apache-airflow-providers-mysql\"\n  - \"apache-airflow-providers-common-sql\"\n  - \"airflow-providers-clickhouse\"\n  - \"apache-airflow\"\n  - \"clickhouse-driver\"\n  - \"airflow-clickhouse-plugin\"\n  - \"airflow-provider-kafka\"\n  - \"influxdb-client\"\n  - \"pymongo\"\n  - \"pysnmp\"\n  - \"sqlalchemy\"\n  - \"boto3\"\n  - \"pysftp\"\n  - \"apache-airflow-providers-mongo\"\n  - \"snakebite\"\n  - \"pyarrow\"\n  - \"hdfs\"\n  - \"psycopg2-binary\"\n  - \"minio\"\n  - \"eloquent\"\n  - \"redis\"\n  - \"pandas\"\n  - \"mysql-connector-python\"\n  - \"requests\"\n  - \"datetime\"\n\n  ## extra VolumeMounts for the flower Pods\n  ## - spec for VolumeMount:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volumemount-v1-core\n  ##\n  extraVolumeMounts: []\n\n  ## extra Volumes for the flower Pods\n  ## - spec for Volume:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volume-v1-core\n  ##\n  extraVolumes: []\n\n\n\nlogs:\n  path: /opt/airflow/logs\n  persistence:\n    enabled: false\n    existingClaim: \"\"\n    subPath: \"\"\n    storageClass: \"\"\n    accessMode: ReadWriteMany\n    size: 5Gi\ndags:\n  path: /opt/airflow/dags\n  persistence:\n    enabled: false\n    existingClaim: \"\"\n    subPath: \"\"\n    storageClass: \"\"\n    accessMode: ReadOnlyMany\n    size: 1Gi\n  gitSync:\n    enabled: true\n    image:\n      repository: registry.k8s.io/git-sync/git-sync\n      tag: v3.6.5\n      pullPolicy: IfNotPresent\n      uid: 65533\n      gid: 65533\n    resources: {}\n    repo: \"https://github.com/Bifrost3-0/airflow-dags.git\"\n    repoSubPath: \"DAGS/Production\"\n    branch: main\n    revision: HEAD\n    depth: 1\n    syncWait: 60\n    syncTimeout: 120\n    submodules: recursive\n    httpSecret: airflow-git-https-secret\n    httpSecretUsernameKey: \"httpSecretUsernameKey\"\n    httpSecretPasswordKey: \"httpSecretPasswordKey\"\n    maxFailures: 0\ningress:\n  enabled: false\n  apiVersion: networking.k8s.io/v1\n  web:\n    annotations: {}\n    labels: {}\n    path: \"\"\n    host: \"192.168.36.90\"\n    ingressClassName: \"\"\n    tls:\n      enabled: false\n      secretName: \"\"\n    precedingPaths: []\n    succeedingPaths: []\n  flower:\n    annotations: {}\n\n    ## additional labels for the flower Ingress\n    ##\n    labels: {}\n\n    ## the path for the flower Ingress\n    ## - [WARNING] do NOT include the trailing slash (for root, set an empty string)\n    ##\n    ## ____ EXAMPLE _______________\n    ##   # flower URL: http://example.com/airflow/flower\n    ##   path: \"/airflow/flower\"\n    ##\n    path: \"\"\n\n    ## the hostname for the flower Ingress\n    ##\n    host: \"\"\n\n    ## the Ingress Class for the flower Ingress\n    ## - [WARNING] requires Kubernetes 1.18 or later, use \"kubernetes.io/ingress.class\" annotation for older versions\n    ##\n    ingressClassName: \"\"\n\n    ## configs for flower Ingress TLS\n    ##\n    tls:\n      ## enable TLS termination for the flower Ingress\n      ##\n      enabled: false\n\n      ## the name of a pre-created Secret containing a TLS private key and certificate\n      ##\n      secretName: \"\"\n\n    ## http paths to add to the flower Ingress before the default path\n    ##\n    ## ____ EXAMPLE _______________\n    ##   precedingPaths:\n    ##     - path: \"/*\"\n    ##       serviceName: \"my-service\"\n    ##       servicePort: \"port-name\"\n    ##\n    precedingPaths: []\n\n    ## http paths to add to the flower Ingress after the default path\n    ##\n    ## ____ EXAMPLE _______________\n    ##   succeedingPaths:\n    ##     - path: \"/extra-service\"\n    ##       serviceName: \"my-service\"\n    ##       servicePort: \"port-name\"\n    ##\n    succeedingPaths: []\n\n###################################\n## CONFIG | Kubernetes RBAC\n###################################\nrbac:\n  ## if Kubernetes RBAC resources are created\n  ## - these allow the service account to create/delete Pods in the airflow namespace,\n  ##   which is required for the KubernetesPodOperator() to function\n  ##\n  create: true\n\n  ## if the created RBAC Role has GET/LIST on Event resources\n  ## - this is needed for KubernetesPodOperator() to use `log_events_on_failure=True`\n  ##\n  events: true\n\n###################################\n## CONFIG | Kubernetes ServiceAccount\n###################################\nserviceAccount:\n  ## if a Kubernetes ServiceAccount is created\n  ## - if `false`, you must create the service account outside this chart with name: `serviceAccount.name`\n  ##\n  create: true\n\n  ## the name of the ServiceAccount\n  ## - by default the name is generated using the `airflow.serviceAccountName` template in `_helpers/common.tpl`\n  ##\n  name: \"\"\n\n  ## annotations for the ServiceAccount\n  ##\n  ## ____ EXAMPLE _______________\n  ##   # EKS - IAM Roles for Service Accounts\n  ##   annotations:\n  ##     eks.amazonaws.com/role-arn: \"arn:aws:iam::XXXXXXXXXX:role/\u003c\u003cMY-ROLE-NAME\u003e\u003e\"\n  ##\n  ## ____ EXAMPLE _______________\n  ##   # GKE - WorkloadIdentity\n  ##   annotations:\n  ##     iam.gke.io/gcp-service-account: \"\u003c\u003cGCP_SERVICE\u003e\u003e@\u003c\u003cGCP_PROJECT\u003e\u003e.iam.gserviceaccount.com\"\n  ##\n  annotations: {}\n\n###################################\n## CONFIG | Kubernetes Extra Manifests\n###################################\n## a list of extra Kubernetes manifests that will be deployed alongside the chart\n## - helm templates within these strings will be rendered\n##\n## ____ EXAMPLE _______________\n##   extraManifests:\n##     - |\n##       apiVersion: v1\n##       kind: Secret\n##       metadata:\n##         name: airflow-postgres\n##       data:\n##         postgresql-password: {{ `password1` | b64enc | quote }}\n##     - |\n##       apiVersion: apps/v1\n##       kind: Deployment\n##       metadata:\n##         name: {{ include \"airflow.fullname\" . }}-busybox\n##         labels:\n##           app: {{ include \"airflow.labels.app\" . }}\n##           component: busybox\n##           chart: {{ include \"airflow.labels.chart\" . }}\n##           release: {{ .Release.Name }}\n##           heritage: {{ .Release.Service }}\n##       spec:\n##         replicas: 1\n##         selector:\n##           matchLabels:\n##             app: {{ include \"airflow.labels.app\" . }}\n##             component: busybox\n##             release: {{ .Release.Name }}\n##         template:\n##           metadata:\n##             labels:\n##               app: {{ include \"airflow.labels.app\" . }}\n##               component: busybox\n##               release: {{ .Release.Name }}\n##           spec:\n##             containers:\n##               - name: busybox\n##                 image: busybox:1.35\n##                 command:\n##                   - \"/bin/sh\"\n##                   - \"-c\"\n##                 args:\n##                   - |\n##                     ## to break the infinite loop when we receive SIGTERM\n##                     trap \"exit 0\" SIGTERM;\n##                     ## keep the container running (so people can `kubectl exec -it` into it)\n##                     while true; do\n##                       echo \"I am alive...\";\n##                       sleep 30;\n##                     done\n##\nextraManifests: []\n\n###################################\n## DATABASE | PgBouncer\n###################################\npgbouncer:\n  ## if the pgbouncer Deployment is created\n  ##\n  enabled: true\n\n  ## configs for the pgbouncer container image\n  ##\n  image:\n    repository: ghcr.io/airflow-helm/pgbouncer\n    tag: 1.18.0-patch.1\n    pullPolicy: IfNotPresent\n    uid: 1001\n    gid: 1001\n\n  ## resource requests/limits for the pgbouncer Pods\n  ## - spec for ResourceRequirements:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n  ##\n  resources: {}\n\n  ## the nodeSelector configs for the pgbouncer Pods\n  ## - docs for nodeSelector:\n  ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n  ##\n  nodeSelector: {}\n\n  ## the affinity configs for the pgbouncer Pods\n  ## - spec for Affinity:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n  ##\n  affinity: {}\n\n  ## the toleration configs for the pgbouncer Pods\n  ## - spec for Toleration:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n  ##\n  tolerations: []\n\n  ## the security context for the pgbouncer Pods\n  ## - spec for PodSecurityContext:\n  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#podsecuritycontext-v1-core\n  ##\n  securityContext: {}\n\n  ## Labels for the pgbouncer Deployment\n  ##\n  labels: {}\n\n  ## Pod labels for the pgbouncer Deployment\n  ##\n  podLabels: {}\n\n  ## annotations for the pgbouncer Deployment\n  ##\n  annotations: {}\n\n  ## Pod annotations for the pgbouncer Deployment\n  ##\n  podAnnotations: {}\n\n  ## if we add the annotation: \"cluster-autoscaler.kubernetes.io/safe-to-evict\" = \"true\"\n  ##\n  safeToEvict: true\n\n  ## configs for the PodDisruptionBudget of the pgbouncer Deployment\n  ##\n  podDisruptionBudget:\n    ## if a PodDisruptionBudget resource is created for the pgbouncer Deployment\n    ##\n    enabled: false\n\n    ## the `apiVersion` to use for PodDisruptionBudget resources\n    ## - for Kubernetes 1.21 and later: \"policy/v1\"\n    ## - for Kubernetes 1.20 and before: \"policy/v1beta1\"\n    ##\n    apiVersion: policy/v1\n\n    ## the maximum unavailable pods/percentage for the pgbouncer Deployment\n    ##\n    maxUnavailable:\n\n    ## the minimum available pods/percentage for the pgbouncer Deployment\n    ##\n    minAvailable:\n\n  ## configs for the pgbouncer Pods' liveness probe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 30\n    timeoutSeconds: 60\n    failureThreshold: 3\n\n  ## configs for the pgbouncer Pods' startup probe\n  ##\n  startupProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    timeoutSeconds: 15\n    failureThreshold: 30\n\n  ## the maximum number of seconds to wait for queries upon pod termination, before force killing\n  ##\n  terminationGracePeriodSeconds: 120\n\n  ## sets pgbouncer config: `auth_type`\n  ##\n  authType: md5\n\n  ## sets pgbouncer config: `max_client_conn`\n  ##\n  maxClientConnections: 1000\n\n  ## sets pgbouncer config: `default_pool_size`\n  ##\n  poolSize: 20\n\n  ## sets pgbouncer config: `log_disconnections`\n  ##\n  logDisconnections: 0\n\n  ## sets pgbouncer config: `log_connections`\n  ##\n  logConnections: 0\n\n  ## ssl configs for: clients -\u003e pgbouncer\n  ##\n  clientSSL:\n    ## sets pgbouncer config: `client_tls_sslmode`\n    ##\n    mode: prefer\n\n    ## sets pgbouncer config: `client_tls_ciphers`\n    ##\n    ciphers: normal\n\n    ## sets pgbouncer config: `client_tls_ca_file`\n    ##\n    caFile:\n      existingSecret: \"\"\n      existingSecretKey: root.crt\n\n    ## sets pgbouncer config: `client_tls_key_file`\n    ## - [WARNING] a self-signed cert \u0026 key are generated if left empty\n    ##\n    keyFile:\n      existingSecret: \"\"\n      existingSecretKey: client.key\n\n    ## sets pgbouncer config: `client_tls_cert_file`\n    ## - [WARNING] a self-signed cert \u0026 key are generated if left empty\n    ##\n    certFile:\n      existingSecret: \"\"\n      existingSecretKey: client.crt\n\n  ## ssl configs for: pgbouncer -\u003e postgres\n  ##\n  serverSSL:\n    ## sets pgbouncer config: `server_tls_sslmode`\n    ##\n    mode: prefer\n\n    ## sets pgbouncer config: `server_tls_ciphers`\n    ##\n    ciphers: normal\n\n    ## sets pgbouncer config: `server_tls_ca_file`\n    ##\n    caFile:\n      existingSecret: \"\"\n      existingSecretKey: root.crt\n\n    ## sets pgbouncer config: `server_tls_key_file`\n    ##\n    keyFile:\n      existingSecret: \"\"\n      existingSecretKey: server.key\n\n    ## sets pgbouncer config: `server_tls_cert_file`\n    ##\n    certFile:\n      existingSecret: \"\"\n      existingSecretKey: server.crt\n\n###################################\n## DATABASE | Embedded Postgres\n###################################\npostgresql:\n  ## if the `stable/postgresql` chart is used\n  ## - [WARNING] the embedded Postgres is NOT SUITABLE for production deployments of Airflow\n  ## - [WARNING] consider using an external database with `externalDatabase.*`\n  ## - set to `false` if using `externalDatabase.*`\n  ##\n  enabled: true\n  metrics:\n    enabled: true\n  ## configs for the postgres container image\n  ##\n  image:\n    registry: ghcr.io\n    repository: airflow-helm/postgresql-bitnami\n    tag: 11.16-patch.0\n    pullPolicy: IfNotPresent\n\n  ## the postgres database to use\n  ##\n  postgresqlDatabase: airflow\n\n  ## the postgres user to create\n  ##\n  postgresqlUsername: postgres\n\n  ## the postgres user's password\n  ##\n  postgresqlPassword: airflow\n\n  ## the name of a pre-created secret containing the postgres password\n  ##\n  existingSecret: \"\"\n\n  ## the key within `postgresql.existingSecret` containing the password string\n  ##\n  existingSecretKey: \"postgresql-password\"\n\n  ## configs for the PVC of postgresql\n  ##\n  persistence:\n    ## if postgres will use Persistent Volume Claims to store data\n    ## - [WARNING] if false, data will be LOST as postgres Pods restart\n    ##\n    enabled: true\n\n    ## the name of the StorageClass used by the PVC\n    ##\n    storageClass: \"\"\n\n    ## the access modes of the PVC\n    ##\n    accessModes:\n    - ReadWriteOnce\n\n    ## the size of PVC to request\n    ##\n    size: 25Gi\n\n  ## configs for the postgres StatefulSet\n  ##\n  master:\n    ## the nodeSelector configs for the postgres Pods\n    ## - docs for nodeSelector:\n    ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n    ##\n    nodeSelector: {}\n\n    ## the affinity configs for the postgres Pods\n    ## - spec for Affinity:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n    ##\n    affinity: {}\n\n    ## the toleration configs for the postgres Pods\n    ## - spec for Toleration:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n    ##\n    tolerations: []\n\n    ## annotations for the postgres Pods\n    ##\n    podAnnotations:\n      cluster-autoscaler.kubernetes.io/safe-to-evict: \"true\"\n\n###################################\n## DATABASE | External Database\n###################################\nexternalDatabase:\n  ## the type of external database\n  ## - allowed values: \"mysql\", \"postgres\"\n  ##\n  type: postgres\n\n  ## the host of the external database\n  ##\n  host: localhost\n\n  ## the port of the external database\n  ##\n  port: 5432\n\n  ## the database/scheme to use within the external database\n  ##\n  database: airflow\n\n  ## the username for the external database\n  ##\n  user: airflow\n\n  ## the name of a pre-created secret containing the external database user\n  ## - if set, this overrides `externalDatabase.user`\n  ##\n  userSecret: \"\"\n\n  ## the key within `externalDatabase.userSecret` containing the user string\n  ##\n  userSecretKey: \"postgresql-user\"\n\n  ## the password for the external database\n  ## - [WARNING] to avoid storing the password in plain-text within your values,\n  ##   create a Kubernetes secret and use `externalDatabase.passwordSecret`\n  ##\n  password: \"\"\n\n  ## the name of a pre-created secret containing the external database password\n  ## - if set, this overrides `externalDatabase.password`\n  ##\n  passwordSecret: \"\"\n\n  ## the key within `externalDatabase.passwordSecret` containing the password string\n  ##\n  passwordSecretKey: \"postgresql-password\"\n\n  ## extra connection-string properties for the external database\n  ##\n  ## ____ EXAMPLE _______________\n  ##   # require SSL (only for Postgres)\n  ##   properties: \"?sslmode=require\"\n  ##\n  properties: \"\"\n\n###################################\n## DATABASE | Embedded Redis\n###################################\nredis:\n  ## if the `stable/redis` chart is used\n  ## - set to `false` if `airflow.executor` is `KubernetesExecutor`\n  ## - set to `false` if using `externalRedis.*`\n  ##\n  enabled: true\n\n  ## configs for the redis container image\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/redis\n    tag: 5.0.14-debian-10-r173\n    pullPolicy: IfNotPresent\n\n  ## the redis password\n  ##\n  password: airflow\n\n  ## the name of a pre-created secret containing the redis password\n  ##\n  existingSecret: \"\"\n\n  ## the key within `redis.existingSecret` containing the password string\n  ##\n  existingSecretPasswordKey: \"redis-password\"\n\n  ## configs for redis cluster mode\n  ##\n  cluster:\n    ## if redis runs in cluster mode\n    ##\n    enabled: false\n\n    ## the number of redis slaves\n    ##\n    slaveCount: 1\n\n  ## configs for the redis master StatefulSet\n  ##\n  master:\n    ## resource requests/limits for the redis master Pods\n    ## - spec for ResourceRequirements:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n    ##\n    resources: {}\n\n    ## the nodeSelector configs for the redis master Pods\n    ## - docs for nodeSelector:\n    ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n    ##\n    nodeSelector: {}\n\n    ## the affinity configs for the redis master Pods\n    ## - spec for Affinity:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n    ##\n    affinity: {}\n\n    ## the toleration configs for the redis master Pods\n    ## - spec for Toleration:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n    ##\n    tolerations: []\n\n    ## annotations for the redis master Pods\n    ##\n    podAnnotations:\n      cluster-autoscaler.kubernetes.io/safe-to-evict: \"true\"\n\n    ## configs for the PVC of the redis master Pods\n    ##\n    persistence:\n      ## use a PVC to persist data\n      ##\n      enabled: false\n\n      ## the name of the StorageClass used by the PVC\n      ##\n      storageClass: \"\"\n\n      ## the access mode of the PVC\n      ##\n      accessModes:\n      - ReadWriteOnce\n\n      ## the size of PVC to request\n      ##\n      size: 8Gi\n\n  ## configs for the redis slave StatefulSet\n  ## - only used if `redis.cluster.enabled` is `true`\n  ##\n  slave:\n    ## resource requests/limits for the slave Pods\n    ## - spec for ResourceRequirements:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core\n    ##\n    resources: {}\n\n    ## the nodeSelector configs for the redis slave Pods\n    ## - docs for nodeSelector:\n    ##   https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector\n    ##\n    nodeSelector: {}\n\n    ## the affinity configs for the redis slave Pods\n    ## - spec for Affinity:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#affinity-v1-core\n    ##\n    affinity: {}\n\n    ## the toleration configs for the redis slave Pods\n    ## - spec for Toleration:\n    ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#toleration-v1-core\n    ##\n    tolerations: []\n\n    ## annotations for the slave Pods\n    ##\n    podAnnotations:\n      cluster-autoscaler.kubernetes.io/safe-to-evict: \"true\"\n\n    ## configs for the PVC of the redis slave Pods\n    ##\n    persistence:\n      ## use a PVC to persist data\n      ##\n      enabled: false\n\n      ## the name of the StorageClass used by the PVC\n      ##\n      storageClass: \"\"\n\n      ## the access mode of the PVC\n      ##\n      accessModes:\n      - ReadWriteOnce\n\n      ## the size of PVC to request\n      ##\n      size: 8Gi\n\n###################################\n## DATABASE | External Redis\n###################################\nexternalRedis:\n  ## the host of the external redis\n  ##\n  host: localhost\n\n  ## the port of the external redis\n  ##\n  port: 6379\n\n  ## the database number to use within the external redis\n  ##\n  databaseNumber: 1\n\n  ## the password for the external redis\n  ## - [WARNING] to avoid storing the password in plain-text within your values,\n  ##   create a Kubernetes secret and use `externalRedis.passwordSecret`\n  ##\n  password: \"\"\n\n  ## the name of a pre-created secret containing the external redis password\n  ## - if set, this overrides `externalRedis.password`\n  ##\n  passwordSecret: \"\"\n\n  ## the key within `externalRedis.passwordSecret` containing the password string\n  ##\n  passwordSecretKey: \"redis-password\"\n\n  ## extra connection-string properties for the external redis\n  ##\n  ## ____ EXAMPLE _______________\n  ##   properties: \"?ssl_cert_reqs=CERT_OPTIONAL\"\n  ##\n  properties: \"\"\n\n###################################\n## CONFIG | ServiceMonitor (Prometheus Operator)\n###################################\nserviceMonitor:\n  ## if ServiceMonitor resources should be deployed for airflow webserver\n  ## - [WARNING] you will need a metrics exporter in your `airflow.image`, for example:\n  ##   https://github.com/epoch8/airflow-exporter\n  ## - ServiceMonitor is a resource from prometheus-operator:\n  ##   https://github.com/prometheus-operator/prometheus-operator\n  ##\n  enabled: false\n\n  ## labels for ServiceMonitor, so that Prometheus can select it\n  ##\n  selector:\n    prometheus: kube-prometheus\n\n  ## the ServiceMonitor web endpoint path\n  ##\n  path: /admin/metrics\n\n  ## the ServiceMonitor web endpoint interval\n  ##\n  interval: \"30s\"\n\n###################################\n## CONFIG | PrometheusRule (Prometheus Operator)\n###################################\nprometheusRule:\n  ## if PrometheusRule resources should be deployed for airflow webserver\n  ## - [WARNING] you will need a metrics exporter in your `airflow.image`, for example:\n  ##   https://github.com/epoch8/airflow-exporter\n  ## - PrometheusRule is a resource from prometheus-operator:\n  ##   https://github.com/prometheus-operator/prometheus-operator\n  ##\n  enabled: false\n\n  ## labels for PrometheusRule, so that Prometheus can select it\n  ##\n  additionalLabels: {}\n\n  ## alerting rules for Prometheus\n  ## - docs for alerting rules: https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/\n  ##\n  groups: []\n"
            ],
            "verify": false,
            "version": "8.8.0",
            "wait": false,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.datalake_ns-namespace",
            "kubernetes_secret_v1.airflow"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "metalb",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "metallb",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "metalb",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.13.10",
                "chart": "metallb",
                "name": "metalb",
                "namespace": "metalb",
                "revision": 1,
                "values": "{\"controller\":{\"affinity\":{},\"enabled\":true,\"image\":{\"pullPolicy\":null,\"repository\":\"quay.io/metallb/controller\",\"tag\":null},\"labels\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"logLevel\":\"info\",\"nodeSelector\":{},\"podAnnotations\":{},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{},\"runtimeClassName\":\"\",\"securityContext\":{\"fsGroup\":65534,\"runAsNonRoot\":true,\"runAsUser\":65534},\"serviceAccount\":{\"annotations\":{},\"create\":true,\"name\":\"\"},\"strategy\":{\"type\":\"RollingUpdate\"},\"tolerations\":[]},\"crds\":{\"enabled\":true,\"validationFailurePolicy\":\"Fail\"},\"fullnameOverride\":\"\",\"imagePullSecrets\":[],\"loadBalancerClass\":\"\",\"nameOverride\":\"\",\"prometheus\":{\"controllerMetricsTLSSecret\":\"\",\"metricsPort\":7472,\"namespace\":\"\",\"podMonitor\":{\"additionalLabels\":{},\"annotations\":{},\"enabled\":false,\"interval\":null,\"jobLabel\":\"app.kubernetes.io/name\",\"metricRelabelings\":[],\"relabelings\":[]},\"prometheusRule\":{\"additionalLabels\":{},\"addressPoolExhausted\":{\"enabled\":true,\"labels\":{\"severity\":\"alert\"}},\"addressPoolUsage\":{\"enabled\":true,\"thresholds\":[{\"labels\":{\"severity\":\"warning\"},\"percent\":75},{\"labels\":{\"severity\":\"warning\"},\"percent\":85},{\"labels\":{\"severity\":\"alert\"},\"percent\":95}]},\"annotations\":{},\"bgpSessionDown\":{\"enabled\":true,\"labels\":{\"severity\":\"alert\"}},\"configNotLoaded\":{\"enabled\":true,\"labels\":{\"severity\":\"warning\"}},\"enabled\":false,\"extraAlerts\":[],\"staleConfig\":{\"enabled\":true,\"labels\":{\"severity\":\"warning\"}}},\"rbacPrometheus\":true,\"rbacProxy\":{\"pullPolicy\":null,\"repository\":\"gcr.io/kubebuilder/kube-rbac-proxy\",\"tag\":\"v0.12.0\"},\"scrapeAnnotations\":false,\"serviceAccount\":\"\",\"serviceMonitor\":{\"controller\":{\"additionalLabels\":{},\"annotations\":{},\"tlsConfig\":{\"insecureSkipVerify\":true}},\"enabled\":false,\"interval\":null,\"jobLabel\":\"app.kubernetes.io/name\",\"metricRelabelings\":[],\"relabelings\":[],\"speaker\":{\"additionalLabels\":{},\"annotations\":{},\"tlsConfig\":{\"insecureSkipVerify\":true}}},\"speakerMetricsTLSSecret\":\"\"},\"rbac\":{\"create\":true},\"speaker\":{\"affinity\":{},\"enabled\":true,\"excludeInterfaces\":{\"enabled\":true},\"frr\":{\"enabled\":true,\"image\":{\"pullPolicy\":null,\"repository\":\"quay.io/frrouting/frr\",\"tag\":\"8.4.2\"},\"metricsPort\":7473,\"resources\":{}},\"frrMetrics\":{\"resources\":{}},\"image\":{\"pullPolicy\":null,\"repository\":\"quay.io/metallb/speaker\",\"tag\":null},\"labels\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"logLevel\":\"info\",\"memberlist\":{\"enabled\":true,\"mlBindPort\":7946,\"mlSecretKeyPath\":\"/etc/ml_secret_key\"},\"nodeSelector\":{},\"podAnnotations\":{},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"reloader\":{\"resources\":{}},\"resources\":{},\"runtimeClassName\":\"\",\"serviceAccount\":{\"annotations\":{},\"create\":true,\"name\":\"\"},\"startupProbe\":{\"enabled\":true,\"failureThreshold\":30,\"periodSeconds\":5},\"tolerateMaster\":true,\"tolerations\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"}}}",
                "version": "0.13.10"
              }
            ],
            "name": "metalb",
            "namespace": "metalb",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://metallb.github.io/metallb",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for metallb.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nimagePullSecrets: []\nnameOverride: \"\"\nfullnameOverride: \"\"\nloadBalancerClass: \"\"\n\n# To configure MetalLB, you must specify ONE of the following two\n# options.\n\nrbac:\n  # create specifies whether to install and use RBAC rules.\n  create: true\n\nprometheus:\n  # scrape annotations specifies whether to add Prometheus metric\n  # auto-collection annotations to pods. See\n  # https://github.com/prometheus/prometheus/blob/release-2.1/documentation/examples/prometheus-kubernetes.yml\n  # for a corresponding Prometheus configuration. Alternatively, you\n  # may want to use the Prometheus Operator\n  # (https://github.com/coreos/prometheus-operator) for more powerful\n  # monitoring configuration. If you use the Prometheus operator, this\n  # can be left at false.\n  scrapeAnnotations: false\n\n  # port both controller and speaker will listen on for metrics\n  metricsPort: 7472\n\n  # if set, enables rbac proxy on the controller and speaker to expose\n  # the metrics via tls.\n  # secureMetricsPort: 9120\n\n  # the name of the secret to be mounted in the speaker pod\n  # to expose the metrics securely. If not present, a self signed\n  # certificate to be used.\n  speakerMetricsTLSSecret: \"\"\n\n  # the name of the secret to be mounted in the controller pod\n  # to expose the metrics securely. If not present, a self signed\n  # certificate to be used.\n  controllerMetricsTLSSecret: \"\"\n\n  # prometheus doens't have the permission to scrape all namespaces so we give it permission to scrape metallb's one\n  rbacPrometheus: true\n\n  # the service account used by prometheus\n  # required when \" .Values.prometheus.rbacPrometheus == true \" and \" .Values.prometheus.podMonitor.enabled=true or prometheus.serviceMonitor.enabled=true \"\n  serviceAccount: \"\"\n\n  # the namespace where prometheus is deployed\n  # required when \" .Values.prometheus.rbacPrometheus == true \" and \" .Values.prometheus.podMonitor.enabled=true or prometheus.serviceMonitor.enabled=true \"\n  namespace: \"\"\n\n  # the image to be used for the kuberbacproxy container\n  rbacProxy:\n    repository: gcr.io/kubebuilder/kube-rbac-proxy\n    tag: v0.12.0\n    pullPolicy:\n\n  # Prometheus Operator PodMonitors\n  podMonitor:\n    # enable support for Prometheus Operator\n    enabled: false\n\n    # optional additionnal labels for podMonitors\n    additionalLabels: {}\n\n    # optional annotations for podMonitors\n    annotations: {}\n\n    # Job label for scrape target\n    jobLabel: \"app.kubernetes.io/name\"\n\n    # Scrape interval. If not set, the Prometheus default scrape interval is used.\n    interval:\n\n    # \tmetric relabel configs to apply to samples before ingestion.\n    metricRelabelings: []\n    # - action: keep\n    #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'\n    #   sourceLabels: [__name__]\n\n    # \trelabel configs to apply to samples before ingestion.\n    relabelings: []\n    # - sourceLabels: [__meta_kubernetes_pod_node_name]\n    #   separator: ;\n    #   regex: ^(.*)$\n    #   target_label: nodename\n    #   replacement: $1\n    #   action: replace\n\n  # Prometheus Operator ServiceMonitors. To be used as an alternative\n  # to podMonitor, supports secure metrics.\n  serviceMonitor:\n    # enable support for Prometheus Operator\n    enabled: false\n\n    speaker:\n      # optional additional labels for the speaker serviceMonitor\n      additionalLabels: {}\n      # optional additional annotations for the speaker serviceMonitor\n      annotations: {}\n      # optional tls configuration for the speaker serviceMonitor, in case\n      # secure metrics are enabled.\n      tlsConfig:\n        insecureSkipVerify: true\n\n    controller:\n      # optional additional labels for the controller serviceMonitor\n      additionalLabels: {}\n      # optional additional annotations for the controller serviceMonitor\n      annotations: {}\n      # optional tls configuration for the controller serviceMonitor, in case\n      # secure metrics are enabled.\n      tlsConfig:\n        insecureSkipVerify: true\n\n    # Job label for scrape target\n    jobLabel: \"app.kubernetes.io/name\"\n\n    # Scrape interval. If not set, the Prometheus default scrape interval is used.\n    interval:\n\n    # \tmetric relabel configs to apply to samples before ingestion.\n    metricRelabelings: []\n    # - action: keep\n    #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'\n    #   sourceLabels: [__name__]\n\n    # \trelabel configs to apply to samples before ingestion.\n    relabelings: []\n    # - sourceLabels: [__meta_kubernetes_pod_node_name]\n    #   separator: ;\n    #   regex: ^(.*)$\n    #   target_label: nodename\n    #   replacement: $1\n    #   action: replace\n\n  # Prometheus Operator alertmanager alerts\n  prometheusRule:\n    # enable alertmanager alerts\n    enabled: false\n\n    # optional additionnal labels for prometheusRules\n    additionalLabels: {}\n\n    # optional annotations for prometheusRules\n    annotations: {}\n\n    # MetalLBStaleConfig\n    staleConfig:\n      enabled: true\n      labels:\n        severity: warning\n\n    # MetalLBConfigNotLoaded\n    configNotLoaded:\n      enabled: true\n      labels:\n        severity: warning\n\n    # MetalLBAddressPoolExhausted\n    addressPoolExhausted:\n      enabled: true\n      labels:\n        severity: alert\n\n    addressPoolUsage:\n      enabled: true\n      thresholds:\n        - percent: 75\n          labels:\n            severity: warning\n        - percent: 85\n          labels:\n            severity: warning\n        - percent: 95\n          labels:\n            severity: alert\n\n    # MetalLBBGPSessionDown\n    bgpSessionDown:\n      enabled: true\n      labels:\n        severity: alert\n\n    extraAlerts: []\n\n# controller contains configuration specific to the MetalLB cluster\n# controller.\ncontroller:\n  enabled: true\n  # -- Controller log level. Must be one of: `all`, `debug`, `info`, `warn`, `error` or `none`\n  logLevel: info\n  # command: /controller\n  # webhookMode: enabled\n  image:\n    repository: quay.io/metallb/controller\n    tag:\n    pullPolicy:\n  ## @param controller.updateStrategy.type Metallb controller deployment strategy type.\n  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n  ## e.g:\n  ## strategy:\n  ##  type: RollingUpdate\n  ##  rollingUpdate:\n  ##    maxSurge: 25%\n  ##    maxUnavailable: 25%\n  ##\n  strategy:\n    type: RollingUpdate\n  serviceAccount:\n    # Specifies whether a ServiceAccount should be created\n    create: true\n    # The name of the ServiceAccount to use. If not set and create is\n    # true, a name is generated using the fullname template\n    name: \"\"\n    annotations: {}\n  securityContext:\n    runAsNonRoot: true\n    # nobody\n    runAsUser: 65534\n    fsGroup: 65534\n  resources: {}\n    # limits:\n      # cpu: 100m\n      # memory: 100Mi\n  nodeSelector: {}\n  tolerations: []\n  priorityClassName: \"\"\n  runtimeClassName: \"\"\n  affinity: {}\n  podAnnotations: {}\n  labels: {}\n  livenessProbe:\n    enabled: true\n    failureThreshold: 3\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 1\n  readinessProbe:\n    enabled: true\n    failureThreshold: 3\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 1\n\n# speaker contains configuration specific to the MetalLB speaker\n# daemonset.\nspeaker:\n  enabled: true\n  # command: /speaker\n  # -- Speaker log level. Must be one of: `all`, `debug`, `info`, `warn`, `error` or `none`\n  logLevel: info\n  tolerateMaster: true\n  memberlist:\n    enabled: true\n    mlBindPort: 7946\n    mlSecretKeyPath: \"/etc/ml_secret_key\"\n  excludeInterfaces:\n    enabled: true\n  image:\n    repository: quay.io/metallb/speaker\n    tag:\n    pullPolicy:\n  ## @param speaker.updateStrategy.type Speaker daemonset strategy type\n  ## ref: https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set/\n  ##\n  updateStrategy:\n    ## StrategyType\n    ## Can be set to RollingUpdate or OnDelete\n    ##\n    type: RollingUpdate\n  serviceAccount:\n    # Specifies whether a ServiceAccount should be created\n    create: true\n    # The name of the ServiceAccount to use. If not set and create is\n    # true, a name is generated using the fullname template\n    name: \"\"\n    annotations: {}\n  ## Defines a secret name for the controller to generate a memberlist encryption secret\n  ## By default secretName: {{ \"metallb.fullname\" }}-memberlist\n  ##\n  # secretName:\n  resources: {}\n    # limits:\n      # cpu: 100m\n      # memory: 100Mi\n  nodeSelector: {}\n  tolerations: []\n  priorityClassName: \"\"\n  affinity: {}\n  ## Selects which runtime class will be used by the pod.\n  runtimeClassName: \"\"\n  podAnnotations: {}\n  labels: {}\n  livenessProbe:\n    enabled: true\n    failureThreshold: 3\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 1\n  readinessProbe:\n    enabled: true\n    failureThreshold: 3\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 1\n  startupProbe:\n    enabled: true\n    failureThreshold: 30\n    periodSeconds: 5\n  # frr contains configuration specific to the MetalLB FRR container,\n  # for speaker running alongside FRR.\n  frr:\n    enabled: true\n    image:\n      repository: quay.io/frrouting/frr\n      tag: 8.4.2\n      pullPolicy:\n    metricsPort: 7473\n    resources: {}\n\n    # if set, enables a rbac proxy sidecar container on the speaker to\n    # expose the frr metrics via tls.\n    # secureMetricsPort: 9121\n\n  reloader:\n    resources: {}\n\n  frrMetrics:\n    resources: {}\n\ncrds:\n  enabled: true\n  validationFailurePolicy: Fail\n"
            ],
            "verify": false,
            "version": "0.13.10",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.metalb-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "minio_operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "minio",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "minio-ns",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "master",
                "chart": "minio",
                "name": "minio-ns",
                "namespace": "datalake",
                "revision": 7,
                "values": "{\"DeploymentUpdate\":{\"maxSurge\":\"100%\",\"maxUnavailable\":0,\"type\":\"RollingUpdate\"},\"StatefulSetUpdate\":{\"updateStrategy\":\"RollingUpdate\"},\"accessKey\":\"jackcitoxp\",\"additionalAnnotations\":[],\"additionalLabels\":[],\"affinity\":{},\"azuregateway\":{\"enabled\":false,\"replicas\":4},\"bucketRoot\":\"\",\"buckets\":[{\"name\":\"pandora\",\"objectLock\":true,\"objectLockConfig\":{\"retentionDuration\":{\"Days\":90},\"retentionMode\":\"COMPLIANCE\"},\"policy\":\"public\"},{\"name\":\"test\",\"objectLock\":true,\"objectLockConfig\":{\"retentionDuration\":{\"Days\":30},\"retentionMode\":\"COMPLIANCE\"},\"policy\":\"public\"}],\"certsPath\":\"/etc/minio/certs/\",\"clusterDomain\":\"cluster.local\",\"configPathmc\":\"/etc/minio/mc/\",\"defaultBucket\":{\"enabled\":true,\"name\":\"bifrost\",\"objectLock\":true,\"objectLockConfig\":{\"retentionDuration\":{\"Days\":30},\"retentionMode\":\"COMPLIANCE\"},\"policy\":\"public\",\"purge\":false},\"drivesPerNode\":4,\"environment\":{},\"etcd\":{\"clientCert\":\"\",\"clientCertKey\":\"\",\"corednsPathPrefix\":\"\",\"endpoints\":[],\"pathPrefix\":\"\"},\"existingSecret\":\"\",\"extraArgs\":[],\"fullnameOverride\":\"\",\"gcsgateway\":{\"enabled\":false,\"gcsKeyJson\":\"\",\"projectId\":\"\",\"replicas\":4},\"helmKubectlJqImage\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"bskim45/helm-kubectl-jq\",\"tag\":\"3.1.0\"},\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"minio/minio\",\"tag\":\"RELEASE.2021-02-14T04-01-33Z\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{\"kubernetes.io/ingress.class\":\"ingress-traefik\",\"traefik.ingress.kubernetes.io/router.entrypoints\":\"minio\"},\"enabled\":false,\"hosts\":[\"localhost\"],\"labels\":{},\"path\":\"/\",\"tls\":[]},\"makeBucketJob\":{\"annotations\":null,\"podAnnotations\":null,\"resources\":{\"requests\":{\"memory\":\"128Mi\"}},\"securityContext\":{\"enabled\":false,\"fsGroup\":1000,\"runAsGroup\":1000,\"runAsUser\":1000}},\"mcImage\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"minio/mc\",\"tag\":\"RELEASE.2021-02-14T04-28-06Z\"},\"metrics\":{\"serviceMonitor\":{\"additionalLabels\":{},\"enabled\":false,\"relabelConfigs\":{}}},\"mode\":\"standalone\",\"mountPath\":\"/export\",\"nameOverride\":\"\",\"nasgateway\":{\"enabled\":false,\"pv\":null,\"replicas\":4},\"networkPolicy\":{\"allowExternal\":true,\"enabled\":false},\"nodeSelector\":{},\"persistence\":{\"VolumeName\":\"\",\"accessMode\":\"ReadWriteOnce\",\"annotations\":{},\"enabled\":true,\"existingClaim\":\"\",\"size\":\"50Gi\",\"storageClass\":\"\",\"subPath\":\"\"},\"podAnnotations\":{},\"podDisruptionBudget\":{\"enabled\":false,\"maxUnavailable\":1},\"podLabels\":{},\"priorityClassName\":\"\",\"replicas\":4,\"resources\":{\"requests\":{\"memory\":\"4Gi\"}},\"s3gateway\":{\"accessKey\":\"\",\"enabled\":false,\"replicas\":4,\"secretKey\":\"\",\"serviceEndpoint\":\"\"},\"secretKey\":\"Maniac321.\",\"securityContext\":{\"enabled\":true,\"fsGroup\":1000,\"runAsGroup\":1000,\"runAsUser\":1000},\"service\":{\"annotations\":{\"prometheus.io/path\":\"/minio/prometheus/metrics\",\"prometheus.io/port\":\"9000\",\"prometheus.io/scrape\":\"true\"},\"clusterIP\":null,\"externalIPs\":[],\"nodePort\":32000,\"port\":9000,\"type\":\"ClusterIP\"},\"serviceAccount\":{\"create\":true,\"name\":null},\"tls\":{\"certSecret\":\"\",\"enabled\":false,\"privateKey\":\"private.key\",\"publicCrt\":\"public.crt\"},\"tolerations\":[],\"trustedCertsSecret\":\"\",\"updatePrometheusJob\":{\"annotations\":null,\"podAnnotations\":null,\"securityContext\":{\"enabled\":false,\"fsGroup\":1000,\"runAsGroup\":1000,\"runAsUser\":1000}},\"zones\":1}",
                "version": "8.0.10"
              }
            ],
            "name": "minio-ns",
            "namespace": "datalake",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.min.io/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "## Provide a name in place of minio for `app:` labels\n##\nnameOverride: \"\"\n\n## Provide a name to substitute for the full names of resources\n##\nfullnameOverride: \"\"\n\n## set kubernetes cluster domain where minio is running\n##\nclusterDomain: cluster.local\n\n## Set default image, imageTag, and imagePullPolicy. mode is used to indicate the\n##\nimage:\n  repository: minio/minio\n  tag: RELEASE.2021-02-14T04-01-33Z\n  pullPolicy: IfNotPresent\n\n## Set default image, imageTag, and imagePullPolicy for the `mc` (the minio\n## client used to create a default bucket).\n##\nmcImage:\n  repository: minio/mc\n  tag: RELEASE.2021-02-14T04-28-06Z\n  pullPolicy: IfNotPresent\n\n## Set default image, imageTag, and imagePullPolicy for the `jq` (the JSON\n## process used to create secret for prometheus ServiceMonitor).\n##\nhelmKubectlJqImage:\n  repository: bskim45/helm-kubectl-jq\n  tag: 3.1.0\n  pullPolicy: IfNotPresent\n\n## minio server mode, i.e. standalone or distributed.\n## Distributed Minio ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide\n##\nmode: standalone\n\n## Additional labels to include with deployment or statefulset\nadditionalLabels: []\n\n## Additional annotations to include with deployment or statefulset\nadditionalAnnotations: []\n\n## Additional arguments to pass to minio binary\nextraArgs: []\n\n## Update strategy for Deployments\nDeploymentUpdate:\n  type: RollingUpdate\n  maxUnavailable: 0\n  maxSurge: 100%\n\n## Update strategy for StatefulSets\nStatefulSetUpdate:\n  updateStrategy: RollingUpdate\n\n## Pod priority settings\n## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n##\npriorityClassName: \"\"\n\n## Set default accesskey, secretkey, Minio config file path, volume mount path and\n## number of nodes (only used for Minio distributed mode)\n## AccessKey and secretKey is generated when not set\n## Distributed Minio ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide\n##\naccessKey: \"jackcitoxp\"\nsecretKey: \"Maniac321.\"\ncertsPath: \"/etc/minio/certs/\"\nconfigPathmc: \"/etc/minio/mc/\"\nmountPath: \"/export\"\n\n## Use existing Secret that store following variables:\n##\n## | Chart var             | .data.\u003ckey\u003e in Secret    |\n## |:----------------------|:-------------------------|\n## | accessKey             | accesskey                |\n## | secretKey             | secretkey                |\n## | gcsgateway.gcsKeyJson | gcs_key.json             |\n## | s3gateway.accessKey   | awsAccessKeyId           |\n## | s3gateway.secretKey   | awsSecretAccessKey       |\n## | etcd.clientCert       | etcd_client_cert.pem     |\n## | etcd.clientCertKey    | etcd_client_cert_key.pem |\n##\n## All mentioned variables will be ignored in values file.\n## .data.accesskey and .data.secretkey are mandatory,\n## others depend on enabled status of corresponding sections.\nexistingSecret: \"\"\n\n## Override the root directory which the minio server should serve from.\n## If left empty, it defaults to the value of {{ .Values.mountPath }}\n## If defined, it must be a sub-directory of the path specified in {{ .Values.mountPath }}\nbucketRoot: \"\"\n\n# Number of drives attached to a node\ndrivesPerNode: 4\n# Number of MinIO containers running\nreplicas: 4\n# Number of expanded MinIO clusters\nzones: 1\n\n## TLS Settings for Minio\ntls:\n  enabled: false\n  ## Create a secret with private.key and public.crt files and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret\n  certSecret: \"\"\n  publicCrt: public.crt\n  privateKey: private.key\n\n## Trusted Certificates Settings for Minio. Ref: https://docs.minio.io/docs/how-to-secure-access-to-minio-server-with-tls#install-certificates-from-third-party-cas\n## Bundle multiple trusted certificates into one secret and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret\n## When using self-signed certificates, remember to include Minio's own certificate in the bundle with key public.crt.\n## If certSecret is left empty and tls is enabled, this chart installs the public certificate from .Values.tls.certSecret.\ntrustedCertsSecret: \"\"\n\n## Enable persistence using Persistent Volume Claims\n## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n##\npersistence:\n  enabled: true\n  annotations: {}\n\n  ## A manually managed Persistent Volume and Claim\n  ## Requires persistence.enabled: true\n  ## If defined, PVC must be created manually before volume will be bound\n  existingClaim: \"\"\n\n  ## minio data Persistent Volume Storage Class\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  ## Storage class of PV to bind. By default it looks for standard storage class.\n  ## If the PV uses a different storage class, specify that here.\n  storageClass: \"\"\n  VolumeName: \"\"\n  accessMode: ReadWriteOnce\n  size: 50Gi\n\n  ## If subPath is set mount a sub folder of a volume instead of the root of the volume.\n  ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).\n  ##\n  subPath: \"\"\n\n## Expose the Minio service to be accessed from outside the cluster (LoadBalancer service).\n## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.\n## ref: http://kubernetes.io/docs/user-guide/services/\n##\n\nservice:\n  type: ClusterIP\n  clusterIP: ~\n  port: 9000\n  nodePort: 32000\n\n  ## List of IP addresses at which the Prometheus server service is available\n  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n  ##\n  externalIPs: []\n  #   - externalIp1\n\n  annotations:\n    prometheus.io/scrape: 'true'\n    prometheus.io/path:   '/minio/prometheus/metrics'\n    prometheus.io/port:   '9000'\n\n## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/\n##\n\nimagePullSecrets: []\n# - name: \"image-pull-secret\"\n\ningress:\n  enabled: false\n  labels: {}\n    # node-role.kubernetes.io/ingress: platform\n\n  annotations:\n    traefik.ingress.kubernetes.io/router.entrypoints: minio\n    kubernetes.io/ingress.class: ingress-traefik\n    # kubernetes.io/tls-acme: \"true\"\n    # kubernetes.io/ingress.allow-http: \"false\"\n    # kubernetes.io/ingress.global-static-ip-name: \"\"\n    # nginx.ingress.kubernetes.io/secure-backends: \"true\"\n    # nginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\n    # nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0\n  path: /\n  hosts:\n    - 'localhost'\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\n## Node labels for pod assignment\n## Ref: https://kubernetes.io/docs/user-guide/node-selection/\n##\nnodeSelector: {}\ntolerations: []\naffinity: {}\n\n## Add stateful containers to have security context, if enabled MinIO will run as this\n## user and group NOTE: securityContext is only enabled if persistence.enabled=true\nsecurityContext:\n  enabled: true\n  runAsUser: 1000\n  runAsGroup: 1000\n  fsGroup: 1000\n\n# Additational pod annotations\npodAnnotations: {}\n\n# Additional pod labels\npodLabels: {}\n\n## Configure resource requests and limits\n## ref: http://kubernetes.io/docs/user-guide/compute-resources/\n##\nresources:\n  requests:\n    memory: 4Gi\n\n## Create a bucket after minio install\n##\ndefaultBucket:\n  enabled: true\n  ## If enabled, must be a string with length \u003e 0\n  name: bifrost\n  ## Can be one of none|download|upload|public\n  policy: public\n  ## Purge if bucket exists already\n  purge: false\n  objectLock: true\n  objectLockConfig:\n    retentionMode: COMPLIANCE\n    retentionDuration: \n      Days: 30\n  ## set versioning for bucket true|false\n  # versioning: false\n\n## Create multiple buckets after minio install\n## Enabling `defaultBucket` will take priority over this list\n##\nbuckets:\n  - name: pandora\n    objectLock: true\n    policy: public\n    objectLockConfig:\n      retentionMode: COMPLIANCE\n      retentionDuration: \n        Days: 90\n  - name: test\n    objectLock: true\n    policy: public\n    objectLockConfig:\n      retentionMode: COMPLIANCE\n      retentionDuration: \n        Days: 30\n  #   purge: false\n  # - name: bucket2\n  #   policy: none\n  #   purge: false\n\n## Additional Annotations for the Kubernetes Batch (make-bucket-job)\nmakeBucketJob:\n  podAnnotations:\n  annotations:\n  securityContext:\n    enabled: false\n    runAsUser: 1000\n    runAsGroup: 1000\n    fsGroup: 1000\n  resources:\n    requests:\n      memory: 128Mi\n\n## Additional Annotations for the Kubernetes Batch (update-prometheus-secret)\nupdatePrometheusJob:\n  podAnnotations:\n  annotations:\n  securityContext:\n    enabled: false\n    runAsUser: 1000\n    runAsGroup: 1000\n    fsGroup: 1000\n\ns3gateway:\n  enabled: false\n  replicas: 4\n  serviceEndpoint: \"\"\n  accessKey: \"\"\n  secretKey: \"\"\n\n## Use minio as an azure blob gateway, you should disable data persistence so no volume claim are created.\n## https://docs.minio.io/docs/minio-gateway-for-azure\nazuregateway:\n  enabled: false\n  # Number of parallel instances\n  replicas: 4\n\n## Use minio as GCS (Google Cloud Storage) gateway, you should disable data persistence so no volume claim are created.\n## https://docs.minio.io/docs/minio-gateway-for-gcs\n\ngcsgateway:\n  enabled: false\n  # Number of parallel instances\n  replicas: 4\n  # credential json file of service account key\n  gcsKeyJson: \"\"\n  # Google cloud project-id\n  projectId: \"\"\n\n## Use minio on NAS backend\n## https://docs.minio.io/docs/minio-gateway-for-nas\n\nnasgateway:\n  enabled: false\n  # Number of parallel instances\n  replicas: 4\n  # For NAS Gateway, you may want to bind the PVC to a specific PV. To ensure that happens, PV to bind to should have\n  # a label like \"pv: \u003cvalue\u003e\", use value here.\n  pv: ~\n\n## Use this field to add environment variables relevant to Minio server. These fields will be passed on to Minio container(s)\n## when Chart is deployed\nenvironment: {}\n  ## Please refer for comprehensive list https://docs.minio.io/docs/minio-server-configuration-guide.html\n  ## MINIO_DOMAIN: \"chart-example.local\"\n  ## MINIO_BROWSER: \"off\"\n\nnetworkPolicy:\n  enabled: false\n  allowExternal: true\n\n## PodDisruptionBudget settings\n## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/\n##\npodDisruptionBudget:\n  enabled: false\n  maxUnavailable: 1\n\n## Specify the service account to use for the Minio pods. If 'create' is set to 'false'\n## and 'name' is left unspecified, the account 'default' will be used.\nserviceAccount:\n  create: true\n  ## The name of the service account to use. If 'create' is 'true', a service account with that name\n  ## will be created. Otherwise, a name will be auto-generated.\n  name:\n\nmetrics:\n  # Metrics can not be disabled yet: https://github.com/minio/minio/issues/7493\n  serviceMonitor:\n    enabled: false\n    additionalLabels: {}\n    relabelConfigs: {}\n    # namespace: monitoring\n    # interval: 30s\n    # scrapeTimeout: 10s\n\n## ETCD settings: https://github.com/minio/minio/blob/master/docs/sts/etcd.md\n## Define endpoints to enable this section.\netcd:\n  endpoints: []\n  pathPrefix: \"\"\n  corednsPathPrefix: \"\"\n  clientCert: \"\"\n  clientCertKey: \"\""
            ],
            "verify": false,
            "version": "8.0.10",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "mongo",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "mongodb",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "mongo",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "6.0.8",
                "chart": "mongodb",
                "name": "mongo",
                "namespace": "datalake",
                "revision": 4,
                "values": "{\"affinity\":{},\"annotations\":{},\"arbiter\":{\"affinity\":{},\"annotations\":{},\"args\":[],\"command\":[],\"configuration\":\"\",\"containerPorts\":{\"mongodb\":27017},\"containerSecurityContext\":{\"enabled\":true,\"runAsNonRoot\":true,\"runAsUser\":1001},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"enabled\":true,\"existingConfigmap\":\"\",\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraFlags\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostAliases\":[],\"initContainers\":[],\"labels\":{},\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":30,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"pdb\":{\"create\":false,\"maxUnavailable\":\"\",\"minAvailable\":1},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podManagementPolicy\":\"OrderedReady\",\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001,\"sysctls\":[]},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"resources\":{\"limits\":{},\"requests\":{}},\"runtimeClassName\":\"\",\"schedulerName\":\"\",\"service\":{\"annotations\":{},\"extraPorts\":[],\"headless\":{\"annotations\":{}},\"nameOverride\":\"\",\"ports\":{\"mongodb\":27017}},\"sidecars\":[],\"startupProbe\":{\"enabled\":false,\"failureThreshold\":30,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"terminationGracePeriodSeconds\":\"\",\"tolerations\":[],\"topologySpreadConstraints\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"}},\"architecture\":\"standalone\",\"args\":[],\"auth\":{\"database\":\"bifrost\",\"databases\":[\"bifrost\"],\"enabled\":true,\"existingSecret\":\"\",\"password\":\"Maniac321.\",\"passwords\":[\"Maniac321.\"],\"replicaSetKey\":\"\",\"rootPassword\":\"Maniac321.\",\"rootUser\":\"root\",\"username\":\"bifrost\",\"usernames\":[\"bifrost\"]},\"clusterDomain\":\"cluster.local\",\"command\":[],\"commonAnnotations\":{},\"commonLabels\":{},\"configuration\":\"\",\"containerPorts\":{\"mongodb\":27017},\"containerSecurityContext\":{\"enabled\":true,\"runAsNonRoot\":true,\"runAsUser\":1001},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"diagnosticMode\":{\"args\":[\"infinity\"],\"command\":[\"sleep\"],\"enabled\":false},\"directoryPerDB\":false,\"disableJavascript\":false,\"disableSystemLog\":false,\"enableIPv6\":false,\"enableJournal\":true,\"existingConfigmap\":\"\",\"externalAccess\":{\"autoDiscovery\":{\"enabled\":false,\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/kubectl\",\"tag\":\"1.25.11-debian-11-r5\"},\"resources\":{\"limits\":{},\"requests\":{}}},\"enabled\":false,\"externalMaster\":{\"enabled\":false,\"host\":\"\",\"port\":27017},\"hidden\":{\"enabled\":false,\"service\":{\"allocateLoadBalancerNodePorts\":true,\"annotations\":{},\"domain\":\"\",\"externalTrafficPolicy\":\"Local\",\"extraPorts\":[],\"loadBalancerClass\":\"\",\"loadBalancerIPs\":[],\"loadBalancerSourceRanges\":[],\"nodePorts\":[],\"portName\":\"mongodb\",\"ports\":{\"mongodb\":27017},\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"LoadBalancer\"}},\"service\":{\"allocateLoadBalancerNodePorts\":true,\"annotations\":{},\"domain\":\"\",\"externalTrafficPolicy\":\"Local\",\"extraPorts\":[],\"loadBalancerClass\":\"\",\"loadBalancerIPs\":[],\"loadBalancerSourceRanges\":[],\"nodePorts\":[],\"portName\":\"mongodb\",\"ports\":{\"mongodb\":27017},\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"LoadBalancer\"}},\"extraDeploy\":[],\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraFlags\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"fullnameOverride\":\"\",\"global\":{\"imagePullSecrets\":[],\"imageRegistry\":\"\",\"namespaceOverride\":\"\",\"storageClass\":\"\"},\"hidden\":{\"affinity\":{},\"annotations\":{},\"args\":[],\"command\":[],\"configuration\":\"\",\"containerPorts\":{\"mongodb\":27017},\"containerSecurityContext\":{\"enabled\":true,\"runAsNonRoot\":true,\"runAsUser\":1001},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"enabled\":false,\"existingConfigmap\":\"\",\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraFlags\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostAliases\":[],\"initContainers\":[],\"labels\":{},\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":30,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"pdb\":{\"create\":false,\"maxUnavailable\":\"\",\"minAvailable\":1},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"enabled\":true,\"medium\":\"\",\"mountPath\":\"/bitnami/mongodb\",\"size\":\"8Gi\",\"storageClass\":\"\",\"subPath\":\"\",\"volumeClaimTemplates\":{\"dataSource\":{},\"requests\":{},\"selector\":{}}},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podManagementPolicy\":\"OrderedReady\",\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001,\"sysctls\":[]},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"replicaCount\":1,\"resources\":{\"limits\":{},\"requests\":{}},\"runtimeClassName\":\"\",\"schedulerName\":\"\",\"service\":{\"annotations\":{},\"extraPorts\":[],\"headless\":{\"annotations\":{}},\"portName\":\"mongodb\",\"ports\":{\"mongodb\":27017}},\"sidecars\":[],\"startupProbe\":{\"enabled\":false,\"failureThreshold\":30,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"terminationGracePeriodSeconds\":\"\",\"tolerations\":[],\"topologySpreadConstraints\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"}},\"hostAliases\":[],\"image\":{\"debug\":false,\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/mongodb\",\"tag\":\"6.0.7-debian-11-r0\"},\"initContainers\":[],\"initdbScripts\":{},\"initdbScriptsConfigMap\":\"\",\"kubeVersion\":\"\",\"labels\":{},\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":30,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"metrics\":{\"args\":[],\"collector\":{\"all\":false,\"collstats\":false,\"collstatsColls\":[],\"collstatsLimit\":0,\"dbstats\":false,\"diagnosticdata\":true,\"indexstats\":false,\"indexstatsColls\":[],\"replicasetstatus\":true,\"topmetrics\":false},\"command\":[],\"compatibleMode\":true,\"containerPort\":9216,\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"enabled\":true,\"extraFlags\":\"\",\"extraVolumeMounts\":[],\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/mongodb-exporter\",\"tag\":\"0.39.0-debian-11-r10\"},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":15,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":10},\"password\":\"Maniac321.\",\"prometheusRule\":{\"additionalLabels\":{},\"enabled\":false,\"namespace\":\"\",\"rules\":[]},\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":10},\"resources\":{\"limits\":{},\"requests\":{}},\"service\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"{{ .Values.metrics.service.ports.metrics }}\",\"prometheus.io/scrape\":\"true\"},\"extraPorts\":[],\"ports\":{\"metrics\":9216},\"type\":\"ClusterIP\"},\"serviceMonitor\":{\"enabled\":false,\"honorLabels\":false,\"interval\":\"30s\",\"jobLabel\":\"\",\"labels\":{},\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scrapeTimeout\":\"\",\"selector\":{}},\"startupProbe\":{\"enabled\":false,\"failureThreshold\":30,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"username\":\"bifrost\"},\"nameOverride\":\"\",\"namespaceOverride\":\"\",\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"pdb\":{\"create\":false,\"maxUnavailable\":\"\",\"minAvailable\":1},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"enabled\":true,\"existingClaim\":\"\",\"medium\":\"\",\"mountPath\":\"/bitnami/mongodb\",\"resourcePolicy\":\"\",\"size\":\"15Gi\",\"storageClass\":\"\",\"subPath\":\"\",\"volumeClaimTemplates\":{\"dataSource\":{},\"requests\":{},\"selector\":{}}},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podManagementPolicy\":\"OrderedReady\",\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001,\"sysctls\":[]},\"podSecurityPolicy\":{\"allowPrivilegeEscalation\":false,\"create\":false,\"privileged\":false,\"spec\":{}},\"priorityClassName\":\"\",\"rbac\":{\"create\":false,\"rules\":[]},\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"replicaCount\":2,\"replicaSetConfigurationSettings\":{\"configuration\":{},\"enabled\":false},\"replicaSetHostnames\":true,\"replicaSetName\":\"rs0\",\"resources\":{\"limits\":{},\"requests\":{}},\"runtimeClassName\":\"\",\"schedulerName\":\"\",\"service\":{\"allocateLoadBalancerNodePorts\":true,\"annotations\":{},\"clusterIP\":\"\",\"externalIPs\":[],\"externalTrafficPolicy\":\"Local\",\"extraPorts\":[],\"headless\":{\"annotations\":{}},\"loadBalancerClass\":\"\",\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":[],\"nameOverride\":\"\",\"nodePorts\":{\"mongodb\":\"\"},\"portName\":\"mongodb\",\"ports\":{\"mongodb\":27017},\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"name\":\"\"},\"serviceBindings\":{\"enabled\":false},\"sidecars\":[],\"startupProbe\":{\"enabled\":false,\"failureThreshold\":30,\"initialDelaySeconds\":5,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"systemLogVerbosity\":0,\"terminationGracePeriodSeconds\":\"\",\"tls\":{\"arbiter\":{\"existingSecret\":\"\"},\"autoGenerated\":true,\"caCert\":\"\",\"caKey\":\"\",\"enabled\":false,\"existingSecret\":\"\",\"extraDnsNames\":[],\"hidden\":{\"existingSecrets\":[]},\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/nginx\",\"tag\":\"1.25.1-debian-11-r5\"},\"mode\":\"requireTLS\",\"pemChainIncluded\":false,\"replicaset\":{\"existingSecrets\":[]},\"resources\":{\"limits\":{},\"requests\":{}},\"standalone\":{\"existingSecret\":\"\"}},\"tolerations\":[],\"topologyKey\":\"\",\"topologySpreadConstraints\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"},\"useStatefulSet\":false,\"volumePermissions\":{\"enabled\":false,\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/bitnami-shell\",\"tag\":\"11-debian-11-r131\"},\"resources\":{\"limits\":{},\"requests\":{}},\"securityContext\":{\"runAsUser\":0}}}",
                "version": "13.15.5"
              }
            ],
            "name": "mongo",
            "namespace": "datalake",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Copyright VMware, Inc.\n# SPDX-License-Identifier: APACHE-2.0\n\n## @section Global parameters\n## Global Docker image parameters\n## Please, note that this will override the image parameters, including dependencies, configured to use the global value\n## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass\n##\n\n## @param global.imageRegistry Global Docker image registry\n## @param global.imagePullSecrets Global Docker registry secret names as an array\n## @param global.storageClass Global StorageClass for Persistent Volume(s)\n## @param global.namespaceOverride Override the namespace for resource deployed by the chart, but can itself be overridden by the local namespaceOverride\n##\nglobal:\n  imageRegistry: \"\"\n  ## E.g.\n  ## imagePullSecrets:\n  ##   - myRegistryKeySecretName\n  ##\n  imagePullSecrets: []\n  storageClass: \"\"\n  namespaceOverride: \"\"\n\n## @section Common parameters\n##\n\n## @param nameOverride String to partially override mongodb.fullname template (will maintain the release name)\n##\nnameOverride: \"\"\n## @param fullnameOverride String to fully override mongodb.fullname template\n##\nfullnameOverride: \"\"\n## @param namespaceOverride String to fully override common.names.namespace\n##\nnamespaceOverride: \"\"\n## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)\n##\nkubeVersion: \"\"\n## @param clusterDomain Default Kubernetes cluster domain\n##\nclusterDomain: cluster.local\n## @param extraDeploy Array of extra objects to deploy with the release\n## extraDeploy:\n## This needs to be uncommented and added to 'extraDeploy' in order to use the replicaset 'mongo-labeler' sidecar\n## for dynamically discovering the mongodb primary pod\n## suggestion is to use a hard-coded and predictable TCP port for the primary mongodb pod (here is 30001, choose your own)\n## - apiVersion: v1\n##   kind: Service\n##   metadata:\n##     name: mongodb-primary\n##     namespace: the-mongodb-namespace\n##     labels:\n##       app.kubernetes.io/component: mongodb\n##       app.kubernetes.io/instance: mongodb\n##       app.kubernetes.io/managed-by: Helm\n##       app.kubernetes.io/name: mongodb\n##   spec:\n##     type: NodePort\n##     externalTrafficPolicy: Cluster\n##     ports:\n##       - name: mongodb\n##         port: 30001\n##         nodePort: 30001\n##         protocol: TCP\n##         targetPort: mongodb\n##     selector:\n##       app.kubernetes.io/component: mongodb\n##       app.kubernetes.io/instance: mongodb\n##       app.kubernetes.io/name: mongodb\n##       primary: \"true\"\n##\nextraDeploy: []\n## @param commonLabels Add labels to all the deployed resources (sub-charts are not considered). Evaluated as a template\n##\ncommonLabels: {}\n## @param commonAnnotations Common annotations to add to all Mongo resources (sub-charts are not considered). Evaluated as a template\n##\ncommonAnnotations: {}\n\n## @param topologyKey Override common lib default topology key. If empty - \"kubernetes.io/hostname\" is used\n## i.e. topologyKey: topology.kubernetes.io/zone\n##\ntopologyKey: \"\"\n\n## @param serviceBindings.enabled Create secret for service binding (Experimental)\n## Ref: https://servicebinding.io/service-provider/\n##\nserviceBindings:\n  enabled: false\n\n## Enable diagnostic mode in the deployment\n##\ndiagnosticMode:\n  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)\n  ##\n  enabled: false\n  ## @param diagnosticMode.command Command to override all containers in the deployment\n  ##\n  command:\n    - sleep\n  ## @param diagnosticMode.args Args to override all containers in the deployment\n  ##\n  args:\n    - infinity\n\n## @section MongoDB(\u0026reg;) parameters\n##\n\n## Bitnami MongoDB(\u0026reg;) image\n## ref: https://hub.docker.com/r/bitnami/mongodb/tags/\n## @param image.registry MongoDB(\u0026reg;) image registry\n## @param image.repository MongoDB(\u0026reg;) image registry\n## @param image.tag MongoDB(\u0026reg;) image tag (immutable tags are recommended)\n## @param image.digest MongoDB(\u0026reg;) image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n## @param image.pullPolicy MongoDB(\u0026reg;) image pull policy\n## @param image.pullSecrets Specify docker-registry secret names as an array\n## @param image.debug Set to true if you would like to see extra information on logs\n##\nimage:\n  registry: docker.io\n  repository: bitnami/mongodb\n  tag: 6.0.7-debian-11-r0\n  digest: \"\"\n  ## Specify a imagePullPolicy\n  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n  ##\n  pullPolicy: IfNotPresent\n  ## Optionally specify an array of imagePullSecrets.\n  ## Secrets must be manually created in the namespace.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ## e.g:\n  ## pullSecrets:\n  ##   - myRegistryKeySecretName\n  ##\n  pullSecrets: []\n  ## Set to true if you would like to see extra information on logs\n  ##\n  debug: false\n\n## @param schedulerName Name of the scheduler (other than default) to dispatch pods\n## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n##\nschedulerName: \"\"\n## @param architecture MongoDB(\u0026reg;) architecture (`standalone` or `replicaset`)\n##\narchitecture: standalone\n## @param useStatefulSet Set to true to use a StatefulSet instead of a Deployment (only when `architecture=standalone`)\n##\nuseStatefulSet: false\n## MongoDB(\u0026reg;) Authentication parameters\n##\nauth:\n  ## @param auth.enabled Enable authentication\n  ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/\n  ##\n  enabled: true\n  ## @param auth.rootUser MongoDB(\u0026reg;) root user\n  ##\n  rootUser: root\n  ## @param auth.rootPassword MongoDB(\u0026reg;) root password\n  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#setting-the-root-user-and-password-on-first-run\n  ##\n  rootPassword: \"Maniac321.\"\n  ## MongoDB(\u0026reg;) custom users and databases\n  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#creating-a-user-and-database-on-first-run\n  ## @param auth.usernames List of custom users to be created during the initialization\n  ## @param auth.passwords List of passwords for the custom users set at `auth.usernames`\n  ## @param auth.databases List of custom databases to be created during the initialization\n  ##\n  usernames: [\"bifrost\"]\n  passwords: [\"Maniac321.\"]\n  databases: [\"bifrost\"]\n  ## @param auth.username DEPRECATED: use `auth.usernames` instead\n  ## @param auth.password DEPRECATED: use `auth.passwords` instead\n  ## @param auth.database DEPRECATED: use `auth.databases` instead\n  ##\n  username: \"bifrost\"\n  password: \"Maniac321.\"\n  database: \"bifrost\"\n  ## @param auth.replicaSetKey Key used for authentication in the replicaset (only when `architecture=replicaset`)\n  ##\n  replicaSetKey: \"\"\n  ## @param auth.existingSecret Existing secret with MongoDB(\u0026reg;) credentials (keys: `mongodb-passwords`, `mongodb-root-password`, `mongodb-metrics-password`, `mongodb-replica-set-key`)\n  ## NOTE: When it's set the previous parameters are ignored.\n  ##\n  existingSecret: \"\"\ntls:\n  ## @param tls.enabled Enable MongoDB(\u0026reg;) TLS support between nodes in the cluster as well as between mongo clients and nodes\n  ##\n  enabled: false\n  ## @param tls.autoGenerated Generate a custom CA and self-signed certificates\n  ##\n  autoGenerated: true\n  ## @param tls.existingSecret Existing secret with TLS certificates (keys: `mongodb-ca-cert`, `mongodb-ca-key`)\n  ## NOTE: When it's set it will disable secret creation.\n  ##\n  existingSecret: \"\"\n  ## Add Custom CA certificate\n  ## @param tls.caCert Custom CA certificated (base64 encoded)\n  ## @param tls.caKey CA certificate private key (base64 encoded)\n  ##\n  caCert: \"\"\n  caKey: \"\"\n  ## @param tls.pemChainIncluded Flag to denote that the Certificate Authority (CA) certificates are bundled with the endpoint cert.\n  ## Certificates must be in proper order, where the top certificate is the leaf and the bottom certificate is the top-most intermediate CA.\n  ##\n  pemChainIncluded: false\n  standalone:\n    ## @param tls.standalone.existingSecret Existing secret with TLS certificates (`tls.key`, `tls.crt`, `ca.crt`) or (`tls.key`, `tls.crt`) with tls.pemChainIncluded set as enabled.\n    ## NOTE: When it's set it will disable certificate self-generation from existing CA.\n    ##\n    existingSecret: \"\"\n  replicaset:\n    ## @param tls.replicaset.existingSecrets Array of existing secrets with TLS certificates (`tls.key`, `tls.crt`, `ca.crt`) or (`tls.key`, `tls.crt`) with tls.pemChainIncluded set as enabled.\n    ## existingSecrets:\n    ##  - \"mySecret-0\"\n    ##  - \"mySecret-1\"\n    ## NOTE: When it's set it will disable certificate self-generation from existing CA.\n    ##\n    existingSecrets: []\n  hidden:\n    ## @param tls.hidden.existingSecrets Array of existing secrets with TLS certificates (`tls.key`, `tls.crt`, `ca.crt`) or (`tls.key`, `tls.crt`) with tls.pemChainIncluded set as enabled.\n    ## existingSecrets:\n    ##  - \"mySecret-0\"\n    ##  - \"mySecret-1\"\n    ## NOTE: When it's set it will disable certificate self-generation from existing CA.\n    ##\n    existingSecrets: []\n  arbiter:\n    ## @param tls.arbiter.existingSecret Existing secret with TLS certificates (`tls.key`, `tls.crt`, `ca.crt`) or (`tls.key`, `tls.crt`) with tls.pemChainIncluded set as enabled.\n    ## NOTE: When it's set it will disable certificate self-generation from existing CA.\n    ##\n    existingSecret: \"\"\n  ## Bitnami Nginx image\n  ## @param tls.image.registry Init container TLS certs setup image registry\n  ## @param tls.image.repository Init container TLS certs setup image repository\n  ## @param tls.image.tag Init container TLS certs setup image tag (immutable tags are recommended)\n  ## @param tls.image.digest Init container TLS certs setup image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n  ## @param tls.image.pullPolicy Init container TLS certs setup image pull policy\n  ## @param tls.image.pullSecrets Init container TLS certs specify docker-registry secret names as an array\n  ## @param tls.extraDnsNames Add extra dns names to the CA, can solve x509 auth issue for pod clients\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/nginx\n    tag: 1.25.1-debian-11-r5\n    digest: \"\"\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ## e.g:\n    ## pullSecrets:\n    ##   - myRegistryKeySecretName\n    ##\n    pullSecrets: []\n\n  ## e.g:\n  ## extraDnsNames\n  ##   \"DNS.6\": \"$my_host\"\n  ##   \"DNS.7\": \"$test\"\n  ##\n  extraDnsNames: []\n  ## @param tls.mode Allows to set the tls mode which should be used when tls is enabled (options: `allowTLS`, `preferTLS`, `requireTLS`)\n  ##\n  mode: requireTLS\n  ## Init Container resource requests and limits\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## We usually recommend not to specify default resources and to leave this as a conscious\n  ## choice for the user. This also increases chances charts run on environments with little\n  ## resources, such as Minikube. If you do want to specify resources, uncomment the following\n  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  ## @param tls.resources.limits Init container generate-tls-certs resource limits\n  ## @param tls.resources.requests Init container generate-tls-certs resource requests\n  ##\n  resources:\n    ## Example:\n    ## limits:\n    ##   cpu: 100m\n    ##   memory: 128Mi\n    ##\n    limits: {}\n    ## Examples:\n    ## requests:\n    ##   cpu: 100m\n    ##   memory: 128Mi\n    ##\n    requests: {}\n## @param hostAliases Add deployment host aliases\n## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n##\nhostAliases: []\n## @param replicaSetName Name of the replica set (only when `architecture=replicaset`)\n## Ignored when mongodb.architecture=standalone\n##\nreplicaSetName: rs0\n## @param replicaSetHostnames Enable DNS hostnames in the replicaset config (only when `architecture=replicaset`)\n## Ignored when mongodb.architecture=standalone\n## Ignored when externalAccess.enabled=true\n##\nreplicaSetHostnames: true\n## @param enableIPv6 Switch to enable/disable IPv6 on MongoDB(\u0026reg;)\n## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#enablingdisabling-ipv6\n##\nenableIPv6: false\n## @param directoryPerDB Switch to enable/disable DirectoryPerDB on MongoDB(\u0026reg;)\n## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#enablingdisabling-directoryperdb\n##\ndirectoryPerDB: false\n## MongoDB(\u0026reg;) System Log configuration\n## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#configuring-system-log-verbosity-level\n## @param systemLogVerbosity MongoDB(\u0026reg;) system log verbosity level\n## @param disableSystemLog Switch to enable/disable MongoDB(\u0026reg;) system log\n##\nsystemLogVerbosity: 0\ndisableSystemLog: false\n## @param disableJavascript Switch to enable/disable MongoDB(\u0026reg;) server-side JavaScript execution\n## ref: https://docs.mongodb.com/manual/core/server-side-javascript/\n##\ndisableJavascript: false\n## @param enableJournal Switch to enable/disable MongoDB(\u0026reg;) Journaling\n## ref: https://docs.mongodb.com/manual/reference/configuration-options/#mongodb-setting-storage.journal.enabled\n##\nenableJournal: true\n## @param configuration MongoDB(\u0026reg;) configuration file to be used for Primary and Secondary nodes\n## For documentation of all options, see: http://docs.mongodb.org/manual/reference/configuration-options/\n## Example:\n## configuration: |-\n##   # where and how to store data.\n##   storage:\n##     dbPath: /bitnami/mongodb/data/db\n##     journal:\n##       enabled: true\n##     directoryPerDB: false\n##   # where to write logging data\n##   systemLog:\n##     destination: file\n##     quiet: false\n##     logAppend: true\n##     logRotate: reopen\n##     path: /opt/bitnami/mongodb/logs/mongodb.log\n##     verbosity: 0\n##   # network interfaces\n##   net:\n##     port: 27017\n##     unixDomainSocket:\n##       enabled: true\n##       pathPrefix: /opt/bitnami/mongodb/tmp\n##     ipv6: false\n##     bindIpAll: true\n##   # replica set options\n##   #replication:\n##     #replSetName: replicaset\n##     #enableMajorityReadConcern: true\n##   # process management options\n##   processManagement:\n##      fork: false\n##      pidFilePath: /opt/bitnami/mongodb/tmp/mongodb.pid\n##   # set parameter options\n##   setParameter:\n##      enableLocalhostAuthBypass: true\n##   # security options\n##   security:\n##     authorization: disabled\n##     #keyFile: /opt/bitnami/mongodb/conf/keyfile\n##\nconfiguration: \"\"\n## @section replicaSetConfigurationSettings settings applied during runtime (not via configuration file)\n## If enabled, these are applied by a script which is called within setup.sh\n## for documentation see https://docs.mongodb.com/manual/reference/replica-configuration/#replica-set-configuration-fields\n## @param replicaSetConfigurationSettings.enabled Enable MongoDB(\u0026reg;) Switch to enable/disable configuring MongoDB(\u0026reg;) run time rs.conf settings\n## @param replicaSetConfigurationSettings.configuration run-time rs.conf settings\n##\nreplicaSetConfigurationSettings:\n  enabled: false\n  configuration: {}\n##    chainingAllowed : false\n##    heartbeatTimeoutSecs : 10\n##    heartbeatIntervalMillis : 2000\n##    electionTimeoutMillis : 10000\n##    catchUpTimeoutMillis : 30000\n## @param existingConfigmap Name of existing ConfigMap with MongoDB(\u0026reg;) configuration for Primary and Secondary nodes\n## NOTE: When it's set the arbiter.configuration parameter is ignored\n##\nexistingConfigmap: \"\"\n## @param initdbScripts Dictionary of initdb scripts\n## Specify dictionary of scripts to be run at first boot\n## Example:\n## initdbScripts:\n##   my_init_script.sh: |\n##      #!/bin/bash\n##      echo \"Do something.\"\n##\ninitdbScripts: {}\n## @param initdbScriptsConfigMap Existing ConfigMap with custom initdb scripts\n##\ninitdbScriptsConfigMap: \"\"\n## Command and args for running the container (set to default if not set). Use array form\n## @param command Override default container command (useful when using custom images)\n## @param args Override default container args (useful when using custom images)\n##\ncommand: []\nargs: []\n## @param extraFlags MongoDB(\u0026reg;) additional command line flags\n## Example:\n## extraFlags:\n##  - \"--wiredTigerCacheSizeGB=2\"\n##\nextraFlags: []\n## @param extraEnvVars Extra environment variables to add to MongoDB(\u0026reg;) pods\n## E.g:\n## extraEnvVars:\n##   - name: FOO\n##     value: BAR\n##\nextraEnvVars: []\n## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars\n##\nextraEnvVarsCM: \"\"\n## @param extraEnvVarsSecret Name of existing Secret containing extra env vars (in case of sensitive data)\n##\nextraEnvVarsSecret: \"\"\n\n## @section MongoDB(\u0026reg;) statefulset parameters\n##\n\n## @param annotations Additional labels to be added to the MongoDB(\u0026reg;) statefulset. Evaluated as a template\n##\nannotations: {}\n## @param labels Annotations to be added to the MongoDB(\u0026reg;) statefulset. Evaluated as a template\n##\nlabels: {}\n## @param replicaCount Number of MongoDB(\u0026reg;) nodes (only when `architecture=replicaset`)\n## Ignored when mongodb.architecture=standalone\n##\nreplicaCount: 2\n## @param updateStrategy.type Strategy to use to replace existing MongoDB(\u0026reg;) pods. When architecture=standalone and useStatefulSet=false,\n## this parameter will be applied on a deployment object. In other case it will be applied on a statefulset object\n## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n## Example:\n## updateStrategy:\n##  type: RollingUpdate\n##  rollingUpdate:\n##    maxSurge: 25%\n##    maxUnavailable: 25%\n##\nupdateStrategy:\n  type: RollingUpdate\n## @param podManagementPolicy Pod management policy for MongoDB(\u0026reg;)\n## Should be initialized one by one when building the replicaset for the first time\n##\npodManagementPolicy: OrderedReady\n## @param podAffinityPreset MongoDB(\u0026reg;) Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n##\npodAffinityPreset: \"\"\n## @param podAntiAffinityPreset MongoDB(\u0026reg;) Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n##\npodAntiAffinityPreset: soft\n## Node affinity preset\n## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n##\nnodeAffinityPreset:\n  ## @param nodeAffinityPreset.type MongoDB(\u0026reg;) Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n  ##\n  type: \"\"\n  ## @param nodeAffinityPreset.key MongoDB(\u0026reg;) Node label key to match Ignored if `affinity` is set.\n  ## E.g.\n  ## key: \"kubernetes.io/e2e-az-name\"\n  ##\n  key: \"\"\n  ## @param nodeAffinityPreset.values MongoDB(\u0026reg;) Node label values to match. Ignored if `affinity` is set.\n  ## E.g.\n  ## values:\n  ##   - e2e-az1\n  ##   - e2e-az2\n  ##\n  values: []\n## @param affinity MongoDB(\u0026reg;) Affinity for pod assignment\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set\n##\naffinity: {}\n## @param nodeSelector MongoDB(\u0026reg;) Node labels for pod assignment\n## ref: https://kubernetes.io/docs/user-guide/node-selection/\n##\nnodeSelector: {}\n## @param tolerations MongoDB(\u0026reg;) Tolerations for pod assignment\n## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n##\ntolerations: []\n## @param topologySpreadConstraints MongoDB(\u0026reg;) Spread Constraints for Pods\n## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\n##\ntopologySpreadConstraints: []\n## @param lifecycleHooks LifecycleHook for the MongoDB(\u0026reg;) container(s) to automate configuration before or after startup\n##\nlifecycleHooks: {}\n## @param terminationGracePeriodSeconds MongoDB(\u0026reg;) Termination Grace Period\n##\nterminationGracePeriodSeconds: \"\"\n## @param podLabels MongoDB(\u0026reg;) pod labels\n## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n##\npodLabels: {}\n## @param podAnnotations MongoDB(\u0026reg;) Pod annotations\n## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n##\npodAnnotations: {}\n## @param priorityClassName Name of the existing priority class to be used by MongoDB(\u0026reg;) pod(s)\n## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n##\npriorityClassName: \"\"\n## @param runtimeClassName Name of the runtime class to be used by MongoDB(\u0026reg;) pod(s)\n## ref: https://kubernetes.io/docs/concepts/containers/runtime-class/\n##\nruntimeClassName: \"\"\n## MongoDB(\u0026reg;) pods' Security Context.\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n## @param podSecurityContext.enabled Enable MongoDB(\u0026reg;) pod(s)' Security Context\n## @param podSecurityContext.fsGroup Group ID for the volumes of the MongoDB(\u0026reg;) pod(s)\n## @param podSecurityContext.sysctls sysctl settings of the MongoDB(\u0026reg;) pod(s)'\n##\npodSecurityContext:\n  enabled: true\n  fsGroup: 1001\n  ## sysctl settings\n  ## Example:\n  ## sysctls:\n  ## - name: net.core.somaxconn\n  ##   value: \"10000\"\n  ##\n  sysctls: []\n## MongoDB(\u0026reg;) containers' Security Context (main and metrics container).\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n## @param containerSecurityContext.enabled Enable MongoDB(\u0026reg;) container(s)' Security Context\n## @param containerSecurityContext.runAsUser User ID for the MongoDB(\u0026reg;) container\n## @param containerSecurityContext.runAsNonRoot Set MongoDB(\u0026reg;) container's Security Context runAsNonRoot\n##\ncontainerSecurityContext:\n  enabled: true\n  runAsUser: 1001\n  runAsNonRoot: true\n## MongoDB(\u0026reg;) containers' resource requests and limits.\n## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n## We usually recommend not to specify default resources and to leave this as a conscious\n## choice for the user. This also increases chances charts run on environments with little\n## resources, such as Minikube. If you do want to specify resources, uncomment the following\n## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n## @param resources.limits The resources limits for MongoDB(\u0026reg;) containers\n## @param resources.requests The requested resources for MongoDB(\u0026reg;) containers\n##\nresources:\n  ## Example:\n  ## limits:\n  ##    cpu: 100m\n  ##    memory: 128Mi\n  ##\n  limits: {}\n  ## Examples:\n  ## requests:\n  ##    cpu: 100m\n  ##    memory: 128Mi\n  ##\n  requests: {}\n## @param containerPorts.mongodb MongoDB(\u0026reg;) container port\n##\ncontainerPorts:\n  mongodb: 27017\n## MongoDB(\u0026reg;) pods' liveness probe. Evaluated as a template.\n## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n## @param livenessProbe.enabled Enable livenessProbe\n## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n## @param livenessProbe.periodSeconds Period seconds for livenessProbe\n## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n## @param livenessProbe.failureThreshold Failure threshold for livenessProbe\n## @param livenessProbe.successThreshold Success threshold for livenessProbe\n##\nlivenessProbe:\n  enabled: true\n  initialDelaySeconds: 30\n  periodSeconds: 20\n  timeoutSeconds: 10\n  failureThreshold: 6\n  successThreshold: 1\n## MongoDB(\u0026reg;) pods' readiness probe. Evaluated as a template.\n## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n## @param readinessProbe.enabled Enable readinessProbe\n## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n## @param readinessProbe.periodSeconds Period seconds for readinessProbe\n## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n## @param readinessProbe.failureThreshold Failure threshold for readinessProbe\n## @param readinessProbe.successThreshold Success threshold for readinessProbe\n##\nreadinessProbe:\n  enabled: true\n  initialDelaySeconds: 5\n  periodSeconds: 10\n  timeoutSeconds: 5\n  failureThreshold: 6\n  successThreshold: 1\n## Slow starting containers can be protected through startup probes\n## Startup probes are available in Kubernetes version 1.16 and above\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes\n## @param startupProbe.enabled Enable startupProbe\n## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n## @param startupProbe.periodSeconds Period seconds for startupProbe\n## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe\n## @param startupProbe.failureThreshold Failure threshold for startupProbe\n## @param startupProbe.successThreshold Success threshold for startupProbe\n##\nstartupProbe:\n  enabled: false\n  initialDelaySeconds: 5\n  periodSeconds: 20\n  timeoutSeconds: 10\n  successThreshold: 1\n  failureThreshold: 30\n## @param customLivenessProbe Override default liveness probe for MongoDB(\u0026reg;) containers\n## Ignored when livenessProbe.enabled=true\n##\ncustomLivenessProbe: {}\n## @param customReadinessProbe Override default readiness probe for MongoDB(\u0026reg;) containers\n## Ignored when readinessProbe.enabled=true\n##\ncustomReadinessProbe: {}\n## @param customStartupProbe Override default startup probe for MongoDB(\u0026reg;) containers\n## Ignored when startupProbe.enabled=true\n##\ncustomStartupProbe: {}\n## @param initContainers Add additional init containers for the hidden node pod(s)\n## Example:\n## initContainers:\n##   - name: your-image-name\n##     image: your-image\n##     imagePullPolicy: Always\n##     ports:\n##       - name: portname\n##         containerPort: 1234\n##\ninitContainers: []\n## @param sidecars Add additional sidecar containers for the MongoDB(\u0026reg;) pod(s)\n## Example:\n## sidecars:\n##   - name: your-image-name\n##     image: your-image\n##     imagePullPolicy: Always\n##     ports:\n##       - name: portname\n##         containerPort: 1234\n## This is an optional 'mongo-labeler' sidecar container that tracks replica-set for the primary mongodb pod\n## and labels it dynamically with ' primary: \"true\" ' in order for an extra-deployed service to always expose\n## and attach to the primary pod, this needs to be uncommented along with the suggested 'extraDeploy' example\n## and the suggested rbac example for the pod to be allowed adding labels to mongo replica pods\n## search 'mongo-labeler' through this file to find the sections that needs to be uncommented to make it work\n##\n## - name: mongo-labeler\n##   image: korenlev/k8s-mongo-labeler-sidecar\n##   imagePullPolicy: Always\n##   env:\n##     - name: LABEL_SELECTOR\n##       value: \"app.kubernetes.io/component=mongodb,app.kubernetes.io/instance=mongodb,app.kubernetes.io/name=mongodb\"\n##     - name: NAMESPACE\n##       value: \"the-mongodb-namespace\"\n##     - name: DEBUG\n##       value: \"true\"\n##\nsidecars: []\n## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the MongoDB(\u0026reg;) container(s)\n## Examples:\n## extraVolumeMounts:\n##   - name: extras\n##     mountPath: /usr/share/extras\n##     readOnly: true\n##\nextraVolumeMounts: []\n## @param extraVolumes Optionally specify extra list of additional volumes to the MongoDB(\u0026reg;) statefulset\n## extraVolumes:\n##   - name: extras\n##     emptyDir: {}\n##\nextraVolumes: []\n## MongoDB(\u0026reg;) Pod Disruption Budget configuration\n## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n##\npdb:\n  ## @param pdb.create Enable/disable a Pod Disruption Budget creation for MongoDB(\u0026reg;) pod(s)\n  ##\n  create: false\n  ## @param pdb.minAvailable Minimum number/percentage of MongoDB(\u0026reg;) pods that must still be available after the eviction\n  ##\n  minAvailable: 1\n  ## @param pdb.maxUnavailable Maximum number/percentage of MongoDB(\u0026reg;) pods that may be made unavailable after the eviction\n  ##\n  maxUnavailable: \"\"\n\n## @section Traffic exposure parameters\n##\n\n## Service parameters\n##\nservice:\n  ## @param service.nameOverride MongoDB(\u0026reg;) service name\n  ##\n  nameOverride: \"\"\n  ## @param service.type Kubernetes Service type (only for standalone architecture)\n  ##\n  type: ClusterIP\n  ## @param service.portName MongoDB(\u0026reg;) service port name (only for standalone architecture)\n  ##\n  portName: mongodb\n  ## @param service.ports.mongodb MongoDB(\u0026reg;) service port.\n  ##\n  ports:\n    mongodb: 27017\n  ## @param service.nodePorts.mongodb Port to bind to for NodePort and LoadBalancer service types (only for standalone architecture)\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n  ##\n  nodePorts:\n    mongodb: \"\"\n  ## @param service.clusterIP MongoDB(\u0026reg;) service cluster IP (only for standalone architecture)\n  ## e.g:\n  ## clusterIP: None\n  ##\n  clusterIP: \"\"\n  ## @param service.externalIPs Specify the externalIP value ClusterIP service type (only for standalone architecture)\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips\n  ##\n  externalIPs: []\n  ## @param service.loadBalancerIP loadBalancerIP for MongoDB(\u0026reg;) Service (only for standalone architecture)\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer\n  ##\n  loadBalancerIP: \"\"\n  ## @param service.loadBalancerClass loadBalancerClass for MongoDB(\u0026reg;) Service (only for standalone architecture)\n  # ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class\n  loadBalancerClass: \"\"\n  ## @param service.loadBalancerSourceRanges Address(es) that are allowed when service is LoadBalancer (only for standalone architecture)\n  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n  ##\n  loadBalancerSourceRanges: []\n  ## @param service.allocateLoadBalancerNodePorts Wheter to allocate node ports when service type is LoadBalancer\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-nodeport-allocation\n  ##\n  allocateLoadBalancerNodePorts: true\n  ## @param service.extraPorts Extra ports to expose (normally used with the `sidecar` value)\n  ##\n  extraPorts: []\n  ## @param service.annotations Provide any additional annotations that may be required\n  ##\n  annotations: {}\n  ## @param service.externalTrafficPolicy service external traffic policy (only for standalone architecture)\n  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n  ##\n  externalTrafficPolicy: Local\n  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin\n  ## Values: ClientIP or None\n  ## ref: https://kubernetes.io/docs/user-guide/services/\n  ##\n  sessionAffinity: None\n  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity\n  ## sessionAffinityConfig:\n  ##   clientIP:\n  ##     timeoutSeconds: 300\n  ##\n  sessionAffinityConfig: {}\n  ## Headless service properties\n  ##\n  headless:\n    ## @param service.headless.annotations Annotations for the headless service.\n    ##\n    annotations: {}\n## External Access to MongoDB(\u0026reg;) nodes configuration\n##\nexternalAccess:\n  ## @param externalAccess.enabled Enable Kubernetes external cluster access to MongoDB(\u0026reg;) nodes (only for replicaset architecture)\n  ##\n  enabled: false\n  ## External IPs auto-discovery configuration\n  ## An init container is used to auto-detect LB IPs or node ports by querying the K8s API\n  ## Note: RBAC might be required\n  ##\n  autoDiscovery:\n    ## @param externalAccess.autoDiscovery.enabled Enable using an init container to auto-detect external IPs by querying the K8s API\n    ##\n    enabled: false\n    ## Bitnami Kubectl image\n    ## ref: https://hub.docker.com/r/bitnami/kubectl/tags/\n    ## @param externalAccess.autoDiscovery.image.registry Init container auto-discovery image registry\n    ## @param externalAccess.autoDiscovery.image.repository Init container auto-discovery image repository\n    ## @param externalAccess.autoDiscovery.image.tag Init container auto-discovery image tag (immutable tags are recommended)\n    ## @param externalAccess.autoDiscovery.image.digest Init container auto-discovery image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n    ## @param externalAccess.autoDiscovery.image.pullPolicy Init container auto-discovery image pull policy\n    ## @param externalAccess.autoDiscovery.image.pullSecrets Init container auto-discovery image pull secrets\n    ##\n    image:\n      registry: docker.io\n      repository: bitnami/kubectl\n      tag: 1.25.11-debian-11-r5\n      digest: \"\"\n      ## Specify a imagePullPolicy\n      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n      ##\n      pullPolicy: IfNotPresent\n      ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)\n      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n      ## Example:\n      ## pullSecrets:\n      ##   - myRegistryKeySecretName\n      ##\n      pullSecrets: []\n    ## Init Container resource requests and limits\n    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n    ## We usually recommend not to specify default resources and to leave this as a conscious\n    ## choice for the user. This also increases chances charts run on environments with little\n    ## resources, such as Minikube. If you do want to specify resources, uncomment the following\n    ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n    ## @param externalAccess.autoDiscovery.resources.limits Init container auto-discovery resource limits\n    ## @param externalAccess.autoDiscovery.resources.requests Init container auto-discovery resource requests\n    ##\n    resources:\n      ## Example:\n      ## limits:\n      ##    cpu: 100m\n      ##    memory: 128Mi\n      ##\n      limits: {}\n      ## Examples:\n      ## requests:\n      ##    cpu: 100m\n      ##    memory: 128Mi\n      ##\n      requests: {}\n  ## Parameters to configure a set of Pods that connect to an existing MongoDB(\u0026reg;) deployment that lies outside of Kubernetes.\n  ## @param externalAccess.externalMaster.enabled Use external master for bootstrapping\n  ## @param externalAccess.externalMaster.host External master host to bootstrap from\n  ## @param externalAccess.externalMaster.port Port for MongoDB(\u0026reg;) service external master host\n  ##\n  externalMaster:\n    enabled: false\n    host: \"\"\n    port: 27017\n  ## Parameters to configure K8s service(s) used to externally access MongoDB(\u0026reg;)\n  ## A new service per broker will be created\n  ##\n  service:\n    ## @param externalAccess.service.type Kubernetes Service type for external access. Allowed values: NodePort, LoadBalancer or ClusterIP\n    ##\n    type: LoadBalancer\n    ## @param externalAccess.service.portName MongoDB(\u0026reg;) port name used for external access when service type is LoadBalancer\n    ##\n    portName: \"mongodb\"\n    ## @param externalAccess.service.ports.mongodb MongoDB(\u0026reg;) port used for external access when service type is LoadBalancer\n    ##\n    ports:\n      mongodb: 27017\n    ## @param externalAccess.service.loadBalancerIPs Array of load balancer IPs for MongoDB(\u0026reg;) nodes\n    ## Example:\n    ## loadBalancerIPs:\n    ##   - X.X.X.X\n    ##   - Y.Y.Y.Y\n    ##\n    loadBalancerIPs: []\n    ## @param externalAccess.service.loadBalancerClass loadBalancerClass when service type is LoadBalancer\n    # ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class\n    loadBalancerClass: \"\"\n    ## @param externalAccess.service.loadBalancerSourceRanges Address(es) that are allowed when service is LoadBalancer\n    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n    ## Example:\n    ## loadBalancerSourceRanges:\n    ## - 10.10.10.0/24\n    ##\n    loadBalancerSourceRanges: []\n    ## @param externalAccess.service.allocateLoadBalancerNodePorts Wheter to allocate node ports when service type is LoadBalancer\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-nodeport-allocation\n    ##\n    allocateLoadBalancerNodePorts: true\n    ## @param externalAccess.service.externalTrafficPolicy MongoDB(\u0026reg;) service external traffic policy\n    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n    ##\n    externalTrafficPolicy: Local\n    ## @param externalAccess.service.nodePorts Array of node ports used to configure MongoDB(\u0026reg;) advertised hostname when service type is NodePort\n    ## Example:\n    ## nodePorts:\n    ##   - 30001\n    ##   - 30002\n    ##\n    nodePorts: []\n    ## @param externalAccess.service.domain Domain or external IP used to configure MongoDB(\u0026reg;) advertised hostname when service type is NodePort\n    ## If not specified, the container will try to get the kubernetes node external IP\n    ## e.g:\n    ## domain: mydomain.com\n    ##\n    domain: \"\"\n    ## @param externalAccess.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)\n    ##\n    extraPorts: []\n    ## @param externalAccess.service.annotations Service annotations for external access\n    ##\n    annotations: {}\n    ## @param externalAccess.service.sessionAffinity Control where client requests go, to the same pod or round-robin\n    ## Values: ClientIP or None\n    ## ref: https://kubernetes.io/docs/user-guide/services/\n    ##\n    sessionAffinity: None\n    ## @param externalAccess.service.sessionAffinityConfig Additional settings for the sessionAffinity\n    ## sessionAffinityConfig:\n    ##   clientIP:\n    ##     timeoutSeconds: 300\n    ##\n    sessionAffinityConfig: {}\n  ## External Access to MongoDB(\u0026reg;) Hidden nodes configuration\n  ##\n  hidden:\n    ## @param externalAccess.hidden.enabled Enable Kubernetes external cluster access to MongoDB(\u0026reg;) hidden nodes\n    ##\n    enabled: false\n    ## Parameters to configure K8s service(s) used to externally access MongoDB(\u0026reg;)\n    ## A new service per broker will be created\n    ##\n    service:\n      ## @param externalAccess.hidden.service.type Kubernetes Service type for external access. Allowed values: NodePort or LoadBalancer\n      ##\n      type: LoadBalancer\n      ## @param externalAccess.hidden.service.portName MongoDB(\u0026reg;) port name used for external access when service type is LoadBalancer\n      ##\n      portName: \"mongodb\"\n      ## @param externalAccess.hidden.service.ports.mongodb MongoDB(\u0026reg;) port used for external access when service type is LoadBalancer\n      ##\n      ports:\n        mongodb: 27017\n      ## @param externalAccess.hidden.service.loadBalancerIPs Array of load balancer IPs for MongoDB(\u0026reg;) nodes\n      ## Example:\n      ## loadBalancerIPs:\n      ##   - X.X.X.X\n      ##   - Y.Y.Y.Y\n      ##\n      loadBalancerIPs: []\n      ## @param externalAccess.hidden.service.loadBalancerClass loadBalancerClass when service type is LoadBalancer\n      # ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class\n      loadBalancerClass: \"\"\n      ## @param externalAccess.hidden.service.loadBalancerSourceRanges Address(es) that are allowed when service is LoadBalancer\n      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n      ## Example:\n      ## loadBalancerSourceRanges:\n      ## - 10.10.10.0/24\n      ##\n      loadBalancerSourceRanges: []\n      ## @param externalAccess.hidden.service.allocateLoadBalancerNodePorts Wheter to allocate node ports when service type is LoadBalancer\n      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-nodeport-allocation\n      ##\n      allocateLoadBalancerNodePorts: true\n      ## @param externalAccess.hidden.service.externalTrafficPolicy MongoDB(\u0026reg;) service external traffic policy\n      ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n      ##\n      externalTrafficPolicy: Local\n      ## @param externalAccess.hidden.service.nodePorts Array of node ports used to configure MongoDB(\u0026reg;) advertised hostname when service type is NodePort. Length must be the same as replicaCount\n      ## Example:\n      ## nodePorts:\n      ##   - 30001\n      ##   - 30002\n      ##\n      nodePorts: []\n      ## @param externalAccess.hidden.service.domain Domain or external IP used to configure MongoDB(\u0026reg;) advertised hostname when service type is NodePort\n      ## If not specified, the container will try to get the kubernetes node external IP\n      ## e.g:\n      ## domain: mydomain.com\n      ##\n      domain: \"\"\n      ## @param externalAccess.hidden.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)\n      ##\n      extraPorts: []\n      ## @param externalAccess.hidden.service.annotations Service annotations for external access\n      ##\n      annotations: {}\n      ## @param externalAccess.hidden.service.sessionAffinity Control where client requests go, to the same pod or round-robin\n      ## Values: ClientIP or None\n      ## ref: https://kubernetes.io/docs/user-guide/services/\n      ##\n      sessionAffinity: None\n      ## @param externalAccess.hidden.service.sessionAffinityConfig Additional settings for the sessionAffinity\n      ## sessionAffinityConfig:\n      ##   clientIP:\n      ##     timeoutSeconds: 300\n      ##\n      sessionAffinityConfig: {}\n\n## @section Persistence parameters\n##\n\n## Enable persistence using Persistent Volume Claims\n## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/\n##\npersistence:\n  ## @param persistence.enabled Enable MongoDB(\u0026reg;) data persistence using PVC\n  ##\n  enabled: true\n  ## @param persistence.medium Provide a medium for `emptyDir` volumes.\n  ## Requires persistence.enabled: false\n  ##\n  medium: \"\"\n  ## @param persistence.existingClaim Provide an existing `PersistentVolumeClaim` (only when `architecture=standalone`)\n  ## Requires persistence.enabled: true\n  ## If defined, PVC must be created manually before volume will be bound\n  ## Ignored when mongodb.architecture=replicaset\n  ##\n  existingClaim: \"\"\n  ## @param persistence.resourcePolicy Setting it to \"keep\" to avoid removing PVCs during a helm delete operation. Leaving it empty will delete PVCs after the chart deleted\n  ##\n  resourcePolicy: \"\"\n  ## @param persistence.storageClass PVC Storage Class for MongoDB(\u0026reg;) data volume\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ## set, choosing the default provisioner.\n  ##\n  storageClass: \"\"\n  ## @param persistence.accessModes PV Access Mode\n  ##\n  accessModes:\n    - ReadWriteOnce\n  ## @param persistence.size PVC Storage Request for MongoDB(\u0026reg;) data volume\n  ##\n  size: 15Gi\n  ## @param persistence.annotations PVC annotations\n  ##\n  annotations: {}\n  ## @param persistence.mountPath Path to mount the volume at\n  ## MongoDB(\u0026reg;) images.\n  ##\n  mountPath: /bitnami/mongodb\n  ## @param persistence.subPath Subdirectory of the volume to mount at\n  ## and one PV for multiple services.\n  ##\n  subPath: \"\"\n  ## Fine tuning for volumeClaimTemplates\n  ##\n  volumeClaimTemplates:\n    ## @param persistence.volumeClaimTemplates.selector A label query over volumes to consider for binding (e.g. when using local volumes)\n    ## A label query over volumes to consider for binding (e.g. when using local volumes)\n    ## See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#labelselector-v1-meta for more details\n    ##\n    selector: {}\n    ## @param persistence.volumeClaimTemplates.requests Custom PVC requests attributes\n    ## Sometime cloud providers use additional requests attributes to provision custom storage instance\n    ## See https://cloud.ibm.com/docs/containers?topic=containers-file_storage#file_dynamic_statefulset\n    ##\n    requests: {}\n    ## @param persistence.volumeClaimTemplates.dataSource Add dataSource to the VolumeClaimTemplate\n    ##\n    dataSource: {}\n\n## @section RBAC parameters\n##\n\n## ServiceAccount\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n##\nserviceAccount:\n  ## @param serviceAccount.create Enable creation of ServiceAccount for MongoDB(\u0026reg;) pods\n  ##\n  create: true\n  ## @param serviceAccount.name Name of the created serviceAccount\n  ## If not set and create is true, a name is generated using the mongodb.fullname template\n  ##\n  name: \"\"\n  ## @param serviceAccount.annotations Additional Service Account annotations\n  ##\n  annotations: {}\n  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created\n  ## Can be set to false if pods using this serviceAccount do not need to use K8s API\n  ##\n  automountServiceAccountToken: true\n## Role Based Access\n## ref: https://kubernetes.io/docs/admin/authorization/rbac/\n##\nrbac:\n  ## @param rbac.create Whether to create \u0026 use RBAC resources or not\n  ## binding MongoDB(\u0026reg;) ServiceAccount to a role\n  ## that allows MongoDB(\u0026reg;) pods querying the K8s API\n  ## this needs to be set to 'true' to enable the mongo-labeler sidecar primary mongodb discovery\n  ##\n  create: false\n  ## @param rbac.rules Custom rules to create following the role specification\n  ## The example below needs to be uncommented to use the 'mongo-labeler' sidecar for dynamic discovery of the primary mongodb pod:\n  ## rules:\n  ##   - apiGroups:\n  ##       - \"\"\n  ##     resources:\n  ##       - pods\n  ##     verbs:\n  ##       - get\n  ##       - list\n  ##       - watch\n  ##       - update\n  ##\n  rules: []\n## PodSecurityPolicy configuration\n## Be sure to also set rbac.create to true, otherwise Role and RoleBinding won't be created.\n## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/\n##\npodSecurityPolicy:\n  ## @param podSecurityPolicy.create Whether to create a PodSecurityPolicy. WARNING: PodSecurityPolicy is deprecated in Kubernetes v1.21 or later, unavailable in v1.25 or later\n  ##\n  create: false\n  ## @param podSecurityPolicy.allowPrivilegeEscalation Enable privilege escalation\n  ## Either use predefined policy with some adjustments or use `podSecurityPolicy.spec`\n  ##\n  allowPrivilegeEscalation: false\n  ## @param podSecurityPolicy.privileged Allow privileged\n  ##\n  privileged: false\n  ## @param podSecurityPolicy.spec Specify the full spec to use for Pod Security Policy\n  ## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/\n  ## Defining a spec ignores the above values.\n  ##\n  spec: {}\n  ## Example:\n  ##    allowPrivilegeEscalation: false\n  ##    fsGroup:\n  ##      rule: 'MustRunAs'\n  ##      ranges:\n  ##        - min: 1001\n  ##          max: 1001\n  ##    hostIPC: false\n  ##    hostNetwork: false\n  ##    hostPID: false\n  ##    privileged: false\n  ##    readOnlyRootFilesystem: false\n  ##    requiredDropCapabilities:\n  ##      - ALL\n  ##    runAsUser:\n  ##      rule: 'MustRunAs'\n  ##      ranges:\n  ##        - min: 1001\n  ##          max: 1001\n  ##    seLinux:\n  ##      rule: 'RunAsAny'\n  ##    supplementalGroups:\n  ##      rule: 'MustRunAs'\n  ##      ranges:\n  ##        - min: 1001\n  ##          max: 1001\n  ##    volumes:\n  ##      - 'configMap'\n  ##      - 'secret'\n  ##      - 'emptyDir'\n  ##      - 'persistentVolumeClaim'\n  ##\n\n## @section Volume Permissions parameters\n##\n## Init Container parameters\n## Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each component\n## values from the securityContext section of the component\n##\nvolumePermissions:\n  ## @param volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume(s) mountpoint to `runAsUser:fsGroup`\n  ##\n  enabled: false\n  ## @param volumePermissions.image.registry Init container volume-permissions image registry\n  ## @param volumePermissions.image.repository Init container volume-permissions image repository\n  ## @param volumePermissions.image.tag Init container volume-permissions image tag (immutable tags are recommended)\n  ## @param volumePermissions.image.digest Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n  ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy\n  ## @param volumePermissions.image.pullSecrets Specify docker-registry secret names as an array\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/bitnami-shell\n    tag: 11-debian-11-r131\n    digest: \"\"\n    ## Specify a imagePullPolicy\n    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n    ##\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ## Example:\n    ## pullSecrets:\n    ##   - myRegistryKeySecretName\n    ##\n    pullSecrets: []\n  ## Init Container resource requests and limits\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## We usually recommend not to specify default resources and to leave this as a conscious\n  ## choice for the user. This also increases chances charts run on environments with little\n  ## resources, such as Minikube. If you do want to specify resources, uncomment the following\n  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  ## @param volumePermissions.resources.limits Init container volume-permissions resource limits\n  ## @param volumePermissions.resources.requests Init container volume-permissions resource requests\n  ##\n  resources:\n    ## Example:\n    ## limits:\n    ##    cpu: 100m\n    ##    memory: 128Mi\n    ##\n    limits: {}\n    ## Examples:\n    ## requests:\n    ##    cpu: 100m\n    ##    memory: 128Mi\n    ##\n    requests: {}\n  ## Init container Security Context\n  ## Note: the chown of the data folder is done to containerSecurityContext.runAsUser\n  ## and not the below volumePermissions.securityContext.runAsUser\n  ## When runAsUser is set to special value \"auto\", init container will try to chwon the\n  ## data folder to autodetermined user\u0026group, using commands: `id -u`:`id -G | cut -d\" \" -f2`\n  ## \"auto\" is especially useful for OpenShift which has scc with dynamic userids (and 0 is not allowed).\n  ## You may want to use this volumePermissions.securityContext.runAsUser=\"auto\" in combination with\n  ## podSecurityContext.enabled=false,containerSecurityContext.enabled=false and shmVolume.chmod.enabled=false\n  ## @param volumePermissions.securityContext.runAsUser User ID for the volumePermissions container\n  ##\n  securityContext:\n    runAsUser: 0\n\n## @section Arbiter parameters\n##\n\narbiter:\n  ## @param arbiter.enabled Enable deploying the arbiter\n  ##   https://docs.mongodb.com/manual/tutorial/add-replica-set-arbiter/\n  ##\n  enabled: true\n  ## @param arbiter.hostAliases Add deployment host aliases\n  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  ##\n  hostAliases: []\n  ## @param arbiter.configuration Arbiter configuration file to be used\n  ##   http://docs.mongodb.org/manual/reference/configuration-options/\n  ##\n  configuration: \"\"\n  ## @param arbiter.existingConfigmap Name of existing ConfigMap with Arbiter configuration\n  ## NOTE: When it's set the arbiter.configuration parameter is ignored\n  ##\n  existingConfigmap: \"\"\n  ## Command and args for running the container (set to default if not set). Use array form\n  ## @param arbiter.command Override default container command (useful when using custom images)\n  ## @param arbiter.args Override default container args (useful when using custom images)\n  ##\n  command: []\n  args: []\n  ## @param arbiter.extraFlags Arbiter additional command line flags\n  ## Example:\n  ## extraFlags:\n  ##  - \"--wiredTigerCacheSizeGB=2\"\n  ##\n  extraFlags: []\n  ## @param arbiter.extraEnvVars Extra environment variables to add to Arbiter pods\n  ## E.g:\n  ## extraEnvVars:\n  ##   - name: FOO\n  ##     value: BAR\n  ##\n  extraEnvVars: []\n  ## @param arbiter.extraEnvVarsCM Name of existing ConfigMap containing extra env vars\n  ##\n  extraEnvVarsCM: \"\"\n  ## @param arbiter.extraEnvVarsSecret Name of existing Secret containing extra env vars (in case of sensitive data)\n  ##\n  extraEnvVarsSecret: \"\"\n  ## @param arbiter.annotations Additional labels to be added to the Arbiter statefulset\n  ##\n  annotations: {}\n  ## @param arbiter.labels Annotations to be added to the Arbiter statefulset\n  ##\n  labels: {}\n  ## @param arbiter.topologySpreadConstraints MongoDB(\u0026reg;) Spread Constraints for arbiter Pods\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\n  ##\n  topologySpreadConstraints: []\n  ## @param arbiter.lifecycleHooks LifecycleHook for the Arbiter container to automate configuration before or after startup\n  ##\n  lifecycleHooks: {}\n  ## @param arbiter.terminationGracePeriodSeconds Arbiter Termination Grace Period\n  ##\n  terminationGracePeriodSeconds: \"\"\n  ## @param arbiter.updateStrategy.type Strategy that will be employed to update Pods in the StatefulSet\n  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n  ## updateStrategy:\n  ##  type: RollingUpdate\n  ##  rollingUpdate:\n  ##    maxSurge: 25%\n  ##    maxUnavailable: 25%\n  ##\n  updateStrategy:\n    type: RollingUpdate\n  ## @param arbiter.podManagementPolicy Pod management policy for MongoDB(\u0026reg;)\n  ## Should be initialized one by one when building the replicaset for the first time\n  ##\n  podManagementPolicy: OrderedReady\n  ## @param arbiter.schedulerName Name of the scheduler (other than default) to dispatch pods\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  schedulerName: \"\"\n  ## @param arbiter.podAffinityPreset Arbiter Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAffinityPreset: \"\"\n  ## @param arbiter.podAntiAffinityPreset Arbiter Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAntiAffinityPreset: soft\n  ## Node affinity preset\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n  ##\n  nodeAffinityPreset:\n    ## @param arbiter.nodeAffinityPreset.type Arbiter Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n    ##\n    type: \"\"\n    ## @param arbiter.nodeAffinityPreset.key Arbiter Node label key to match Ignored if `affinity` is set.\n    ## E.g.\n    ## key: \"kubernetes.io/e2e-az-name\"\n    ##\n    key: \"\"\n    ## @param arbiter.nodeAffinityPreset.values Arbiter Node label values to match. Ignored if `affinity` is set.\n    ## E.g.\n    ## values:\n    ##   - e2e-az1\n    ##   - e2e-az2\n    ##\n    values: []\n  ## @param arbiter.affinity Arbiter Affinity for pod assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n  ## Note: arbiter.podAffinityPreset, arbiter.podAntiAffinityPreset, and arbiter.nodeAffinityPreset will be ignored when it's set\n  ##\n  affinity: {}\n  ## @param arbiter.nodeSelector Arbiter Node labels for pod assignment\n  ## ref: https://kubernetes.io/docs/user-guide/node-selection/\n  ##\n  nodeSelector: {}\n  ## @param arbiter.tolerations Arbiter Tolerations for pod assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n  ## @param arbiter.podLabels Arbiter pod labels\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n  ##\n  podLabels: {}\n  ## @param arbiter.podAnnotations Arbiter Pod annotations\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n  ##\n  podAnnotations: {}\n  ## @param arbiter.priorityClassName Name of the existing priority class to be used by Arbiter pod(s)\n  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n  ##\n  priorityClassName: \"\"\n  ## @param arbiter.runtimeClassName Name of the runtime class to be used by Arbiter pod(s)\n  ## ref: https://kubernetes.io/docs/concepts/containers/runtime-class/\n  ##\n  runtimeClassName: \"\"\n  ## MongoDB(\u0026reg;) Arbiter pods' Security Context.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n  ## @param arbiter.podSecurityContext.enabled Enable Arbiter pod(s)' Security Context\n  ## @param arbiter.podSecurityContext.fsGroup Group ID for the volumes of the Arbiter pod(s)\n  ## @param arbiter.podSecurityContext.sysctls sysctl settings of the Arbiter pod(s)'\n  ##\n  podSecurityContext:\n    enabled: true\n    fsGroup: 1001\n    ## sysctl settings\n    ## Example:\n    ## sysctls:\n    ## - name: net.core.somaxconn\n    ##   value: \"10000\"\n    ##\n    sysctls: []\n  ## MongoDB(\u0026reg;) Arbiter containers' Security Context (only main container).\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n  ## @param arbiter.containerSecurityContext.enabled Enable Arbiter container(s)' Security Context\n  ## @param arbiter.containerSecurityContext.runAsUser User ID for the Arbiter container\n  ## @param arbiter.containerSecurityContext.runAsNonRoot Set Arbiter containers' Security Context runAsNonRoot\n  ##\n  containerSecurityContext:\n    enabled: true\n    runAsUser: 1001\n    runAsNonRoot: true\n  ## MongoDB(\u0026reg;) Arbiter containers' resource requests and limits.\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## We usually recommend not to specify default resources and to leave this as a conscious\n  ## choice for the user. This also increases chances charts run on environments with little\n  ## resources, such as Minikube. If you do want to specify resources, uncomment the following\n  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  ## @param arbiter.resources.limits The resources limits for Arbiter containers\n  ## @param arbiter.resources.requests The requested resources for Arbiter containers\n  ##\n  resources:\n    ## Example:\n    ## limits:\n    ##    cpu: 100m\n    ##    memory: 128Mi\n    ##\n    limits: {}\n    ## Examples:\n    ## requests:\n    ##    cpu: 100m\n    ##    memory: 128Mi\n    ##\n    requests: {}\n  ## @param arbiter.containerPorts.mongodb MongoDB(\u0026reg;) arbiter container port\n  ##\n  containerPorts:\n    mongodb: 27017\n  ## MongoDB(\u0026reg;) Arbiter pods' liveness probe. Evaluated as a template.\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param arbiter.livenessProbe.enabled Enable livenessProbe\n  ## @param arbiter.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param arbiter.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param arbiter.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param arbiter.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param arbiter.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 30\n    periodSeconds: 20\n    timeoutSeconds: 10\n    failureThreshold: 6\n    successThreshold: 1\n  ## MongoDB(\u0026reg;) Arbiter pods' readiness probe. Evaluated as a template.\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param arbiter.readinessProbe.enabled Enable readinessProbe\n  ## @param arbiter.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param arbiter.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param arbiter.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param arbiter.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param arbiter.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 20\n    timeoutSeconds: 10\n    failureThreshold: 6\n    successThreshold: 1\n  ## MongoDB(\u0026reg;) Arbiter pods' startup probe. Evaluated as a template.\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param arbiter.startupProbe.enabled Enable startupProbe\n  ## @param arbiter.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n  ## @param arbiter.startupProbe.periodSeconds Period seconds for startupProbe\n  ## @param arbiter.startupProbe.timeoutSeconds Timeout seconds for startupProbe\n  ## @param arbiter.startupProbe.failureThreshold Failure threshold for startupProbe\n  ## @param arbiter.startupProbe.successThreshold Success threshold for startupProbe\n  ##\n  startupProbe:\n    enabled: false\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    timeoutSeconds: 5\n    successThreshold: 1\n    failureThreshold: 30\n  ## @param arbiter.customLivenessProbe Override default liveness probe for Arbiter containers\n  ## Ignored when arbiter.livenessProbe.enabled=true\n  ##\n  customLivenessProbe: {}\n  ## @param arbiter.customReadinessProbe Override default readiness probe for Arbiter containers\n  ## Ignored when arbiter.readinessProbe.enabled=true\n  ##\n  customReadinessProbe: {}\n  ## @param arbiter.customStartupProbe Override default startup probe for Arbiter containers\n  ## Ignored when arbiter.startupProbe.enabled=true\n  ##\n  customStartupProbe: {}\n  ## @param arbiter.initContainers Add additional init containers for the Arbiter pod(s)\n  ## Example:\n  ## initContainers:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  initContainers: []\n  ## @param arbiter.sidecars Add additional sidecar containers for the Arbiter pod(s)\n  ## Example:\n  ## sidecars:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  sidecars: []\n  ## @param arbiter.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Arbiter container(s)\n  ## Examples:\n  ## extraVolumeMounts:\n  ##   - name: extras\n  ##     mountPath: /usr/share/extras\n  ##     readOnly: true\n  ##\n  extraVolumeMounts: []\n  ## @param arbiter.extraVolumes Optionally specify extra list of additional volumes to the Arbiter statefulset\n  ## extraVolumes:\n  ##   - name: extras\n  ##     emptyDir: {}\n  ##\n  extraVolumes: []\n  ## MongoDB(\u0026reg;) Arbiter Pod Disruption Budget configuration\n  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n  ##\n  pdb:\n    ## @param arbiter.pdb.create Enable/disable a Pod Disruption Budget creation for Arbiter pod(s)\n    ##\n    create: false\n    ## @param arbiter.pdb.minAvailable Minimum number/percentage of Arbiter pods that should remain scheduled\n    ##\n    minAvailable: 1\n    ## @param arbiter.pdb.maxUnavailable Maximum number/percentage of Arbiter pods that may be made unavailable\n    ##\n    maxUnavailable: \"\"\n  ## MongoDB(\u0026reg;) Arbiter service parameters\n  ##\n  service:\n    ## @param arbiter.service.nameOverride The arbiter service name\n    ##\n    nameOverride: \"\"\n    ## @param arbiter.service.ports.mongodb MongoDB(\u0026reg;) service port\n    ##\n    ports:\n      mongodb: 27017\n    ## @param arbiter.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)\n    ##\n    extraPorts: []\n    ## @param arbiter.service.annotations Provide any additional annotations that may be required\n    ##\n    annotations: {}\n    ## Headless service properties\n    ##\n    headless:\n      ## @param arbiter.service.headless.annotations Annotations for the headless service.\n      ##\n      annotations: {}\n\n## @section Hidden Node parameters\n##\n\nhidden:\n  ## @param hidden.enabled Enable deploying the hidden nodes\n  ##   https://docs.mongodb.com/manual/tutorial/configure-a-hidden-replica-set-member/\n  ##\n  enabled: false\n  ## @param hidden.hostAliases Add deployment host aliases\n  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  ##\n  hostAliases: []\n  ## @param hidden.configuration Hidden node configuration file to be used\n  ##   http://docs.mongodb.org/manual/reference/configuration-options/\n  ##\n  configuration: \"\"\n  ## @param hidden.existingConfigmap Name of existing ConfigMap with Hidden node configuration\n  ## NOTE: When it's set the hidden.configuration parameter is ignored\n  ##\n  existingConfigmap: \"\"\n  ## Command and args for running the container (set to default if not set). Use array form\n  ## @param hidden.command Override default container command (useful when using custom images)\n  ## @param hidden.args Override default container args (useful when using custom images)\n  ##\n  command: []\n  args: []\n  ## @param hidden.extraFlags Hidden node additional command line flags\n  ## Example:\n  ## extraFlags:\n  ##  - \"--wiredTigerCacheSizeGB=2\"\n  ##\n  extraFlags: []\n  ## @param hidden.extraEnvVars Extra environment variables to add to Hidden node pods\n  ## E.g:\n  ## extraEnvVars:\n  ##   - name: FOO\n  ##     value: BAR\n  ##\n  extraEnvVars: []\n  ## @param hidden.extraEnvVarsCM Name of existing ConfigMap containing extra env vars\n  ##\n  extraEnvVarsCM: \"\"\n  ## @param hidden.extraEnvVarsSecret Name of existing Secret containing extra env vars (in case of sensitive data)\n  ##\n  extraEnvVarsSecret: \"\"\n  ## @param hidden.annotations Additional labels to be added to thehidden node statefulset\n  ##\n  annotations: {}\n  ## @param hidden.labels Annotations to be added to the hidden node statefulset\n  ##\n  labels: {}\n  ## @param hidden.topologySpreadConstraints MongoDB(\u0026reg;) Spread Constraints for hidden Pods\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\n  ##\n  topologySpreadConstraints: []\n  ## @param hidden.lifecycleHooks LifecycleHook for the Hidden container to automate configuration before or after startup\n  ##\n  lifecycleHooks: {}\n  ## @param hidden.replicaCount Number of hidden nodes (only when `architecture=replicaset`)\n  ## Ignored when mongodb.architecture=standalone\n  ##\n  replicaCount: 1\n  ## @param hidden.terminationGracePeriodSeconds Hidden Termination Grace Period\n  ##\n  terminationGracePeriodSeconds: \"\"\n  ## @param hidden.updateStrategy.type Strategy that will be employed to update Pods in the StatefulSet\n  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n  ## updateStrategy:\n  ##  type: RollingUpdate\n  ##  rollingUpdate:\n  ##    maxSurge: 25%\n  ##    maxUnavailable: 25%\n  ##\n  updateStrategy:\n    type: RollingUpdate\n  ## @param hidden.podManagementPolicy Pod management policy for hidden node\n  ##\n  podManagementPolicy: OrderedReady\n  ## @param hidden.schedulerName Name of the scheduler (other than default) to dispatch pods\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  schedulerName: \"\"\n  ## @param hidden.podAffinityPreset Hidden node Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAffinityPreset: \"\"\n  ## @param hidden.podAntiAffinityPreset Hidden node Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAntiAffinityPreset: soft\n  ## Node affinity preset\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n  ## Allowed values: soft, hard\n  ##\n  nodeAffinityPreset:\n    ## @param hidden.nodeAffinityPreset.type Hidden Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`\n    ##\n    type: \"\"\n    ## @param hidden.nodeAffinityPreset.key Hidden Node label key to match Ignored if `affinity` is set.\n    ## E.g.\n    ## key: \"kubernetes.io/e2e-az-name\"\n    ##\n    key: \"\"\n    ## @param hidden.nodeAffinityPreset.values Hidden Node label values to match. Ignored if `affinity` is set.\n    ## E.g.\n    ## values:\n    ##   - e2e-az1\n    ##   - e2e-az2\n    ##\n    values: []\n  ## @param hidden.affinity Hidden node Affinity for pod assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n  ## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set\n  ##\n  affinity: {}\n  ## @param hidden.nodeSelector Hidden node Node labels for pod assignment\n  ## ref: https://kubernetes.io/docs/user-guide/node-selection/\n  ##\n  nodeSelector: {}\n  ## @param hidden.tolerations Hidden node Tolerations for pod assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n  ## @param hidden.podLabels Hidden node pod labels\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n  ##\n  podLabels: {}\n  ## @param hidden.podAnnotations Hidden node Pod annotations\n  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n  ##\n  podAnnotations: {}\n  ## @param hidden.priorityClassName Name of the existing priority class to be used by hidden node pod(s)\n  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n  ##\n  priorityClassName: \"\"\n  ## @param hidden.runtimeClassName Name of the runtime class to be used by hidden node pod(s)\n  ## ref: https://kubernetes.io/docs/concepts/containers/runtime-class/\n  ##\n  runtimeClassName: \"\"\n  ## MongoDB(\u0026reg;) Hidden pods' Security Context.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\n  ## @param hidden.podSecurityContext.enabled Enable Hidden pod(s)' Security Context\n  ## @param hidden.podSecurityContext.fsGroup Group ID for the volumes of the Hidden pod(s)\n  ## @param hidden.podSecurityContext.sysctls sysctl settings of the Hidden pod(s)'\n  ##\n  podSecurityContext:\n    enabled: true\n    fsGroup: 1001\n    ## sysctl settings\n    ## Example:\n    ## sysctls:\n    ## - name: net.core.somaxconn\n    ##   value: \"10000\"\n    ##\n    sysctls: []\n  ## MongoDB(\u0026reg;) Hidden containers' Security Context (only main container).\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n  ## @param hidden.containerSecurityContext.enabled Enable Hidden container(s)' Security Context\n  ## @param hidden.containerSecurityContext.runAsUser User ID for the Hidden container\n  ## @param hidden.containerSecurityContext.runAsNonRoot Set Hidden containers' Security Context runAsNonRoot\n  ##\n  containerSecurityContext:\n    enabled: true\n    runAsUser: 1001\n    runAsNonRoot: true\n  ## MongoDB(\u0026reg;) Hidden containers' resource requests and limits.\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## We usually recommend not to specify default resources and to leave this as a conscious\n  ## choice for the user. This also increases chances charts run on environments with little\n  ## resources, such as Minikube. If you do want to specify resources, uncomment the following\n  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  ## @param hidden.resources.limits The resources limits for hidden node containers\n  ## @param hidden.resources.requests The requested resources for hidden node containers\n  ##\n  resources:\n    ## Example:\n    ## limits:\n    ##    cpu: 100m\n    ##    memory: 128Mi\n    ##\n    limits: {}\n    ## Examples:\n    ## requests:\n    ##    cpu: 100m\n    ##    memory: 128Mi\n    ##\n    requests: {}\n  ## @param hidden.containerPorts.mongodb MongoDB(\u0026reg;) hidden container port\n  ##\n  containerPorts:\n    mongodb: 27017\n  ## MongoDB(\u0026reg;) Hidden pods' liveness probe. Evaluated as a template.\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param hidden.livenessProbe.enabled Enable livenessProbe\n  ## @param hidden.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param hidden.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param hidden.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param hidden.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param hidden.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 30\n    periodSeconds: 20\n    timeoutSeconds: 10\n    failureThreshold: 6\n    successThreshold: 1\n  ## MongoDB(\u0026reg;) Hidden pods' readiness probe. Evaluated as a template.\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes\n  ## @param hidden.readinessProbe.enabled Enable readinessProbe\n  ## @param hidden.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param hidden.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param hidden.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param hidden.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param hidden.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 20\n    timeoutSeconds: 10\n    failureThreshold: 6\n    successThreshold: 1\n  ## Slow starting containers can be protected through startup probes\n  ## Startup probes are available in Kubernetes version 1.16 and above\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes\n  ## @param hidden.startupProbe.enabled Enable startupProbe\n  ## @param hidden.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n  ## @param hidden.startupProbe.periodSeconds Period seconds for startupProbe\n  ## @param hidden.startupProbe.timeoutSeconds Timeout seconds for startupProbe\n  ## @param hidden.startupProbe.failureThreshold Failure threshold for startupProbe\n  ## @param hidden.startupProbe.successThreshold Success threshold for startupProbe\n  ##\n  startupProbe:\n    enabled: false\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    timeoutSeconds: 5\n    successThreshold: 1\n    failureThreshold: 30\n  ## @param hidden.customLivenessProbe Override default liveness probe for hidden node containers\n  ## Ignored when hidden.livenessProbe.enabled=true\n  ##\n  customLivenessProbe: {}\n  ## @param hidden.customReadinessProbe Override default readiness probe for hidden node containers\n  ## Ignored when hidden.readinessProbe.enabled=true\n  ##\n  customReadinessProbe: {}\n  ## @param hidden.customStartupProbe Override default startup probe for MongoDB(\u0026reg;) containers\n  ## Ignored when hidden.startupProbe.enabled=true\n  ##\n  customStartupProbe: {}\n  ## @param hidden.initContainers Add init containers to the MongoDB(\u0026reg;) Hidden pods.\n  ## Example:\n  ## initContainers:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  initContainers: []\n  ## @param hidden.sidecars Add additional sidecar containers for the hidden node pod(s)\n  ## Example:\n  ## sidecars:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  sidecars: []\n  ## @param hidden.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the hidden node container(s)\n  ## Examples:\n  ## extraVolumeMounts:\n  ##   - name: extras\n  ##     mountPath: /usr/share/extras\n  ##     readOnly: true\n  ##\n  extraVolumeMounts: []\n  ## @param hidden.extraVolumes Optionally specify extra list of additional volumes to the hidden node statefulset\n  ## extraVolumes:\n  ##   - name: extras\n  ##     emptyDir: {}\n  ##\n  extraVolumes: []\n  ## MongoDB(\u0026reg;) Hidden Pod Disruption Budget configuration\n  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n  ##\n  pdb:\n    ## @param hidden.pdb.create Enable/disable a Pod Disruption Budget creation for hidden node pod(s)\n    ##\n    create: false\n    ## @param hidden.pdb.minAvailable Minimum number/percentage of hidden node pods that should remain scheduled\n    ##\n    minAvailable: 1\n    ## @param hidden.pdb.maxUnavailable Maximum number/percentage of hidden node pods that may be made unavailable\n    ##\n    maxUnavailable: \"\"\n  ## Enable persistence using Persistent Volume Claims\n  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/\n  ##\n  persistence:\n    ## @param hidden.persistence.enabled Enable hidden node data persistence using PVC\n    ##\n    enabled: true\n    ## @param hidden.persistence.medium Provide a medium for `emptyDir` volumes.\n    ## Requires hidden.persistence.enabled: false\n    ##\n    medium: \"\"\n    ## @param hidden.persistence.storageClass PVC Storage Class for hidden node data volume\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ## set, choosing the default provisioner.\n    ##\n    storageClass: \"\"\n    ## @param hidden.persistence.accessModes PV Access Mode\n    ##\n    accessModes:\n      - ReadWriteOnce\n    ## @param hidden.persistence.size PVC Storage Request for hidden node data volume\n    ##\n    size: 8Gi\n    ## @param hidden.persistence.annotations PVC annotations\n    ##\n    annotations: {}\n    ## @param hidden.persistence.mountPath The path the volume will be mounted at, useful when using different MongoDB(\u0026reg;) images.\n    ##\n    mountPath: /bitnami/mongodb\n    ## @param hidden.persistence.subPath The subdirectory of the volume to mount to, useful in dev environments\n    ## and one PV for multiple services.\n    ##\n    subPath: \"\"\n    ## Fine tuning for volumeClaimTemplates\n    ##\n    volumeClaimTemplates:\n      ## @param hidden.persistence.volumeClaimTemplates.selector A label query over volumes to consider for binding (e.g. when using local volumes)\n      ## See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#labelselector-v1-meta for more details\n      ##\n      selector: {}\n      ## @param hidden.persistence.volumeClaimTemplates.requests Custom PVC requests attributes\n      ## Sometime cloud providers use additional requests attributes to provision custom storage instance\n      ## See https://cloud.ibm.com/docs/containers?topic=containers-file_storage#file_dynamic_statefulset\n      ##\n      requests: {}\n      ## @param hidden.persistence.volumeClaimTemplates.dataSource Set volumeClaimTemplate dataSource\n      ##\n      dataSource: {}\n  service:\n    ## @param hidden.service.portName MongoDB(\u0026reg;) service port name\n    ##\n    portName: \"mongodb\"\n    ## @param hidden.service.ports.mongodb MongoDB(\u0026reg;) service port\n    ##\n    ports:\n      mongodb: 27017\n    ## @param hidden.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)\n    ##\n    extraPorts: []\n    ## @param hidden.service.annotations Provide any additional annotations that may be required\n    ##\n    annotations: {}\n    ## Headless service properties\n    ##\n    headless:\n      ## @param hidden.service.headless.annotations Annotations for the headless service.\n      ##\n      annotations: {}\n\n## @section Metrics parameters\n##\n\nmetrics:\n  ## @param metrics.enabled Enable using a sidecar Prometheus exporter\n  ##\n  enabled: true\n  ## Bitnami MongoDB(\u0026reg;) Promtheus Exporter image\n  ## ref: https://hub.docker.com/r/bitnami/mongodb-exporter/tags/\n  ## @param metrics.image.registry MongoDB(\u0026reg;) Prometheus exporter image registry\n  ## @param metrics.image.repository MongoDB(\u0026reg;) Prometheus exporter image repository\n  ## @param metrics.image.tag MongoDB(\u0026reg;) Prometheus exporter image tag (immutable tags are recommended)\n  ## @param metrics.image.digest MongoDB(\u0026reg;) image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n  ## @param metrics.image.pullPolicy MongoDB(\u0026reg;) Prometheus exporter image pull policy\n  ## @param metrics.image.pullSecrets Specify docker-registry secret names as an array\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/mongodb-exporter\n    tag: 0.39.0-debian-11-r10\n    digest: \"\"\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ## e.g:\n    ## pullSecrets:\n    ##   - myRegistryKeySecretName\n    ##\n    pullSecrets: []\n\n  ## @param metrics.username String with username for the metrics exporter\n  ## If undefined the root user will be used for the metrics exporter\n  ##\n  username: \"bifrost\"\n  ## @param metrics.password String with password for the metrics exporter\n  ## If undefined but metrics.username is defined, a random password will be generated\n  ##\n  password: \"Maniac321.\"\n  ## @param metrics.compatibleMode Enables old style mongodb-exporter metrics\n  compatibleMode: true\n\n  collector:\n    ## @param metrics.collector.all Enable all collectors. Same as enabling all individual metrics\n    ## Enabling all metrics will cause significant CPU load on mongod\n    all: false\n    ## @param metrics.collector.diagnosticdata Boolean Enable collecting metrics from getDiagnosticData\n    diagnosticdata: true\n    ## @param metrics.collector.replicasetstatus Boolean Enable collecting metrics from replSetGetStatus\n    replicasetstatus: true\n    ## @param metrics.collector.dbstats Boolean Enable collecting metrics from dbStats\n    dbstats: false\n    ## @param metrics.collector.topmetrics Boolean Enable collecting metrics from top admin command\n    topmetrics: false\n    ## @param metrics.collector.indexstats Boolean Enable collecting metrics from $indexStats\n    indexstats: false\n    ## @param metrics.collector.collstats Boolean Enable collecting metrics from $collStats\n    collstats: false\n    ## @param metrics.collector.collstatsColls List of \\\u003cdatabases\\\u003e.\\\u003ccollections\\\u003e to get $collStats\n    collstatsColls: []\n    ## @param metrics.collector.indexstatsColls List - List of \\\u003cdatabases\\\u003e.\\\u003ccollections\\\u003e to get $indexStats\n    indexstatsColls: []\n    ## @param metrics.collector.collstatsLimit Number - Disable collstats, dbstats, topmetrics and indexstats collector if there are more than \\\u003cn\\\u003e collections. 0=No limit\n    collstatsLimit: 0\n\n  ## @param metrics.extraFlags String with extra flags to the metrics exporter\n  ## ref: https://github.com/percona/mongodb_exporter/blob/main/main.go\n  ##\n  extraFlags: \"\"\n  ## Command and args for running the container (set to default if not set). Use array form\n  ## @param metrics.command Override default container command (useful when using custom images)\n  ## @param metrics.args Override default container args (useful when using custom images)\n  ##\n  command: []\n  args: []\n  ## Metrics exporter container resource requests and limits\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## We usually recommend not to specify default resources and to leave this as a conscious\n  ## choice for the user. This also increases chances charts run on environments with little\n  ## resources, such as Minikube. If you do want to specify resources, uncomment the following\n  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  ## @param metrics.resources.limits The resources limits for Prometheus exporter containers\n  ## @param metrics.resources.requests The requested resources for Prometheus exporter containers\n  ##\n  resources:\n    ## Example:\n    ## limits:\n    ##    cpu: 100m\n    ##    memory: 128Mi\n    ##\n    limits: {}\n    ## Examples:\n    ## requests:\n    ##    cpu: 100m\n    ##    memory: 128Mi\n    ##\n    requests: {}\n  ## @param metrics.containerPort Port of the Prometheus metrics container\n  ##\n  containerPort: 9216\n  ## Prometheus Exporter service configuration\n  ##\n  service:\n    ## @param metrics.service.annotations [object] Annotations for Prometheus Exporter pods. Evaluated as a template.\n    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n    ##\n    annotations:\n      prometheus.io/scrape: \"true\"\n      prometheus.io/port: \"{{ .Values.metrics.service.ports.metrics }}\"\n      prometheus.io/path: \"/metrics\"\n    ## @param metrics.service.type Type of the Prometheus metrics service\n    ##\n    type: ClusterIP\n    ## @param metrics.service.ports.metrics Port of the Prometheus metrics service\n    ##\n    ports:\n      metrics: 9216\n    ## @param metrics.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)\n    ##\n    extraPorts: []\n  ## Metrics exporter liveness probe\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)\n  ## @param metrics.livenessProbe.enabled Enable livenessProbe\n  ## @param metrics.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param metrics.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param metrics.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param metrics.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param metrics.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 15\n    periodSeconds: 5\n    timeoutSeconds: 10\n    failureThreshold: 3\n    successThreshold: 1\n  ## Metrics exporter readiness probe\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)\n  ## @param metrics.readinessProbe.enabled Enable readinessProbe\n  ## @param metrics.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param metrics.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param metrics.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param metrics.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param metrics.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 5\n    timeoutSeconds: 10\n    failureThreshold: 3\n    successThreshold: 1\n  ## Slow starting containers can be protected through startup probes\n  ## Startup probes are available in Kubernetes version 1.16 and above\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes\n  ## @param metrics.startupProbe.enabled Enable startupProbe\n  ## @param metrics.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n  ## @param metrics.startupProbe.periodSeconds Period seconds for startupProbe\n  ## @param metrics.startupProbe.timeoutSeconds Timeout seconds for startupProbe\n  ## @param metrics.startupProbe.failureThreshold Failure threshold for startupProbe\n  ## @param metrics.startupProbe.successThreshold Success threshold for startupProbe\n  ##\n  startupProbe:\n    enabled: false\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    timeoutSeconds: 5\n    successThreshold: 1\n    failureThreshold: 30\n  ## @param metrics.customLivenessProbe Override default liveness probe for MongoDB(\u0026reg;) containers\n  ## Ignored when livenessProbe.enabled=true\n  ##\n  customLivenessProbe: {}\n  ## @param metrics.customReadinessProbe Override default readiness probe for MongoDB(\u0026reg;) containers\n  ## Ignored when readinessProbe.enabled=true\n  ##\n  customReadinessProbe: {}\n  ## @param metrics.customStartupProbe Override default startup probe for MongoDB(\u0026reg;) containers\n  ## Ignored when startupProbe.enabled=true\n  ##\n  customStartupProbe: {}\n  ## @param metrics.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the metrics container(s)\n  ## Examples:\n  ## extraVolumeMounts:\n  ##   - name: extras\n  ##     mountPath: /usr/share/extras\n  ##     readOnly: true\n  ##\n  extraVolumeMounts: []\n  ## Prometheus Service Monitor\n  ## ref: https://github.com/coreos/prometheus-operator\n  ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md\n  ##\n  serviceMonitor:\n    ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using Prometheus Operator\n    ##\n    enabled: false\n    ## @param metrics.serviceMonitor.namespace Namespace which Prometheus is running in\n    ##\n    namespace: \"\"\n    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped\n    ##\n    interval: 30s\n    ## @param metrics.serviceMonitor.scrapeTimeout Specify the timeout after which the scrape is ended\n    ## e.g:\n    ## scrapeTimeout: 30s\n    ##\n    scrapeTimeout: \"\"\n    ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping.\n    ##\n    relabelings: []\n    ## @param metrics.serviceMonitor.metricRelabelings MetricsRelabelConfigs to apply to samples before ingestion.\n    ##\n    metricRelabelings: []\n    ## @param metrics.serviceMonitor.labels Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec\n    ##\n    labels: {}\n    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels\n    ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration\n    ##\n    selector: {}\n    ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint\n    ##\n    honorLabels: false\n    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.\n    ##\n    jobLabel: \"\"\n  ## Custom PrometheusRule to be defined\n  ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions\n  ##\n  prometheusRule:\n    ## @param metrics.prometheusRule.enabled Set this to true to create prometheusRules for Prometheus operator\n    ##\n    enabled: false\n    ## @param metrics.prometheusRule.additionalLabels Additional labels that can be used so prometheusRules will be discovered by Prometheus\n    ##\n    additionalLabels: {}\n    ## @param metrics.prometheusRule.namespace Namespace where prometheusRules resource should be created\n    ##\n    namespace: \"\"\n    ## @param metrics.prometheusRule.rules Rules to be created, check values for an example\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#rulegroup\n    ##      https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/\n    ##\n    ## This is an example of a rule, you should add the below code block under the \"rules\" param, removing the brackets\n    ## rules:\n    ## - alert: HighRequestLatency\n    ##   expr: job:request_latency_seconds:mean5m{job=\"myjob\"} \u003e 0.5\n    ##   for: 10m\n    ##   labels:\n    ##     severity: page\n    ##   annotations:\n    ##     summary: High request latency\n    ##\n    rules: []\n"
            ],
            "verify": false,
            "version": "13.15.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.datalake_ns-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "openebs",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "openebs",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "openebs",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "3.7.0",
                "chart": "openebs",
                "name": "openebs",
                "namespace": "openebs",
                "revision": 1,
                "values": "{\"analytics\":{\"enabled\":true,\"pingInterval\":\"24h\"},\"apiserver\":{\"affinity\":{},\"enabled\":true,\"healthCheck\":{\"initialDelaySeconds\":30,\"periodSeconds\":60},\"image\":\"openebs/m-apiserver\",\"imageTag\":\"2.12.2\",\"nodeSelector\":{},\"ports\":{\"externalPort\":5656,\"internalPort\":5656},\"replicas\":1,\"resources\":{},\"sparse\":{\"enabled\":\"false\"},\"tolerations\":[]},\"cleanup\":{\"image\":{\"imagePullSecrets\":[],\"registry\":null,\"repository\":\"bitnami/kubectl\",\"tag\":null}},\"crd\":{\"enableInstall\":true},\"cstor\":{\"enabled\":false,\"openebsNDM\":{\"enabled\":false},\"pool\":{\"image\":\"openebs/cstor-pool\",\"imageTag\":\"2.12.2\"},\"poolMgmt\":{\"image\":\"openebs/cstor-pool-mgmt\",\"imageTag\":\"2.12.2\"},\"target\":{\"image\":\"openebs/cstor-istgt\",\"imageTag\":\"2.12.2\"},\"volumeMgmt\":{\"image\":\"openebs/cstor-volume-mgmt\",\"imageTag\":\"2.12.2\"}},\"defaultStorageConfig\":{\"enabled\":\"true\"},\"featureGates\":{\"APIService\":{\"address\":\"0.0.0.0:9115\",\"enabled\":false,\"featureGateFlag\":\"APIService\"},\"ChangeDetection\":{\"enabled\":false,\"featureGateFlag\":\"ChangeDetection\"},\"GPTBasedUUID\":{\"enabled\":true,\"featureGateFlag\":\"GPTBasedUUID\"},\"PartitionTableUUID\":{\"enabled\":false,\"featureGateFlag\":\"PartitionTableUUID\"},\"UseOSDisk\":{\"enabled\":false,\"featureGateFlag\":\"UseOSDisk\"},\"enabled\":true},\"helper\":{\"image\":\"openebs/linux-utils\",\"imageTag\":\"3.4.0\"},\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"\"},\"imagePullSecrets\":[],\"jiva\":{\"defaultStoragePath\":\"/var/openebs\",\"enabled\":false,\"image\":\"openebs/jiva\",\"imageTag\":\"2.12.2\",\"localpv-provisioner\":{\"openebsNDM\":{\"enabled\":false}},\"openebsLocalpv\":{\"enabled\":false},\"replicas\":3},\"legacy\":{\"enabled\":true},\"localprovisioner\":{\"affinity\":{},\"basePath\":\"/var/openebs/local\",\"deviceClass\":{\"blockDeviceSelectors\":{},\"enabled\":true,\"fsType\":\"ext4\",\"isDefaultClass\":false,\"name\":\"openebs-device\",\"nodeAffinityLabels\":[],\"reclaimPolicy\":\"Delete\"},\"enableDeviceClass\":false,\"enableHostpathClass\":true,\"enableLeaderElection\":true,\"enabled\":true,\"healthCheck\":{\"initialDelaySeconds\":30,\"periodSeconds\":60},\"hostpathClass\":{\"basePath\":\"\",\"enabled\":true,\"ext4Quota\":{\"enabled\":false,\"hardLimitGrace\":\"0%\",\"softLimitGrace\":\"0%\"},\"isDefaultClass\":true,\"name\":\"openebs-hostpath\",\"nodeAffinityLabels\":[],\"reclaimPolicy\":\"Delete\",\"xfsQuota\":{\"enabled\":false,\"hardLimitGrace\":\"0%\",\"softLimitGrace\":\"0%\"}},\"image\":\"openebs/provisioner-localpv\",\"imageTag\":\"3.4.0\",\"nodeSelector\":{},\"replicas\":1,\"resources\":{},\"tolerations\":[],\"waitForBDBindTimeoutRetryCount\":\"12\"},\"localpv-provisioner\":{\"enabled\":false,\"openebsNDM\":{\"enabled\":false}},\"lvm-localpv\":{\"enabled\":false},\"mayastor\":{\"enabled\":false,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"registry\":\"docker.io\",\"repo\":\"openebs\",\"tag\":\"v2.2.0\"}},\"ndm\":{\"enabled\":true,\"filters\":{\"enableOsDiskExcludeFilter\":true,\"enablePathFilter\":true,\"enableVendorFilter\":true,\"excludePaths\":\"/dev/loop,/dev/fd0,/dev/sr0,/dev/ram,/dev/dm-,/dev/md,/dev/rbd,/dev/zd\",\"excludeVendors\":\"CLOUDBYT,OpenEBS\",\"includePaths\":\"\",\"osDiskExcludePaths\":\"/,/etc/hosts,/boot\"},\"healthCheck\":{\"initialDelaySeconds\":30,\"periodSeconds\":60},\"image\":\"openebs/node-disk-manager\",\"imageTag\":\"2.1.0\",\"nodeSelector\":{},\"probes\":{\"enableSeachest\":false},\"resources\":{},\"sparse\":{\"count\":\"0\",\"path\":\"/var/openebs/sparse\",\"size\":\"10737418240\"},\"tolerations\":[]},\"ndmExporter\":{\"clusterExporter\":{\"metricsPort\":9100,\"name\":\"ndm-cluster-exporter\",\"podLabels\":{\"name\":\"openebs-ndm-cluster-exporter\"}},\"enabled\":false,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"registry\":null,\"repository\":\"openebs/node-disk-exporter\",\"tag\":\"2.1.0\"},\"nodeExporter\":{\"metricsPort\":9101,\"name\":\"ndm-node-exporter\",\"podLabels\":{\"name\":\"openebs-ndm-node-exporter\"}}},\"ndmOperator\":{\"enabled\":true,\"healthCheck\":{\"initialDelaySeconds\":15,\"periodSeconds\":20},\"image\":\"openebs/node-disk-operator\",\"imageTag\":\"2.1.0\",\"nodeSelector\":{},\"readinessCheck\":{\"initialDelaySeconds\":5,\"periodSeconds\":10},\"replicas\":1,\"resources\":{},\"tolerations\":[],\"upgradeStrategy\":\"Recreate\"},\"nfs-provisioner\":{\"enabled\":false},\"openebs-ndm\":{\"enabled\":false},\"policies\":{\"monitoring\":{\"enabled\":true,\"image\":\"openebs/m-exporter\",\"imageTag\":\"2.12.2\"}},\"provisioner\":{\"affinity\":{},\"enableLeaderElection\":true,\"enabled\":true,\"healthCheck\":{\"initialDelaySeconds\":30,\"periodSeconds\":60},\"image\":\"openebs/openebs-k8s-provisioner\",\"imageTag\":\"2.12.2\",\"nodeSelector\":{},\"patchJivaNodeAffinity\":\"enabled\",\"replicas\":1,\"resources\":{},\"tolerations\":[]},\"rbac\":{\"create\":true,\"kyvernoEnabled\":false,\"pspEnabled\":false},\"release\":{\"version\":\"3.6.0\"},\"serviceAccount\":{\"create\":true,\"name\":\"openebs\"},\"snapshotOperator\":{\"affinity\":{},\"controller\":{\"image\":\"openebs/snapshot-controller\",\"imageTag\":\"2.12.2\",\"resources\":{}},\"enableLeaderElection\":true,\"enabled\":true,\"healthCheck\":{\"initialDelaySeconds\":30,\"periodSeconds\":60},\"nodeSelector\":{},\"provisioner\":{\"image\":\"openebs/snapshot-provisioner\",\"imageTag\":\"2.12.2\",\"resources\":{}},\"replicas\":1,\"tolerations\":[],\"upgradeStrategy\":\"Recreate\"},\"varDirectoryPath\":{\"baseDir\":\"/var/openebs\"},\"webhook\":{\"affinity\":{},\"enabled\":true,\"failurePolicy\":\"Fail\",\"healthCheck\":{\"initialDelaySeconds\":30,\"periodSeconds\":60},\"hostNetwork\":false,\"image\":\"openebs/admission-server\",\"imageTag\":\"2.12.2\",\"nodeSelector\":{},\"replicas\":1,\"resources\":{},\"tolerations\":[]},\"zfs-localpv\":{\"enabled\":false}}",
                "version": "3.7.0"
              }
            ],
            "name": "openebs",
            "namespace": "openebs",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://openebs.github.io/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "localprovisioner.enableDeviceClass",
                "type": "",
                "value": "false"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for openebs.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nrbac:\n  # Specifies whether RBAC resources should be created\n  create: true\n  pspEnabled: false\n  # rbac.kyvernoEnabled: `true` if Kyverno Policy resources should be created\n  kyvernoEnabled: false\n\nserviceAccount:\n  create: true\n  name: openebs\n\nimagePullSecrets: []\n  #  - name: image-pull-secret\n\nrelease:\n  # \"openebs.io/version\" label for control plane components\n  version: \"3.6.0\"\n\n# Legacy components will be installed if it is enabled.\n# Legacy components are - admission-server, maya api-server, snapshot-operator\n# and k8s-provisioner\nlegacy:\n  enabled: true\n\nimage:\n  pullPolicy: IfNotPresent\n  repository: \"\"\n\napiserver:\n  enabled: true\n  image: \"openebs/m-apiserver\"\n  imageTag: \"2.12.2\"\n  replicas: 1\n  ports:\n    externalPort: 5656\n    internalPort: 5656\n  sparse:\n    enabled: \"false\"\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n  healthCheck:\n    initialDelaySeconds: 30\n    periodSeconds: 60\n  ## apiserver resource requests and limits\n  ## Reference: http://kubernetes.io/docs/user-guide/compute-resources/\n  resources: {}\n    # limits:\n    #   cpu: 1000m\n    #   memory: 2Gi\n    # requests:\n    #   cpu: 500m\n    #   memory: 1Gi\n\n\ndefaultStorageConfig:\n  enabled: \"true\"\n\n# Directory used by the OpenEBS to store debug information and so forth\n# that are generated in the course of running OpenEBS containers.\nvarDirectoryPath:\n  baseDir: \"/var/openebs\"\n\nprovisioner:\n  enabled: true\n  image: \"openebs/openebs-k8s-provisioner\"\n  imageTag: \"2.12.2\"\n  replicas: 1\n  enableLeaderElection: true\n  patchJivaNodeAffinity: enabled\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n  healthCheck:\n    initialDelaySeconds: 30\n    periodSeconds: 60\n  ## provisioner resource requests and limits\n  ## Reference: http://kubernetes.io/docs/user-guide/compute-resources/\n  resources: {}\n    # limits:\n    #   cpu: 1000m\n    #   memory: 2Gi\n    # requests:\n    #   cpu: 500m\n    #   memory: 1Gi\n\n# If you want to enable local pv as a dependency chart then set\n# `localprovisioner.enabled: false` and enable it as dependency chart.\n# If you are using custom configuration then update those configuration\n# under `localpv-provisioner` key.\nlocalprovisioner:\n  enabled: true\n  image: \"openebs/provisioner-localpv\"\n  imageTag: \"3.4.0\"\n  replicas: 1\n  enableLeaderElection: true\n  # These fields are deprecated. Please use the fields (see below)\n  # - deviceClass.enabled\n  # - hostpathClass.enabled\n  enableDeviceClass: false\n  enableHostpathClass: true\n  # This sets default directory used by the provisioner to provision\n  # hostpath volumes.\n  basePath: \"/var/openebs/local\"\n  # This sets the number of times the provisioner should try\n  # with a polling interval of 5 seconds, to get the Blockdevice\n  # Name from a BlockDeviceClaim, before the BlockDeviceClaim\n  # is deleted. E.g. 12 * 5 seconds = 60 seconds timeout\n  waitForBDBindTimeoutRetryCount: \"12\"\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n  healthCheck:\n    initialDelaySeconds: 30\n    periodSeconds: 60\n  ## localprovisioner resource requests and limits\n  ## Reference: http://kubernetes.io/docs/user-guide/compute-resources/\n  resources: {}\n    # limits:\n    #   cpu: 1000m\n    #   memory: 2Gi\n    # requests:\n    #   cpu: 500m\n    #   memory: 1Gi\n\n  deviceClass:\n    # Name of default device StorageClass.\n    name: openebs-device\n    # If true, enables creation of the openebs-device StorageClass\n    enabled: true\n    # Available reclaim policies: Delete/Retain, defaults: Delete.\n    reclaimPolicy: Delete\n    # If true, sets the openebs-device StorageClass as the default StorageClass\n    isDefaultClass: false\n    # Custom node affinity label(s) for example \"openebs.io/node-affinity-value\"\n    # that will be used instead of hostnames\n    # This helps in cases where the hostname changes when the node is removed and\n    # added back with the disks still intact.\n    # Example:\n    #          nodeAffinityLabels:\n    #            - \"openebs.io/node-affinity-key-1\"\n    #            - \"openebs.io/node-affinity-key-2\"\n    nodeAffinityLabels: []\n    # Sets the filesystem to be written to the blockdevice before\n    # mounting (filesystem volumes)\n    # This is only usable if the selected BlockDevice does not already\n    # have a filesystem\n    # Valid values: \"ext4\", \"xfs\"\n    fsType: \"ext4\"\n    # Label block devices in the cluster that you would like the openEBS localPV\n    # Provisioner to pick up those specific block devices available on the node.\n    # Set the label key and value as shown in the example below.\n    #\n    # To read more: https://github.com/openebs/dynamic-localpv-provisioner/blob/develop/docs/tutorials/device/blockdevicetag.md\n    #\n    # Example:\n    #          blockDeviceSelectors:\n    #            ndm.io/driveType: \"SSD\"\n    #            ndm.io/fsType: \"none\"\n    blockDeviceSelectors: {}\n\n  hostpathClass:\n    # Name of the default hostpath StorageClass\n    name: openebs-hostpath\n    # If true, enables creation of the openebs-hostpath StorageClass\n    enabled: true\n    # Available reclaim policies: Delete/Retain, defaults: Delete.\n    reclaimPolicy: Delete\n    # If true, sets the openebs-hostpath StorageClass as the default StorageClass\n    isDefaultClass: true\n    # Path on the host where local volumes of this storage class are mounted under.\n    # NOTE: If not specified, this defaults to the value of localprovisioner.basePath.\n    basePath: \"\"\n    # Custom node affinity label(s) for example \"openebs.io/node-affinity-value\"\n    # that will be used instead of hostnames\n    # This helps in cases where the hostname changes when the node is removed and\n    # added back with the disks still intact.\n    # Example:\n    #          nodeAffinityLabels:\n    #            - \"openebs.io/node-affinity-key-1\"\n    #            - \"openebs.io/node-affinity-key-2\"\n    nodeAffinityLabels: []\n    # Prerequisite: XFS Quota requires an XFS filesystem mounted with\n    # the 'pquota' or 'prjquota' mount option.\n    xfsQuota:\n      # If true, enables XFS project quota\n      enabled: false\n      # Detailed configuration options for XFS project quota.\n      # If XFS Quota is enabled with the default values, the usage limit\n      # is set at the storage capacity specified in the PVC.\n      softLimitGrace: \"0%\"\n      hardLimitGrace: \"0%\"\n    # Prerequisite: EXT4 Quota requires an EXT4 filesystem mounted with\n    # the 'prjquota' mount option.\n    ext4Quota:\n      # If true, enables XFS project quota\n      enabled: false\n      # Detailed configuration options for EXT4 project quota.\n      # If EXT4 Quota is enabled with the default values, the usage limit\n      # is set at the storage capacity specified in the PVC.\n      softLimitGrace: \"0%\"\n      hardLimitGrace: \"0%\"\n\nsnapshotOperator:\n  enabled: true\n  controller:\n    image: \"openebs/snapshot-controller\"\n    imageTag: \"2.12.2\"\n    ## snapshot controller resource requests and limits\n    ## Reference: http://kubernetes.io/docs/user-guide/compute-resources/\n    resources: {}\n      # limits:\n      #   cpu: 1000m\n      #   memory: 2Gi\n      # requests:\n      #   cpu: 500m\n      #   memory: 1Gi\n  provisioner:\n    image: \"openebs/snapshot-provisioner\"\n    imageTag: \"2.12.2\"\n    ## snapshot provisioner resource requests and limits\n    ## Reference: http://kubernetes.io/docs/user-guide/compute-resources/\n    resources: {}\n      # limits:\n      #   cpu: 1000m\n      #   memory: 2Gi\n      # requests:\n      #   cpu: 500m\n      #   memory: 1Gi\n  replicas: 1\n  enableLeaderElection: true\n  upgradeStrategy: \"Recreate\"\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n  healthCheck:\n    initialDelaySeconds: 30\n    periodSeconds: 60\n\n# If you want to enable openebs as a dependency chart then set `ndm.enabled: false`,\n# `ndmOperator.enabled: false` and enable it as dependency chart. If you are using\n# custom configuration then update those configuration under `openebs-ndm` key.\nndm:\n  enabled: true\n  image: \"openebs/node-disk-manager\"\n  imageTag: \"2.1.0\"\n  sparse:\n    path: \"/var/openebs/sparse\"\n    size: \"10737418240\"\n    count: \"0\"\n  filters:\n    enableOsDiskExcludeFilter: true\n    osDiskExcludePaths: \"/,/etc/hosts,/boot\"\n    enableVendorFilter: true\n    excludeVendors: \"CLOUDBYT,OpenEBS\"\n    enablePathFilter: true\n    includePaths: \"\"\n    excludePaths: \"/dev/loop,/dev/fd0,/dev/sr0,/dev/ram,/dev/dm-,/dev/md,/dev/rbd,/dev/zd\"\n  probes:\n    enableSeachest: false\n  nodeSelector: {}\n  tolerations: []\n  healthCheck:\n    initialDelaySeconds: 30\n    periodSeconds: 60\n  ## ndm resource requests and limits\n  ## Reference: http://kubernetes.io/docs/user-guide/compute-resources/\n  resources: {}\n    # limits:\n    #   cpu: 1000m\n    #   memory: 2Gi\n    # requests:\n    #   cpu: 500m\n    #   memory: 1Gi\n\n# If you want to enable openebs as a dependency chart then set `ndm.enabled: false`,\n# `ndmOperator.enabled: false` and enable it as dependency chart. If you are using\n# custom configuration then update those configuration under `openebs-ndm` key.\nndmOperator:\n  enabled: true\n  image: \"openebs/node-disk-operator\"\n  imageTag: \"2.1.0\"\n  replicas: 1\n  upgradeStrategy: Recreate\n  nodeSelector: {}\n  tolerations: []\n  healthCheck:\n    initialDelaySeconds: 15\n    periodSeconds: 20\n  readinessCheck:\n    initialDelaySeconds: 5\n    periodSeconds: 10\n  ## ndmOperator resource requests and limits\n  ## Reference: http://kubernetes.io/docs/user-guide/compute-resources/\n  resources: {}\n    # limits:\n    #   cpu: 1000m\n    #   memory: 2Gi\n    # requests:\n    #   cpu: 500m\n    #   memory: 1Gi\n\nndmExporter:\n  enabled: false\n  image:\n    registry:\n    repository: openebs/node-disk-exporter\n    pullPolicy: IfNotPresent\n    # Overrides the image tag whose default is the chart appVersion.\n    tag: 2.1.0\n  nodeExporter:\n    name: ndm-node-exporter\n    podLabels:\n      name: openebs-ndm-node-exporter\n    # The TCP port number used for exposing ndm-node-exporter metrics.\n    # If not set, service will not be created to expose metrics endpoint to serviceMonitor\n    # and listen-port flag will not be set and container port will be empty.\n    metricsPort: 9101\n  clusterExporter:\n    name: ndm-cluster-exporter\n    podLabels:\n      name: openebs-ndm-cluster-exporter\n    # The TCP port number used for exposing ndm-cluster-exporter metrics.\n    # If not set, service will not be created to expose metrics endpoint to serviceMonitor\n    # and listen-port flag will not be set and container port will be empty.\n    metricsPort: 9100\n\nwebhook:\n  enabled: true\n  image: \"openebs/admission-server\"\n  imageTag: \"2.12.2\"\n  failurePolicy: \"Fail\"\n  replicas: 1\n  healthCheck:\n    initialDelaySeconds: 30\n    periodSeconds: 60\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n  hostNetwork: false\n  ## admission-server resource requests and limits\n  ## Reference: http://kubernetes.io/docs/user-guide/compute-resources/\n  resources: {}\n    # limits:\n    #   cpu: 500m\n    #   memory: 1Gi\n    # requests:\n    #   cpu: 250m\n    #   memory: 500Mi\n\n# If you are migrating from 2.x to 3.x and if you are using custom values\n# then put this configuration under `localpv-provisioner` and `openebs-ndm` key.\nhelper:\n  image: \"openebs/linux-utils\"\n  imageTag: \"3.4.0\"\n\n# These are ndm related configuration. If you want to enable openebs as a dependency\n# chart then set `ndm.enabled: false`, `ndmOperator.enabled: false` and enable it as\n# dependency chart. If you are using custom configuration then update those configuration\n# under `openebs-ndm` key.\nfeatureGates:\n  enabled: true\n  GPTBasedUUID:\n    enabled: true\n    featureGateFlag: \"GPTBasedUUID\"\n  APIService:\n    enabled: false\n    featureGateFlag: \"APIService\"\n    address: \"0.0.0.0:9115\"\n  UseOSDisk:\n    enabled: false\n    featureGateFlag: \"UseOSDisk\"\n  ChangeDetection:\n    enabled: false\n    featureGateFlag: \"ChangeDetection\"\n  PartitionTableUUID:\n    enabled: false\n    featureGateFlag: \"PartitionTableUUID\"\n\ncrd:\n  enableInstall: true\n\n# If you are migrating from 2.x to 3.x and if you are using custom values\n# then put these configuration under `cstor` key.\npolicies:\n  monitoring:\n    enabled: true\n    image: \"openebs/m-exporter\"\n    imageTag: \"2.12.2\"\n\nanalytics:\n  enabled: true\n  # Specify in hours the duration after which a ping event needs to be sent.\n  pingInterval: \"24h\"\n\nmayastor:\n  # -- Enable Mayastor storage engine\n  # Note: Enabling this will remove LocalPV Provisioner and NDM (default chart components).\n  enabled: false\n\n  # Sample configuration, if you want to configure mayastor with custom values.\n  # This is a small part of the full configuration. Full configuration available\n  # here - https://github.com/openebs/mayastor-extensions/blob/v2.2.0/chart/values.yaml\n\n  image:\n    # -- Image registry to pull Mayastor product images\n    registry: docker.io\n    # -- Image registry's namespace\n    repo: openebs\n    # -- Release tag for Mayastor images\n    tag: v2.2.0\n    # -- ImagePullPolicy for Mayastor images\n    pullPolicy: IfNotPresent\n\n  # -- Pod scheduling priority\n  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n  # priorityClassName: \"\"\n\n  # base:\n  #   # docker-secrets required to pull images if the container registry from image.Registry is protected\n  #   imagePullSecrets:\n  #     # -- Enable imagePullSecrets for pulling our container images\n  #     enabled: false\n  #     # Name of the imagePullSecret in the installed namespace\n  #     secrets:\n  #       - name: login\n\n  #   metrics:\n  #     # -- Enable the metrics exporter\n  #     enabled: true\n\n  #   jaeger:\n  #     # -- Enable jaeger tracing\n  #     enabled: false\n\n  # operators:\n  #   pool:\n  #     # -- Log level for diskpool operator service\n  #     logLevel: info\n\n  # jaeger-operator:\n  #   # Name of jaeger operator\n  #   name: \"{{ .Release.Name }}\"\n  #   crd:\n  #     # Install jaeger CRDs\n  #     install: false\n  #   jaeger:\n  #     # Install jaeger-operator\n  #     create: false\n  #   rbac:\n  #     # Create a clusterRole for Jaeger\n  #     clusterRole: true\n\n  # agents:\n  #   core:\n  #     # -- Log level for the core service\n  #     logLevel: info\n  #     capacity:\n  #       thin:\n  #       # -- The allowed pool commitment limit when dealing with thin provisioned volumes.\n  #       # Example: If the commitment is 250 and the pool is 10GiB we can overcommit the pool\n  #       # up to 25GiB (create 2 10GiB and 1 5GiB volume) but no further.\n  #       poolCommitment: \"250%\"\n  #       # -- When creating replicas for an existing volume, each replica pool must have at least\n  #       # this much free space percentage of the volume size.\n  #       # Example: if this value is 40, the pool has 40GiB free, then the max volume size allowed\n  #       # to be created on the pool is 100GiB.\n  #       volumeCommitment: \"40%\"\n  #       # -- Same as the `volumeCommitment` argument, but applicable only when creating replicas\n  #       # for a new volume.\n  #       volumeCommitmentInitial: \"40%\"\n  #   ha:\n  #     enabled: true\n  #     node:\n  #       # -- Log level for the ha node service\n  #       logLevel: info\n  #     cluster:\n  #       # -- Log level for the ha cluster service\n  #       logLevel: info\n\n  # apis:\n  #   rest:\n  #     # -- Log level for the rest service\n  #     logLevel: info\n  #     # -- Number of replicas of rest\n  #     replicaCount: 1\n\n  # csi:\n  #   image:\n  #     # -- Image registry to pull all CSI Sidecar images\n  #     registry: registry.k8s.io\n  #     # -- Image registry's namespace\n  #     repo: sig-storage\n  #     # -- imagePullPolicy for all CSI Sidecar images\n  #     pullPolicy: IfNotPresent\n  #     # -- csi-provisioner image release tag\n  #     provisionerTag: v2.2.1\n  #     # -- csi-attacher image release tag\n  #     attacherTag: v3.2.1\n  #     # -- csi-node-driver-registrar image release tag\n  #     registrarTag: v2.1.0\n\n  #   controller:\n  #     # -- Log level for the csi controller\n  #     logLevel: info\n\n  #   node:\n  #     logLevel: info\n  #     topology:\n  #       segments:\n  #         openebs.io/csi-node: mayastor\n  #       # -- Add topology segments to the csi-node daemonset node selector\n  #       nodeSelector: false\n  #     kubeletDir: /var/lib/kubelet\n\n  # io_engine:\n  #   # -- Log level for the io-engine service\n  #   logLevel: info\n  #   # -- Node selectors to designate storage nodes for diskpool creation\n  #   # Note that if multi-arch images support 'kubernetes.io/arch: amd64'\n  #   # should be removed.\n  #   nodeSelector:\n  #     openebs.io/engine: mayastor\n  #     kubernetes.io/arch: amd64\n\n  # etcd:\n  #   # Pod labels; okay to remove the openebs logging label if required\n  #   podLabels:\n  #     app: etcd\n  #     openebs.io/logging: \"true\"\n  #   # -- Number of replicas of etcd\n  #   replicaCount: 3\n  #   persistence:\n  #     # -- If true, use a Persistent Volume Claim. If false, use emptyDir.\n  #     enabled: true\n  #     # -- Will define which storageClass to use in etcd's StatefulSets\n  #     # a `manual` storageClass will provision a hostpath PV on the same node\n  #     # an empty storageClass will use the default StorageClass on the cluster\n  #     storageClass: \"\"\n  #     # -- Volume size\n  #     size: 2Gi\n  #   podAntiAffinityPreset: \"hard\"\n\n  # loki-stack:\n  #   # -- Enable loki log collection for Mayastor components\n  #   enabled: true\n\n  # obs:\n  #   callhome:\n  #     # -- Enable callhome\n  #     enabled: true\n  #     # -- Log level for callhome\n  #     logLevel: \"info\"\n\njiva:\n  # non csi configuration\n  image: \"openebs/jiva\"\n  imageTag: \"2.12.2\"\n  replicas: 3\n  defaultStoragePath: \"/var/openebs\"\n\n  # jiva csi driver configuration\n  # do not enable or configure any sub dependency here\n  # only jiva csi related settings can be added here\n  # ref - https://openebs.github.io/jiva-operator\n\n  # jiva chart dependency tree is here -\n  # jiva\n  # | - localpv-provisioner\n  # | | - openebs-ndm\n\n  # Enable localpv-provisioner and openebs-ndm as root dependency not as\n  # sub dependency.\n  # openebs\n  # | - jiva(enable)\n  # | | - localpv-provisioner(disable)\n  # | | | - openebs-ndm(disable)\n  # | - localpv-provisioner(enable)\n  # | - openebs-ndm(enable)\n\n  enabled: false\n  openebsLocalpv:\n    enabled: false\n  localpv-provisioner:\n    openebsNDM:\n      enabled: false\n\n  # Sample configuration if you want to configure jiva csi driver with custom values.\n  # This is a small part of the full configuration. Full configuration available\n  # here - https://openebs.github.io/jiva-operator\n\n#  rbac:\n#    create: true\n#    pspEnabled: false\n#\n#  jivaOperator:\n#    controller:\n#      image:\n#        registry: quay.io/\n#        repository: openebs/jiva\n#        tag: 3.4.0\n#    replica:\n#      image:\n#        registry: quay.io/\n#        repository: openebs/jiva\n#        tag: 3.4.0\n#    image:\n#      registry: quay.io/\n#      repository: openebs/jiva-operator\n#      pullPolicy: IfNotPresent\n#      tag: 3.4.0\n#\n#  jivaCSIPlugin:\n#    remount: \"true\"\n#    image:\n#      registry: quay.io/\n#      repository: openebs/jiva-csi\n#      pullPolicy: IfNotPresent\n#      tag: 3.4.0\n\ncstor:\n\n  # non csi configuration\n  pool:\n    image: \"openebs/cstor-pool\"\n    imageTag: \"2.12.2\"\n  poolMgmt:\n    image: \"openebs/cstor-pool-mgmt\"\n    imageTag: \"2.12.2\"\n  target:\n    image: \"openebs/cstor-istgt\"\n    imageTag: \"2.12.2\"\n  volumeMgmt:\n    image: \"openebs/cstor-volume-mgmt\"\n    imageTag: \"2.12.2\"\n\n  # cstor csi driver configuration\n  # do not enable or configure any sub dependency here\n  # only cstor csi related settings can be added here\n  # ref - https://openebs.github.io/cstor-operators\n\n  # cstor chart dependency tree is here -\n  # cstor\n  # | - openebs-ndm\n\n  # Enable openebs-ndm as root dependency not as sub dependency.\n  # openebs\n  # | - cstor(enable)\n  # | | - openebs-ndm(disable)\n  # | - openebs-ndm(enable)\n  enabled: false\n  openebsNDM:\n    enabled: false\n\n  # Sample configuration if you want to configure cstor csi driver with custom values.\n  # This is a small part of the full configuration. Full configuration available\n  # here - https://openebs.github.io/cstor-operators\n\n#  imagePullSecrets: []\n#\n#  rbac:\n#    create: true\n#    pspEnabled: false\n#\n#  cspcOperator:\n#    poolManager:\n#      image:\n#        registry: quay.io/\n#        repository: openebs/cstor-pool-manager\n#        tag: 3.4.0\n#    cstorPool:\n#      image:\n#        registry: quay.io/\n#        repository: openebs/cstor-pool\n#        tag: 3.4.0\n#    cstorPoolExporter:\n#      image:\n#        registry: quay.io/\n#        repository: openebs/m-exporter\n#        tag: 3.4.0\n#    image:\n#      registry: quay.io/\n#      repository: openebs/cspc-operator\n#      pullPolicy: IfNotPresent\n#      tag: 3.4.0\n#\n#  cvcOperator:\n#    target:\n#      image:\n#        registry: quay.io/\n#        repository: openebs/cstor-istgt\n#        tag: 3.4.0\n#    volumeMgmt:\n#      image:\n#        registry: quay.io/\n#        repository: openebs/cstor-volume-manager\n#        tag: 3.4.0\n#    volumeExporter:\n#      image:\n#        registry: quay.io/\n#        repository: openebs/m-exporter\n#        tag: 3.4.0\n#    image:\n#      registry: quay.io/\n#      repository: openebs/cvc-operator\n#      pullPolicy: IfNotPresent\n#      tag: 3.4.0\n#\n#  cstorCSIPlugin:\n#    image:\n#      registry: quay.io/\n#      repository: openebs/cstor-csi-driver\n#      pullPolicy: IfNotPresent\n#      tag: 3.4.0\n#\n#  admissionServer:\n#    componentName: cstor-admission-webhook\n#    image:\n#      registry: quay.io/\n#      repository: openebs/cstor-webhook\n#      pullPolicy: IfNotPresent\n#      tag: 3.4.0\n\n# ndm configuration goes here\n# https://openebs.github.io/node-disk-manager\nopenebs-ndm:\n  enabled: false\n\n  # Sample configuration if you want to configure openebs ndm with custom values.\n  # This is a small part of the full configuration. Full configuration available\n  # here - https://openebs.github.io/node-disk-manager\n\n#  imagePullSecrets: []\n#\n#  ndm:\n#    image:\n#      registry: quay.io/\n#      repository: openebs/node-disk-manager\n#      pullPolicy: IfNotPresent\n#      tag: 2.1.0\n#    sparse:\n#      path: \"/var/openebs/sparse\"\n#      size: \"10737418240\"\n#      count: \"0\"\n#    filters:\n#      enableOsDiskExcludeFilter: true\n#      osDiskExcludePaths: \"/,/etc/hosts,/boot\"\n#      enableVendorFilter: true\n#      excludeVendors: \"CLOUDBYT,OpenEBS\"\n#      enablePathFilter: true\n#      includePaths: \"\"\n#      excludePaths: \"loop,fd0,sr0,/dev/ram,/dev/dm-,/dev/md,/dev/rbd,/dev/zd\"\n#    probes:\n#      enableSeachest: false\n#      enableUdevProbe: true\n#      enableSmartProbe: true\n#\n#  ndmOperator:\n#    image:\n#      registry: quay.io/\n#      repository: openebs/node-disk-operator\n#      pullPolicy: IfNotPresent\n#      tag: 2.1.0\n#\n#  helperPod:\n#    image:\n#      registry: quay.io/\n#      repository: openebs/linux-utils\n#      pullPolicy: IfNotPresent\n#      tag: 3.4.0\n#\n#  featureGates:\n#    enabled: true\n#    GPTBasedUUID:\n#      enabled: true\n#      featureGateFlag: \"GPTBasedUUID\"\n#    APIService:\n#      enabled: false\n#      featureGateFlag: \"APIService\"\n#      address: \"0.0.0.0:9115\"\n#    UseOSDisk:\n#      enabled: false\n#      featureGateFlag: \"UseOSDisk\"\n#    ChangeDetection:\n#      enabled: false\n#      featureGateFlag: \"ChangeDetection\"\n#\n#  varDirectoryPath:\n#    baseDir: \"/var/openebs\"\n\n  # local pv provisioner configuration goes here\n  # do not enable or configure any sub dependency here\n  # ref - https://openebs.github.io/dynamic-localpv-provisioner\n\n  # local pv chart dependency tree is here -\n  # localpv-provisioner\n  # | - openebs-ndm\n\n  # Enable openebs-ndm as root dependency not as sub dependency.\n  # openebs\n  # | - localpv-provisioner(enable)\n  # | | - openebs-ndm(disable)\n  # | - openebs-ndm(enable)\nlocalpv-provisioner:\n  enabled: false\n  openebsNDM:\n    enabled: false\n\n  # Sample configuration if you want to configure openebs locapv with custom values.\n  # This is a small part of the full configuration. Full configuration available\n  # here - https://openebs.github.io/dynamic-localpv-provisioner\n\n#  imagePullSecrets: []\n#\n#  rbac:\n#    create: true\n#    pspEnabled: false\n#\n#  localpv:\n#    image:\n#      registry: quay.io/\n#      repository: openebs/provisioner-localpv\n#      tag: 3.4.0\n#      pullPolicy: IfNotPresent\n#    healthCheck:\n#      initialDelaySeconds: 30\n#      periodSeconds: 60\n#    replicas: 1\n#    enableLeaderElection: true\n#    basePath: \"/var/openebs/local\"\n#\n#  helperPod:\n#    image:\n#      registry: quay.io/\n#      repository: openebs/linux-utils\n#      pullPolicy: IfNotPresent\n#      tag: 3.4.0\n\n# zfs local pv configuration goes here\n# ref - https://openebs.github.io/zfs-localpv\nzfs-localpv:\n  enabled: false\n\n  # Sample configuration if you want to configure zfs locapv with custom values.\n  # This is a small part of the full configuration. Full configuration available\n  # here - https://openebs.github.io/zfs-localpv\n\n#  imagePullSecrets: []\n#\n#  rbac:\n#    pspEnabled: false\n#\n#  zfsPlugin:\n#    image:\n#      registry: quay.io/\n#      repository: openebs/zfs-driver\n#      pullPolicy: IfNotPresent\n#      tag: 2.2.0\n\n# lvm local pv configuration goes here\n# ref - https://openebs.github.io/lvm-localpv\nlvm-localpv:\n  enabled: false\n\n  # Sample configuration if you want to configure lvm localpv with custom values.\n  # This is a small part of the full configuration. Full configuration available\n  # here - https://openebs.github.io/lvm-localpv\n\n#  imagePullSecrets: []\n#\n#  rbac:\n#    pspEnabled: false\n#\n#  lvmPlugin:\n#    image:\n#      registry: quay.io/\n#      repository: openebs/lvm-driver\n#      pullPolicy: IfNotPresent\n#      tag: 1.1.0\n\n# openebs nfs provisioner configuration goes here\n# ref - https://openebs.github.io/dynamic-nfs-provisioner\nnfs-provisioner:\n  enabled: false\n\n  # Sample configuration if you want to configure nfs-provisioner with custom values.\n  # This is a small part of the full configuration. Full configuration available\n  # here - https://openebs.github.io/dynamic-nfs-provisioner\n\n#  imagePullSecrets: []\n#\n#  rbac:\n#    pspEnabled: false\n#\n#  nfsProvisioner:\n#    image:\n#      registry:\n#      repository: openebs/provisioner-nfs\n#      tag: 0.10.0\n#      pullPolicy: IfNotPresent\n#    enableLeaderElection: \"true\"\n#    nfsServerAlpineImage:\n#      registry:\n#      repository: openebs/nfs-server-alpine\n#      tag: 0.10.0\n\ncleanup:\n  image:\n    # Make sure that registry name end with a '/'.\n    # For example : quay.io/ is a correct value here and quay.io is incorrect\n    registry:\n    repository: bitnami/kubectl\n    tag:\n    imagePullSecrets: []\n      #  - name: image-pull-secret"
            ],
            "verify": false,
            "version": "3.7.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.openebs-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "percona-operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "pxc-operator",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "percona-operator",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.14.0",
                "chart": "pxc-operator",
                "name": "percona-operator",
                "namespace": "datalake",
                "revision": 1,
                "values": "{}",
                "version": "1.14.1"
              }
            ],
            "name": "percona-operator",
            "namespace": "datalake",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://percona.github.io/percona-helm-charts/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.14.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "percona-xtradb-cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "pxc-db",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "percona-xtradb-cluster",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.14.0",
                "chart": "pxc-db",
                "name": "percona-xtradb-cluster",
                "namespace": "datalake",
                "revision": 10,
                "values": "{\"allowUnsafeConfigurations\":false,\"annotations\":{},\"backup\":{\"enabled\":true,\"image\":{\"repository\":\"percona/percona-xtradb-cluster-operator\",\"tag\":\"1.14.0-pxc8.0-backup-pxb8.0.35\"},\"imagePullSecrets\":[],\"pitr\":{\"enabled\":false,\"resources\":{\"limits\":{},\"requests\":{}},\"storageName\":\"s3-us-west-binlogs\",\"timeBetweenUploads\":60,\"timeoutSeconds\":60},\"schedule\":[{\"keep\":5,\"name\":\"daily-backup\",\"schedule\":\"0 0 * * *\",\"storageName\":\"s3\"},{\"keep\":4,\"name\":\"sat-night-backup\",\"schedule\":\"0 0 * * 6\",\"storageName\":\"fs-pvc\"}],\"storages\":{\"fs-pvc\":{\"type\":\"filesystem\",\"volume\":{\"persistentVolumeClaim\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"30Gi\"}},\"storageClassName\":\"openebs-hostpath\"}}},\"s3\":{\"bucket\":\"bifrost-bkp\",\"credentialsAccessKey\":\"AKIATFVUFFEE6QNP467B\",\"credentialsSecretKey\":\"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\",\"endpointUrl\":\"s3.amazonaws.com\",\"region\":\"us-east-1\"}}},\"crVersion\":\"1.14.0\",\"enableCRValidationWebhook\":false,\"finalizers\":[\"delete-pxc-pods-in-order\"],\"fullnameOverride\":\"\",\"haproxy\":{\"affinity\":{\"advanced\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/hostname\",\"operator\":\"NotIn\",\"values\":[\"kubenodelurinold\"]}]}]}}},\"antiAffinityTopologyKey\":\"kubernetes.io/hostname\"},\"annotations\":{},\"configuration\":\"global\\n  maxconn 8192\\n  external-check\\n  insecure-fork-wanted\\n  stats socket /etc/haproxy/pxc/haproxy.sock mode 600 expose-fd listeners level admin\\n\\ndefaults\\n  default-server init-addr last,libc,none\\n  log global\\n  mode tcp\\n  retries 10\\n  timeout client 28800s\\n  timeout connect 100500\\n  timeout server 28800s\\n\\nresolvers kubernetes\\n  parse-resolv-conf\\n\\nfrontend galera-in\\n  bind *:3309 accept-proxy\\n  bind *:3306\\n  mode tcp\\n  option clitcpka\\n  default_backend galera-nodes\\n\\nbackend galera-nodes\\n  balance roundrobin\\n  mode tcp\\n  option tcpka\\n  option mysql-check user haproxy_check\\n  timeout client 1m\\n  timeout server 1m\\n  timeout connect 10s\\n  default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions\\n  server pxc-0 percona-xtradb-cluste-pxc-0.svc.cluster.local:3306 check\\n  server pxc-1 percona-xtradb-cluste-pxc-1.svc.cluster.local:3306 check\\n  server pxc-2 percona-xtradb-cluste-pxc-2.svc.cluster.local:3306 check\\n  server pxc-3 percona-xtradb-cluste-pxc-3.svc.cluster.local:3306 check\\n  server pxc-4 percona-xtradb-cluste-pxc-4.svc.cluster.local:3306 check\\n\",\"enabled\":true,\"gracePeriod\":30,\"image\":\"\",\"imagePullSecrets\":[],\"labels\":{},\"livenessDelaySec\":300,\"livenessProbes\":{\"failureThreshold\":4,\"initialDelaySeconds\":60,\"periodSeconds\":30,\"successThreshold\":1,\"timeoutSeconds\":5},\"nodeSelector\":{},\"podDisruptionBudget\":{\"maxUnavailable\":1},\"readinessDelaySec\":15,\"readinessProbes\":{\"failureThreshold\":3,\"initialDelaySeconds\":15,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{},\"requests\":{\"cpu\":\"1000m\",\"memory\":\"1.5G\"}},\"sidecarPVCs\":[],\"sidecarResources\":{\"limits\":{},\"requests\":{}},\"sidecarVolumes\":[],\"sidecars\":[],\"size\":3,\"tolerations\":[]},\"ignoreAnnotations\":[],\"ignoreLabels\":[],\"logcollector\":{\"enabled\":true,\"image\":\"\",\"imagePullSecrets\":[],\"resources\":{\"limits\":{},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100M\"}}},\"nameOverride\":\"\",\"operatorImageRepository\":\"percona/percona-xtradb-cluster-operator\",\"pause\":false,\"pmm\":{\"enabled\":true,\"image\":{\"repository\":\"percona/pmm-client\",\"tag\":\"2.41.0\"},\"imagePullSecrets\":[],\"resources\":{\"limits\":{},\"requests\":{\"cpu\":\"300m\",\"memory\":\"150M\"}},\"serverHost\":\"monitoring-service\",\"serverUser\":\"admin\"},\"proxysql\":{\"affinity\":{\"advanced\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/hostname\",\"operator\":\"NotIn\",\"values\":[\"kubenodelurinold\"]}]}]}}},\"antiAffinityTopologyKey\":\"kubernetes.io/hostname\"},\"annotations\":{},\"configuration\":\"datadir=\\\"/var/lib/proxysql\\\"\\n\\nadmin_variables =\\n{\\n  admin_credentials=\\\"proxyadmin:admin_password\\\"\\n  mysql_ifaces=\\\"0.0.0.0:6032\\\"\\n  refresh_interval=2000\\n\\n  cluster_username=\\\"proxyadmin\\\"\\n  cluster_password=\\\"admin_password\\\"\\n  checksum_admin_variables=false\\n  checksum_ldap_variables=false\\n  checksum_mysql_variables=false\\n  cluster_check_interval_ms=200\\n  cluster_check_status_frequency=100\\n  cluster_mysql_query_rules_save_to_disk=true\\n  cluster_mysql_servers_save_to_disk=true\\n  cluster_mysql_users_save_to_disk=true\\n  cluster_proxysql_servers_save_to_disk=true\\n  cluster_mysql_query_rules_diffs_before_sync=1\\n  cluster_mysql_servers_diffs_before_sync=1\\n  cluster_mysql_users_diffs_before_sync=1\\n  cluster_proxysql_servers_diffs_before_sync=1\\n}\\n\\nmysql_variables=\\n{\\n  monitor_password=\\\"monitor\\\"\\n  monitor_galera_healthcheck_interval=1000\\n  threads=2\\n  max_connections=4096\\n  default_query_delay=0\\n  default_query_timeout=10000\\n  poll_timeout=2000\\n  interfaces=\\\"0.0.0.0:3306\\\"\\n  default_schema=\\\"information_schema\\\"\\n  stacksize=1048576\\n  connect_timeout_server=10000\\n  monitor_history=60000\\n  monitor_connect_interval=20000\\n  monitor_ping_interval=10000\\n  ping_timeout_server=200\\n  commands_stats=true\\n  sessions_sort=true\\n  have_ssl=true\\n  ssl_p2s_ca=\\\"/etc/proxysql/ssl-internal/ca.crt\\\"\\n  ssl_p2s_cert=\\\"/etc/proxysql/ssl-internal/tls.crt\\\"\\n  ssl_p2s_key=\\\"/etc/proxysql/ssl-internal/tls.key\\\"\\n  ssl_p2s_cipher=\\\"ECDHE-RSA-AES128-GCM-SHA256\\\"\\n}\\n\",\"enabled\":false,\"gracePeriod\":30,\"image\":\"\",\"imagePullSecrets\":[],\"labels\":{},\"livenessDelaySec\":300,\"nodeSelector\":{},\"persistence\":{\"accessMode\":\"ReadWriteOnce\",\"enabled\":true,\"size\":\"8Gi\"},\"podDisruptionBudget\":{\"maxUnavailable\":1},\"readinessDelaySec\":15,\"resources\":{\"limits\":{},\"requests\":{\"cpu\":\"600m\",\"memory\":\"1G\"}},\"sidecarPVCs\":[],\"sidecarResources\":{\"limits\":{},\"requests\":{}},\"sidecarVolumes\":[],\"sidecars\":[],\"size\":3,\"tolerations\":[]},\"pxc\":{\"affinity\":{\"advanced\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/hostname\",\"operator\":\"NotIn\",\"values\":[\"kubenodelurinold\"]}]}]}}},\"antiAffinityTopologyKey\":\"kubernetes.io/hostname\"},\"annotations\":{},\"autoRecovery\":true,\"certManager\":false,\"configuration\":\"[mysqld]\\nmax_connections = 2000\\n\",\"disableTLS\":true,\"expose\":{\"enabled\":true,\"type\":\"LoadBalancer\"},\"gracePeriod\":600,\"image\":{\"repository\":\"percona/percona-xtradb-cluster\",\"tag\":\"8.0.35-27.1\"},\"imagePullSecrets\":[],\"labels\":{},\"livenessDelaySec\":300,\"livenessProbes\":{\"failureThreshold\":3,\"initialDelaySeconds\":300,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"nodeSelector\":{},\"persistence\":{\"accessMode\":\"ReadWriteOnce\",\"enabled\":true,\"size\":\"30Gi\",\"storageClass\":\"openebs-hostpath\"},\"podDisruptionBudget\":{\"maxUnavailable\":1},\"readinessDelaySec\":15,\"readinessProbes\":{\"failureThreshold\":5,\"initialDelaySeconds\":15,\"periodSeconds\":30,\"successThreshold\":1,\"timeoutSeconds\":15},\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"6G\"},\"requests\":{\"cpu\":\"1500m\",\"memory\":\"4G\"}},\"sidecarPVCs\":[],\"sidecarResources\":{\"limits\":{},\"requests\":{}},\"sidecarVolumes\":[],\"sidecars\":[],\"size\":5,\"tolerations\":[]},\"secrets\":{\"tls\":{}},\"tls\":{},\"updateStrategy\":\"SmartUpdate\",\"upgradeOptions\":{\"apply\":\"disabled\",\"schedule\":\"0 4 * * *\",\"versionServiceEndpoint\":\"https://check.percona.com\"}}",
                "version": "1.14.2"
              }
            ],
            "name": "percona-xtradb-cluster",
            "namespace": "datalake",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://percona.github.io/percona-helm-charts/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "finalizers:\n- delete-pxc-pods-in-order\n\nnameOverride: \"\"\nfullnameOverride: \"\"\n\n# PerconaXtraDBCluster annotations\nannotations: {}\n\noperatorImageRepository: percona/percona-xtradb-cluster-operator\n\ncrVersion: 1.14.0\nignoreAnnotations: []\n# - iam.amazonaws.com/role\nignoreLabels: []\n# - rack\npause: false\n# initContainer:\n#   image: \"\"\n#   resources:\n#     requests:\n#       memory: 100M\n#       cpu: 100m\n#     limits:\n#       memory: 200M\n#       cpu: 200m\nallowUnsafeConfigurations: false\nupdateStrategy: SmartUpdate\nupgradeOptions:\n  versionServiceEndpoint: https://check.percona.com\n  apply: disabled\n  schedule: \"0 4 * * *\"\nenableCRValidationWebhook: false\ntls: {}\n# SANs:\n#   - pxc-1.example.com\n#   - pxc-2.example.com\n#   - pxc-3.example.com\n# issuerConf:\n#   name: special-selfsigned-issuer\n#   kind: ClusterIssuer\n#   group: cert-manager.io\n\npxc:\n  size: 5\n  image:\n    repository: percona/percona-xtradb-cluster\n    tag: 8.0.35-27.1\n  # imagePullPolicy: Always\n  autoRecovery: true\n  expose:\n    enabled: true\n    type: LoadBalancer\n  # replicationChannels:\n  # - name: pxc1_to_pxc2\n  #   isSource: true\n  # - name: pxc2_to_pxc1\n  #   isSource: false\n  #   configuration:\n  #     sourceRetryCount: 3\n  #     sourceConnectRetry: 60\n  #     ssl: false\n  #     sslSkipVerify: true\n  #     ca: '/etc/mysql/ssl/ca.crt'\n  #   sourcesList:\n  #   - host: 10.95.251.101\n  #     port: 3306\n  #     weight: 100\n  # schedulerName: mycustom-scheduler\n  imagePullSecrets: []\n  # - name: private-registry-credentials\n  annotations: {}\n  #  iam.amazonaws.com/role: role-arn\n  labels: {}\n  #  rack: rack-22\n  # priorityClassName: high-priority\n  readinessDelaySec: 15\n  livenessDelaySec: 300\n  ## Uncomment to pass in a mysql config file\n  configuration: |\n    [mysqld]\n    max_connections = 2000\n  resources:\n    requests:\n      memory: 4G\n      cpu: 1500m\n    limits:\n      memory: 6G\n      cpu: 2000m\n      # memory: 1G\n      # cpu: 600m\n  # runtimeClassName: image-rc\n  sidecars: []\n  sidecarVolumes: []\n  sidecarPVCs: []\n  sidecarResources:\n    requests: {}\n    limits: {}\n  nodeSelector: {}\n  #  disktype: ssd\n  # topologySpreadConstraints:\n  # - labelSelector:\n  #     matchLabels:\n  #       app.kubernetes.io/name: percona-xtradb-cluster-operator\n  #   maxSkew: 1\n  #   topologyKey: kubernetes.io/hostname\n  #   whenUnsatisfiable: DoNotSchedule\n  affinity:\n    antiAffinityTopologyKey: \"kubernetes.io/hostname\"\n    advanced:\n      nodeAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          nodeSelectorTerms:\n          - matchExpressions:\n            - key: kubernetes.io/hostname\n              operator: NotIn\n              values:\n              - kubenodelurinold\n  tolerations: []\n  # - key: \"node.alpha.kubernetes.io/unreachable\"\n  #   operator: \"Exists\"\n  #   effect: \"NoExecute\"\n  #   tolerationSeconds: 6000\n  gracePeriod: 600\n  # lifecycle:\n  #   preStop:\n  #     exec:\n  #       command: [ \"/bin/true\" ]\n  #   postStart:\n  #     exec:\n  #       command: [ \"/bin/true\" ]\n  podDisruptionBudget:\n    # only one of maxUnavailable or minAvaliable can be set\n    maxUnavailable: 1\n    # minAvailable: 0\n  persistence:\n    enabled: true\n    ## percona data Persistent Volume Storage Class\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n    ##   GKE, AWS \u0026 OpenStack)\n    ##\n    storageClass: \"openebs-hostpath\"\n    accessMode: ReadWriteOnce\n    size: 30Gi\n\n  # If you set this to true the cluster will be created without TLS\n  disableTLS: true\n\n  # disable Helm creating TLS certificates if you want to let the operator\n  # request certificates from cert-manager\n  certManager: false\n\n  # If this is set will not create secrets from values and will instead try to use\n  # a pre-existing secret of the same name.\n  # clusterSecretName: cluster1-secrets\n  readinessProbes:\n    initialDelaySeconds: 15\n    timeoutSeconds: 15\n    periodSeconds: 30\n    successThreshold: 1\n    failureThreshold: 5\n  livenessProbes:\n    initialDelaySeconds: 300\n    timeoutSeconds: 5\n    periodSeconds: 10\n    successThreshold: 1\n    failureThreshold: 3\n    # A custom Kubernetes Security Context for a Container to be used instead of the default one\n    # containerSecurityContext:\n    #   privileged: false\n    # A custom Kubernetes Security Context for a Pod to be used instead of the default one\n    # podSecurityContext:\n    #   fsGroup: 1001\n    #   supplementalGroups:\n    #   - 1001\n    # serviceAccountName: percona-xtradb-cluster-operator-workload\n\nhaproxy:\n  enabled: true\n  size: 3\n  image: \"\"\n  # imagePullPolicy: Always\n  imagePullSecrets: []\n  # - name: private-registry-credentials\n  configuration: |\n    global\n      maxconn 8192\n      external-check\n      insecure-fork-wanted\n      stats socket /etc/haproxy/pxc/haproxy.sock mode 600 expose-fd listeners level admin\n\n    defaults\n      default-server init-addr last,libc,none\n      log global\n      mode tcp\n      retries 10\n      timeout client 28800s\n      timeout connect 100500\n      timeout server 28800s\n\n    resolvers kubernetes\n      parse-resolv-conf\n\n    frontend galera-in\n      bind *:3309 accept-proxy\n      bind *:3306\n      mode tcp\n      option clitcpka\n      default_backend galera-nodes\n\n    backend galera-nodes\n      balance roundrobin\n      mode tcp\n      option tcpka\n      option mysql-check user haproxy_check\n      timeout client 1m\n      timeout server 1m\n      timeout connect 10s\n      default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions\n      server pxc-0 percona-xtradb-cluste-pxc-0.svc.cluster.local:3306 check\n      server pxc-1 percona-xtradb-cluste-pxc-1.svc.cluster.local:3306 check\n      server pxc-2 percona-xtradb-cluste-pxc-2.svc.cluster.local:3306 check\n      server pxc-3 percona-xtradb-cluste-pxc-3.svc.cluster.local:3306 check\n      server pxc-4 percona-xtradb-cluste-pxc-4.svc.cluster.local:3306 check\n\n  # frontend galera-admin-in\n  #   bind *:33062\n  #   mode tcp\n  #   option clitcpka\n  #   default_backend galera-admin-nodes\n  # frontend galera-replica-in\n  #   bind *:3307\n  #   mode tcp\n  #   option clitcpka\n  #   default_backend galera-replica-nodes\n  # frontend galera-mysqlx-in\n  #   bind *:33060\n  #   mode tcp\n  #   option clitcpka\n  #   default_backend galera-mysqlx-nodes\n  # frontend stats\n  #   bind *:8404\n  #   mode http\n  #   option http-use-htx\n  #   http-request use-service prometheus-exporter if { path /metrics }\n  annotations: {}\n  #  iam.amazonaws.com/role: role-arn\n  labels: {}\n  #  rack: rack-22\n  # runtimeClassName: image-rc\n  # priorityClassName: high-priority\n  # schedulerName: mycustom-scheduler\n  readinessDelaySec: 15\n  livenessDelaySec: 300\n  # envVarsSecret: my-env-var-secrets\n  resources:\n    requests:\n      memory: 1.5G\n      cpu: 1000m\n    limits: {}\n    # memory: 1G\n    # cpu: 600m\n  sidecars: []\n  sidecarVolumes: []\n  sidecarPVCs: []\n  sidecarResources:\n    requests: {}\n    limits: {}\n  nodeSelector: {}\n  #  disktype: ssd\n  # serviceAccountName: percona-xtradb-cluster-operator-workload\n  # topologySpreadConstraints:\n  # - labelSelector:\n  #     matchLabels:\n  #       app.kubernetes.io/name: percona-xtradb-cluster-operator\n  #   maxSkew: 1\n  #   topologyKey: kubernetes.io/hostname\n  #   whenUnsatisfiable: DoNotSchedule\n  affinity:\n    antiAffinityTopologyKey: \"kubernetes.io/hostname\"\n    advanced:\n      nodeAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          nodeSelectorTerms:\n          - matchExpressions:\n            - key: kubernetes.io/hostname\n              operator: NotIn\n              values:\n              - kubenodelurinold\n              # advanced:\n              #   nodeAffinity:\n              #     requiredDuringSchedulingIgnoredDuringExecution:\n              #       nodeSelectorTerms:\n              #       - matchExpressions:\n              #         - key: kubernetes.io/e2e-az-name\n              #           operator: In\n              #           values:\n              #           - e2e-az1\n              #           - e2e-az2\n  tolerations: []\n  # - key: \"node.alpha.kubernetes.io/unreachable\"\n  #   operator: \"Exists\"\n  #   effect: \"NoExecute\"\n  #   tolerationSeconds: 6000\n  gracePeriod: 30\n  # lifecycle:\n  #   preStop:\n  #     exec:\n  #       command: [ \"/bin/true\" ]\n  #   postStart:\n  #     exec:\n  #       command: [ \"/bin/true\" ]\n  # only one of `maxUnavailable` or `minAvailable` can be set.\n  podDisruptionBudget:\n    maxUnavailable: 1\n    # minAvailable: 0\n  readinessProbes:\n    initialDelaySeconds: 15\n    timeoutSeconds: 1\n    periodSeconds: 5\n    successThreshold: 1\n    failureThreshold: 3\n  livenessProbes:\n    initialDelaySeconds: 60\n    timeoutSeconds: 5\n    periodSeconds: 30\n    successThreshold: 1\n    failureThreshold: 4\n    # exposePrimary:\n    #   enabled: false\n    #   type: ClusterIP\n    #   annotations:\n    #     service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp\n    #   externalTrafficPolicy: Cluster\n    #   internalTrafficPolicy: Cluster\n    #   labels:\n    #     rack: rack-22\n    #   loadBalancerSourceRanges:\n    #     - 10.0.0.0/8\n    #   loadBalancerIP: 127.0.0.1\n    # exposeReplicas:\n    #   enabled: false\n    #   type: ClusterIP\n    #   annotations:\n    #     service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp\n    #   externalTrafficPolicy: Cluster\n    #   internalTrafficPolicy: Cluster\n    #   labels:\n    #     rack: rack-22\n    #   loadBalancerSourceRanges:\n    #     - 10.0.0.0/8\n    #   loadBalancerIP: 127.0.0.1\n    # A custom Kubernetes Security Context for a Container to be used instead of the default one\n    # containerSecurityContext:\n    #   privileged: false\n    # A custom Kubernetes Security Context for a Pod to be used instead of the default one\n    # podSecurityContext:\n    #   fsGroup: 1001\n    #   supplementalGroups:\n    #   - 1001\n\nproxysql:\n  enabled: false\n  size: 3\n  image: \"\"\n  # imagePullPolicy: Always\n  imagePullSecrets: []\n  configuration: |\n    datadir=\"/var/lib/proxysql\"\n\n    admin_variables =\n    {\n      admin_credentials=\"proxyadmin:admin_password\"\n      mysql_ifaces=\"0.0.0.0:6032\"\n      refresh_interval=2000\n\n      cluster_username=\"proxyadmin\"\n      cluster_password=\"admin_password\"\n      checksum_admin_variables=false\n      checksum_ldap_variables=false\n      checksum_mysql_variables=false\n      cluster_check_interval_ms=200\n      cluster_check_status_frequency=100\n      cluster_mysql_query_rules_save_to_disk=true\n      cluster_mysql_servers_save_to_disk=true\n      cluster_mysql_users_save_to_disk=true\n      cluster_proxysql_servers_save_to_disk=true\n      cluster_mysql_query_rules_diffs_before_sync=1\n      cluster_mysql_servers_diffs_before_sync=1\n      cluster_mysql_users_diffs_before_sync=1\n      cluster_proxysql_servers_diffs_before_sync=1\n    }\n\n    mysql_variables=\n    {\n      monitor_password=\"monitor\"\n      monitor_galera_healthcheck_interval=1000\n      threads=2\n      max_connections=4096\n      default_query_delay=0\n      default_query_timeout=10000\n      poll_timeout=2000\n      interfaces=\"0.0.0.0:3306\"\n      default_schema=\"information_schema\"\n      stacksize=1048576\n      connect_timeout_server=10000\n      monitor_history=60000\n      monitor_connect_interval=20000\n      monitor_ping_interval=10000\n      ping_timeout_server=200\n      commands_stats=true\n      sessions_sort=true\n      have_ssl=true\n      ssl_p2s_ca=\"/etc/proxysql/ssl-internal/ca.crt\"\n      ssl_p2s_cert=\"/etc/proxysql/ssl-internal/tls.crt\"\n      ssl_p2s_key=\"/etc/proxysql/ssl-internal/tls.key\"\n      ssl_p2s_cipher=\"ECDHE-RSA-AES128-GCM-SHA256\"\n    }\n  # - name: private-registry-credentials\n  annotations: {}\n  #  iam.amazonaws.com/role: role-arn\n  labels: {}\n  #  rack: rack-22\n  # runtimeClassName: image-rc\n  # expose:\n  #   enabled: false\n  #   type: ClusterIP\n  #   annotations:\n  #     service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp\n  #   externalTrafficPolicy: Cluster\n  #   internalTrafficPolicy: Cluster\n  #   labels:\n  #     rack: rack-22\n  #   loadBalancerSourceRanges:\n  #     - 10.0.0.0/8\n  #   loadBalancerIP: 127.0.0.1\n  # priorityClassName: high-priority\n  # schedulerName: mycustom-scheduler\n  readinessDelaySec: 15\n  livenessDelaySec: 300\n  # envVarsSecret: my-env-var-secrets\n  resources:\n    requests:\n      memory: 1G\n      cpu: 600m\n    limits: {}\n    # memory: 1G\n    # cpu: 600m\n  sidecars: []\n  sidecarVolumes: []\n  sidecarPVCs: []\n  sidecarResources:\n    requests: {}\n    limits: {}\n  nodeSelector: {}\n  #  disktype: ssd\n  # topologySpreadConstraints:\n  # - labelSelector:\n  #     matchLabels:\n  #       app.kubernetes.io/name: percona-xtradb-cluster-operator\n  #   maxSkew: 1\n  #   topologyKey: kubernetes.io/hostname\n  #   whenUnsatisfiable: DoNotSchedule\n  # serviceAccountName: percona-xtradb-cluster-operator-workload\n  affinity:\n    antiAffinityTopologyKey: \"kubernetes.io/hostname\"\n    advanced:\n      nodeAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          nodeSelectorTerms:\n          - matchExpressions:\n            - key: kubernetes.io/hostname\n              operator: NotIn\n              values:\n              - kubenodelurinold\n              # advanced:\n              #   nodeAffinity:\n              #     requiredDuringSchedulingIgnoredDuringExecution:\n              #       nodeSelectorTerms:\n              #       - matchExpressions:\n              #         - key: kubernetes.io/e2e-az-name\n              #           operator: In\n              #           values:\n              #           - e2e-az1\n              #           - e2e-az2\n  tolerations: []\n  # - key: \"node.alpha.kubernetes.io/unreachable\"\n  #   operator: \"Exists\"\n  #   effect: \"NoExecute\"\n  #   tolerationSeconds: 6000\n  gracePeriod: 30\n  # lifecycle:\n  #   preStop:\n  #     exec:\n  #       command: [ \"/bin/true\" ]\n  #   postStart:\n  #     exec:\n  #       command: [ \"/bin/true\" ]\n  # only one of `maxUnavailable` or `minAvailable` can be set.\n  podDisruptionBudget:\n    maxUnavailable: 1\n    # minAvailable: 0\n  persistence:\n    enabled: true\n    ## Percona data Persistent Volume Storage Class\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n    ##   GKE, AWS \u0026 OpenStack)\n    ##\n    # storageClass: \"-\"\n    accessMode: ReadWriteOnce\n    size: 8Gi\n    # A custom Kubernetes Security Context for a Container to be used instead of the default one\n    # containerSecurityContext:\n    #   privileged: false\n    # A custom Kubernetes Security Context for a Pod to be used instead of the default one\n    # podSecurityContext:\n    #   fsGroup: 1001\n    #   supplementalGroups:\n    #   - 1001\n\nlogcollector:\n  enabled: true\n  image: \"\"\n  # imagePullPolicy: Always\n  imagePullSecrets: []\n  # configuration: |\n  #   [OUTPUT]\n  #         Name  es\n  #         Match *\n  #         Host  192.168.2.3\n  #         Port  9200\n  #         Index my_index\n  #         Type  my_type\n  resources:\n    requests:\n      memory: 100M\n      cpu: 200m\n    limits: {}\n    # A custom Kubernetes Security Context for a Container to be used instead of the default one\n    # containerSecurityContext:\n    #   privileged: false\n\npmm:\n  enabled: true\n  image:\n    repository: percona/pmm-client\n    tag: 2.41.0\n  # imagePullPolicy: Always\n  imagePullSecrets: []\n  serverHost: monitoring-service\n  serverUser: admin\n  resources:\n    requests:\n      memory: 150M\n      cpu: 300m\n    limits: {}\n\nbackup:\n  enabled: true\n  # allowParallel: true\n  image:\n    repository: percona/percona-xtradb-cluster-operator\n    tag: 1.14.0-pxc8.0-backup-pxb8.0.35\n  imagePullSecrets: []\n  pitr:\n    enabled: false\n    storageName: s3-us-west-binlogs\n    timeBetweenUploads: 60\n    timeoutSeconds: 60\n    resources:\n      requests: {}\n      limits: {}\n  storages:\n    fs-pvc:\n      type: filesystem\n      volume:\n        persistentVolumeClaim:\n          storageClassName: openebs-hostpath\n          accessModes: [\"ReadWriteOnce\"]\n          resources:\n            requests:\n              storage: 30Gi\n    s3:\n      bucket: bifrost-bkp\n      # Use credentialsSecret OR credentialsAccessKey/credentialsSecretKey\n      #credentialsSecret: my-cluster-name-backup-s3\n      credentialsAccessKey: AKIATFVUFFEE6QNP467B\n      credentialsSecretKey: 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\n      region: us-east-1\n      endpointUrl: s3.amazonaws.com\n\n  schedule:\n  - name: \"daily-backup\"\n    schedule: \"0 0 * * *\"\n    keep: 5\n    storageName: s3\n  - name: \"sat-night-backup\"\n    schedule: \"0 0 * * 6\"\n    keep: 4\n    storageName: fs-pvc\n\nsecrets:\n  tls: {}\n"
            ],
            "verify": false,
            "version": "1.14.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.percona-operator"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "postgres_hdfs_operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "postgresql",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "postgres-hdfs",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "15.3.0",
                "chart": "postgresql",
                "name": "postgres-hdfs",
                "namespace": "datalake",
                "revision": 2,
                "values": "{\"architecture\":\"standalone\",\"audit\":{\"clientMinMessages\":\"error\",\"logConnections\":false,\"logDisconnections\":false,\"logHostname\":false,\"logLinePrefix\":\"\",\"logTimezone\":\"\",\"pgAuditLog\":\"\",\"pgAuditLogCatalog\":\"off\"},\"auth\":{\"database\":\"hdfs\",\"enablePostgresUser\":true,\"existingSecret\":\"\",\"password\":\"Maniac321.\",\"postgresPassword\":\"\",\"replicationPassword\":\"\",\"replicationUsername\":\"repl_user\",\"secretKeys\":{\"adminPasswordKey\":\"postgres-password\",\"replicationPasswordKey\":\"replication-password\",\"userPasswordKey\":\"password\"},\"usePasswordFiles\":false,\"username\":\"hdfs\"},\"clusterDomain\":\"cluster.local\",\"commonAnnotations\":{},\"commonLabels\":{},\"containerPorts\":{\"postgresql\":5432},\"diagnosticMode\":{\"args\":[\"infinity\"],\"command\":[\"sleep\"],\"enabled\":false},\"extraDeploy\":[],\"fullnameOverride\":\"\",\"global\":{\"imagePullSecrets\":[],\"imageRegistry\":\"\",\"postgresql\":{\"auth\":{\"database\":\"hdfs\",\"existingSecret\":\"\",\"password\":\"Maniac321.\",\"postgresPassword\":\"Maniac321.\",\"secretKeys\":{\"adminPasswordKey\":\"\",\"replicationPasswordKey\":\"\",\"userPasswordKey\":\"\"},\"username\":\"hdfs\"},\"service\":{\"ports\":{\"postgresql\":\"\"}}},\"storageClass\":\"\"},\"image\":{\"debug\":false,\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/postgresql\",\"tag\":\"15.3.0-debian-11-r7\"},\"kubeVersion\":\"\",\"ldap\":{\"basedn\":\"\",\"binddn\":\"\",\"bindpw\":\"\",\"enabled\":false,\"port\":\"\",\"prefix\":\"\",\"scheme\":\"\",\"searchAttribute\":\"\",\"searchFilter\":\"\",\"server\":\"\",\"suffix\":\"\",\"tls\":{\"enabled\":false},\"uri\":\"\"},\"metrics\":{\"containerPorts\":{\"metrics\":9187},\"containerSecurityContext\":{\"enabled\":true,\"runAsNonRoot\":true,\"runAsUser\":1001},\"customLivenessProbe\":{},\"customMetrics\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"enabled\":false,\"extraEnvVars\":[],\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/postgres-exporter\",\"tag\":\"0.12.0-debian-11-r91\"},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"prometheusRule\":{\"enabled\":false,\"labels\":{},\"namespace\":\"\",\"rules\":[]},\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"resources\":{\"limits\":{},\"requests\":{}},\"service\":{\"annotations\":{\"prometheus.io/port\":\"{{ .Values.metrics.service.ports.metrics }}\",\"prometheus.io/scrape\":\"true\"},\"clusterIP\":\"\",\"ports\":{\"metrics\":9187},\"sessionAffinity\":\"None\"},\"serviceMonitor\":{\"enabled\":false,\"honorLabels\":false,\"interval\":\"\",\"jobLabel\":\"\",\"labels\":{},\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scrapeTimeout\":\"\",\"selector\":{}},\"startupProbe\":{\"enabled\":false,\"failureThreshold\":15,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1}},\"nameOverride\":\"\",\"networkPolicy\":{\"egressRules\":{\"customRules\":[],\"denyConnectionsToExternal\":false},\"enabled\":false,\"ingressRules\":{\"primaryAccessOnlyFrom\":{\"customRules\":[],\"enabled\":false,\"namespaceSelector\":{},\"podSelector\":{}},\"readReplicasAccessOnlyFrom\":{\"customRules\":[],\"enabled\":false,\"namespaceSelector\":{},\"podSelector\":{}}},\"metrics\":{\"enabled\":false,\"namespaceSelector\":{},\"podSelector\":{}}},\"postgresqlDataDir\":\"/bitnami/postgresql/data\",\"postgresqlSharedPreloadLibraries\":\"pgaudit\",\"primary\":{\"affinity\":{},\"annotations\":{},\"args\":[],\"command\":[],\"configuration\":\"\",\"containerSecurityContext\":{\"enabled\":true,\"runAsUser\":1001},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"existingConfigmap\":\"\",\"existingExtendedConfigmap\":\"\",\"extendedConfiguration\":\"\",\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraPodSpec\":{},\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostAliases\":[],\"hostIPC\":false,\"hostNetwork\":false,\"initContainers\":[],\"initdb\":{\"args\":\"\",\"password\":\"\",\"postgresqlWalDir\":\"\",\"scripts\":{},\"scriptsConfigMap\":\"\",\"scriptsSecret\":\"\",\"user\":\"\"},\"labels\":{},\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"primary\",\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"dataSource\":{},\"enabled\":true,\"existingClaim\":\"\",\"labels\":{},\"mountPath\":\"/bitnami/postgresql\",\"selector\":{},\"size\":\"40Gi\",\"storageClass\":\"\",\"subPath\":\"\"},\"pgHbaConfiguration\":\"\",\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"256Mi\"}},\"schedulerName\":\"\",\"service\":{\"annotations\":{},\"clusterIP\":\"\",\"externalTrafficPolicy\":\"Cluster\",\"extraPorts\":[],\"headless\":{\"annotations\":{}},\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":[],\"nodePorts\":{\"postgresql\":\"\"},\"ports\":{\"postgresql\":5432},\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"ClusterIP\"},\"sidecars\":[],\"standby\":{\"enabled\":false,\"primaryHost\":\"\",\"primaryPort\":\"\"},\"startupProbe\":{\"enabled\":false,\"failureThreshold\":15,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"terminationGracePeriodSeconds\":\"\",\"tolerations\":[],\"topologySpreadConstraints\":[],\"updateStrategy\":{\"rollingUpdate\":{},\"type\":\"RollingUpdate\"}},\"psp\":{\"create\":false},\"rbac\":{\"create\":false,\"rules\":[]},\"readReplicas\":{\"affinity\":{},\"annotations\":{},\"args\":[],\"command\":[],\"containerSecurityContext\":{\"enabled\":true,\"runAsUser\":1001},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"extendedConfiguration\":\"\",\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraPodSpec\":{},\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostAliases\":[],\"hostIPC\":false,\"hostNetwork\":false,\"initContainers\":[],\"labels\":{},\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"read\",\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"dataSource\":{},\"enabled\":true,\"existingClaim\":\"\",\"labels\":{},\"mountPath\":\"/bitnami/postgresql\",\"selector\":{},\"size\":\"8Gi\",\"storageClass\":\"\",\"subPath\":\"\"},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"replicaCount\":1,\"resources\":{\"limits\":{},\"requests\":{\"cpu\":\"250m\",\"memory\":\"256Mi\"}},\"schedulerName\":\"\",\"service\":{\"annotations\":{},\"clusterIP\":\"\",\"externalTrafficPolicy\":\"Cluster\",\"extraPorts\":[],\"headless\":{\"annotations\":{}},\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":[],\"nodePorts\":{\"postgresql\":\"\"},\"ports\":{\"postgresql\":5432},\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"ClusterIP\"},\"sidecars\":[],\"startupProbe\":{\"enabled\":false,\"failureThreshold\":15,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"terminationGracePeriodSeconds\":\"\",\"tolerations\":[],\"topologySpreadConstraints\":[],\"updateStrategy\":{\"rollingUpdate\":{},\"type\":\"RollingUpdate\"}},\"replication\":{\"applicationName\":\"bifrost\",\"numSynchronousReplicas\":2,\"synchronousCommit\":\"on\"},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":false,\"name\":\"\"},\"serviceBindings\":{\"enabled\":false},\"shmVolume\":{\"enabled\":true,\"sizeLimit\":\"\"},\"tls\":{\"autoGenerated\":false,\"certCAFilename\":\"\",\"certFilename\":\"\",\"certKeyFilename\":\"\",\"certificatesSecret\":\"\",\"crlFilename\":\"\",\"enabled\":false,\"preferServerCiphers\":true},\"volumePermissions\":{\"containerSecurityContext\":{\"runAsUser\":0},\"enabled\":false,\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/bitnami-shell\",\"tag\":\"11-debian-11-r120\"},\"resources\":{\"limits\":{},\"requests\":{}}}}",
                "version": "12.6.5"
              }
            ],
            "name": "postgres-hdfs",
            "namespace": "datalake",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "## @section Global parameters\n## Please, note that this will override the parameters, including dependencies, configured to use the global value\n##\nglobal:\n  ## @param global.imageRegistry Global Docker image registry\n  ##\n  imageRegistry: \"\"\n  ## @param global.imagePullSecrets Global Docker registry secret names as an array\n  ## e.g.\n  ## imagePullSecrets:\n  ##   - myRegistryKeySecretName\n  ##\n  imagePullSecrets: []\n  ## @param global.storageClass Global StorageClass for Persistent Volume(s)\n  ##\n  storageClass: \"\"\n  postgresql:\n    ## @param global.postgresql.auth.postgresPassword Password for the \"postgres\" admin user (overrides `auth.postgresPassword`)\n    ## @param global.postgresql.auth.username Name for a custom user to create (overrides `auth.username`)\n    ## @param global.postgresql.auth.password Password for the custom user to create (overrides `auth.password`)\n    ## @param global.postgresql.auth.database Name for a custom database to create (overrides `auth.database`)\n    ## @param global.postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials (overrides `auth.existingSecret`).\n    ## @param global.postgresql.auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.adminPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.\n    ## @param global.postgresql.auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.userPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.\n    ## @param global.postgresql.auth.secretKeys.replicationPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.replicationPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.\n    ##\n    auth:\n      postgresPassword: \"Maniac321.\"\n      username: \"hdfs\"\n      password: \"Maniac321.\"\n      database: \"hdfs\"\n      existingSecret: \"\"\n      secretKeys:\n        adminPasswordKey: \"\"\n        userPasswordKey: \"\"\n        replicationPasswordKey: \"\"\n    ## @param global.postgresql.service.ports.postgresql PostgreSQL service port (overrides `service.ports.postgresql`)\n    ##\n    service:\n      ports:\n        postgresql: \"\"\n\n## @section Common parameters\n##\n\n## @param kubeVersion Override Kubernetes version\n##\nkubeVersion: \"\"\n## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)\n##\nnameOverride: \"\"\n## @param fullnameOverride String to fully override common.names.fullname template\n##\nfullnameOverride: \"\"\n## @param clusterDomain Kubernetes Cluster Domain\n##\nclusterDomain: cluster.local\n## @param extraDeploy Array of extra objects to deploy with the release (evaluated as a template)\n##\nextraDeploy: []\n## @param commonLabels Add labels to all the deployed resources\n##\ncommonLabels: {}\n## @param commonAnnotations Add annotations to all the deployed resources\n##\ncommonAnnotations: {}\n## Enable diagnostic mode in the statefulset\n##\ndiagnosticMode:\n  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)\n  ##\n  enabled: false\n  ## @param diagnosticMode.command Command to override all containers in the statefulset\n  ##\n  command:\n    - sleep\n  ## @param diagnosticMode.args Args to override all containers in the statefulset\n  ##\n  args:\n    - infinity\n\n## @section PostgreSQL common parameters\n##\n\n## Bitnami PostgreSQL image version\n## ref: https://hub.docker.com/r/bitnami/postgresql/tags/\n## @param image.registry PostgreSQL image registry\n## @param image.repository PostgreSQL image repository\n## @param image.tag PostgreSQL image tag (immutable tags are recommended)\n## @param image.digest PostgreSQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n## @param image.pullPolicy PostgreSQL image pull policy\n## @param image.pullSecrets Specify image pull secrets\n## @param image.debug Specify if debug values should be set\n##\nimage:\n  registry: docker.io\n  repository: bitnami/postgresql\n  tag: 15.3.0-debian-11-r7\n  digest: \"\"\n  ## Specify a imagePullPolicy\n  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'\n  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images\n  ##\n  pullPolicy: IfNotPresent\n  ## Optionally specify an array of imagePullSecrets.\n  ## Secrets must be manually created in the namespace.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ## Example:\n  ## pullSecrets:\n  ##   - myRegistryKeySecretName\n  ##\n  pullSecrets: []\n  ## Set to true if you would like to see extra information on logs\n  ##\n  debug: false\n## Authentication parameters\n## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#setting-the-root-password-on-first-run\n## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-on-first-run\n## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-user-on-first-run\n##\nauth:\n  ## @param auth.enablePostgresUser Assign a password to the \"postgres\" admin user. Otherwise, remote access will be blocked for this user\n  ##\n  enablePostgresUser: true\n  ## @param auth.postgresPassword Password for the \"postgres\" admin user. Ignored if `auth.existingSecret` is provided\n  ##\n  postgresPassword: \"\"\n  ## @param auth.username Name for a custom user to create\n  ##\n  username: \"hdfs\"\n  ## @param auth.password Password for the custom user to create. Ignored if `auth.existingSecret` is provided\n  ##\n  password: \"Maniac321.\"\n  ## @param auth.database Name for a custom database to create\n  ##\n  database: \"hdfs\"\n  ## @param auth.replicationUsername Name of the replication user\n  ##\n  replicationUsername: repl_user\n  ## @param auth.replicationPassword Password for the replication user. Ignored if `auth.existingSecret` is provided\n  ##\n  replicationPassword: \"\"\n  ## @param auth.existingSecret Name of existing secret to use for PostgreSQL credentials. `auth.postgresPassword`, `auth.password`, and `auth.replicationPassword` will be ignored and picked up from this secret. The secret might also contains the key `ldap-password` if LDAP is enabled. `ldap.bind_password` will be ignored and picked from this secret in this case.\n  ##\n  existingSecret: \"\"\n  ## @param auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.\n  ## @param auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.\n  ## @param auth.secretKeys.replicationPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.\n  ##\n  secretKeys:\n    adminPasswordKey: postgres-password\n    userPasswordKey: password\n    replicationPasswordKey: replication-password\n  ## @param auth.usePasswordFiles Mount credentials as a files instead of using an environment variable\n  ##\n  usePasswordFiles: false\n## @param architecture PostgreSQL architecture (`standalone` or `replication`)\n##\narchitecture: standalone\n## Replication configuration\n## Ignored if `architecture` is `standalone`\n##\nreplication:\n  ## @param replication.synchronousCommit Set synchronous commit mode. Allowed values: `on`, `remote_apply`, `remote_write`, `local` and `off`\n  ## @param replication.numSynchronousReplicas Number of replicas that will have synchronous replication. Note: Cannot be greater than `readReplicas.replicaCount`.\n  ## ref: https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT\n  ##\n  synchronousCommit: \"on\"\n  numSynchronousReplicas: 2\n  ## @param replication.applicationName Cluster application name. Useful for advanced replication settings\n  ##\n  applicationName: bifrost\n## @param containerPorts.postgresql PostgreSQL container port\n##\ncontainerPorts:\n  postgresql: 5432\n## Audit settings\n## https://github.com/bitnami/containers/tree/main/bitnami/postgresql#auditing\n## @param audit.logHostname Log client hostnames\n## @param audit.logConnections Add client log-in operations to the log file\n## @param audit.logDisconnections Add client log-outs operations to the log file\n## @param audit.pgAuditLog Add operations to log using the pgAudit extension\n## @param audit.pgAuditLogCatalog Log catalog using pgAudit\n## @param audit.clientMinMessages Message log level to share with the user\n## @param audit.logLinePrefix Template for log line prefix (default if not set)\n## @param audit.logTimezone Timezone for the log timestamps\n##\naudit:\n  logHostname: false\n  logConnections: false\n  logDisconnections: false\n  pgAuditLog: \"\"\n  pgAuditLogCatalog: \"off\"\n  clientMinMessages: error\n  logLinePrefix: \"\"\n  logTimezone: \"\"\n## LDAP configuration\n## @param ldap.enabled Enable LDAP support\n## DEPRECATED ldap.url It will removed in a future, please use 'ldap.uri' instead\n## @param ldap.server IP address or name of the LDAP server.\n## @param ldap.port Port number on the LDAP server to connect to\n## @param ldap.prefix String to prepend to the user name when forming the DN to bind\n## @param ldap.suffix String to append to the user name when forming the DN to bind\n## DEPRECATED ldap.baseDN It will removed in a future, please use 'ldap.basedn' instead\n## DEPRECATED ldap.bindDN It will removed in a future, please use 'ldap.binddn' instead\n## DEPRECATED ldap.bind_password It will removed in a future, please use 'ldap.bindpw' instead\n## @param ldap.basedn Root DN to begin the search for the user in\n## @param ldap.binddn DN of user to bind to LDAP\n## @param ldap.bindpw Password for the user to bind to LDAP\n## DEPRECATED ldap.search_attr It will removed in a future, please use 'ldap.searchAttribute' instead\n## DEPRECATED ldap.search_filter It will removed in a future, please use 'ldap.searchFilter' instead\n## @param ldap.searchAttribute Attribute to match against the user name in the search\n## @param ldap.searchFilter The search filter to use when doing search+bind authentication\n## @param ldap.scheme Set to `ldaps` to use LDAPS\n## DEPRECATED ldap.tls as string is deprecated，please use 'ldap.tls.enabled' instead\n## @param ldap.tls.enabled Se to true to enable TLS encryption\n##\nldap:\n  enabled: false\n  server: \"\"\n  port: \"\"\n  prefix: \"\"\n  suffix: \"\"\n  basedn: \"\"\n  binddn: \"\"\n  bindpw: \"\"\n  searchAttribute: \"\"\n  searchFilter: \"\"\n  scheme: \"\"\n  tls:\n    enabled: false\n  ## @param ldap.uri LDAP URL beginning in the form `ldap[s]://host[:port]/basedn`. If provided, all the other LDAP parameters will be ignored.\n  ## Ref: https://www.postgresql.org/docs/current/auth-ldap.html\n  ##\n  uri: \"\"\n## @param postgresqlDataDir PostgreSQL data dir folder\n##\npostgresqlDataDir: /bitnami/postgresql/data\n## @param postgresqlSharedPreloadLibraries Shared preload libraries (comma-separated list)\n##\npostgresqlSharedPreloadLibraries: \"pgaudit\"\n## Start PostgreSQL pod(s) without limitations on shm memory.\n## By default docker and containerd (and possibly other container runtimes) limit `/dev/shm` to `64M`\n## ref: https://github.com/docker-library/postgres/issues/416\n## ref: https://github.com/containerd/containerd/issues/3654\n##\nshmVolume:\n  ## @param shmVolume.enabled Enable emptyDir volume for /dev/shm for PostgreSQL pod(s)\n  ##\n  enabled: true\n  ## @param shmVolume.sizeLimit Set this to enable a size limit on the shm tmpfs\n  ## Note: the size of the tmpfs counts against container's memory limit\n  ## e.g:\n  ## sizeLimit: 1Gi\n  ##\n  sizeLimit: \"\"\n## TLS configuration\n##\ntls:\n  ## @param tls.enabled Enable TLS traffic support\n  ##\n  enabled: false\n  ## @param tls.autoGenerated Generate automatically self-signed TLS certificates\n  ##\n  autoGenerated: false\n  ## @param tls.preferServerCiphers Whether to use the server's TLS cipher preferences rather than the client's\n  ##\n  preferServerCiphers: true\n  ## @param tls.certificatesSecret Name of an existing secret that contains the certificates\n  ##\n  certificatesSecret: \"\"\n  ## @param tls.certFilename Certificate filename\n  ##\n  certFilename: \"\"\n  ## @param tls.certKeyFilename Certificate key filename\n  ##\n  certKeyFilename: \"\"\n  ## @param tls.certCAFilename CA Certificate filename\n  ## If provided, PostgreSQL will authenticate TLS/SSL clients by requesting them a certificate\n  ## ref: https://www.postgresql.org/docs/9.6/auth-methods.html\n  ##\n  certCAFilename: \"\"\n  ## @param tls.crlFilename File containing a Certificate Revocation List\n  ##\n  crlFilename: \"\"\n\n## @section PostgreSQL Primary parameters\n##\nprimary:\n  ## @param primary.name Name of the primary database (eg primary, master, leader, ...)\n  ##\n  name: primary\n  ## @param primary.configuration PostgreSQL Primary main configuration to be injected as ConfigMap\n  ## ref: https://www.postgresql.org/docs/current/static/runtime-config.html\n  ##\n  configuration: \"\"\n  ## @param primary.pgHbaConfiguration PostgreSQL Primary client authentication configuration\n  ## ref: https://www.postgresql.org/docs/current/static/auth-pg-hba-conf.html\n  ## e.g:#\n  ## pgHbaConfiguration: |-\n  ##   local all all trust\n  ##   host all all localhost trust\n  ##   host mydatabase mysuser 192.168.0.0/24 md5\n  ##\n  pgHbaConfiguration: \"\"\n  ## @param primary.existingConfigmap Name of an existing ConfigMap with PostgreSQL Primary configuration\n  ## NOTE: `primary.configuration` and `primary.pgHbaConfiguration` will be ignored\n  ##\n  existingConfigmap: \"\"\n  ## @param primary.extendedConfiguration Extended PostgreSQL Primary configuration (appended to main or default configuration)\n  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#allow-settings-to-be-loaded-from-files-other-than-the-default-postgresqlconf\n  ##\n  extendedConfiguration: \"\"\n  ## @param primary.existingExtendedConfigmap Name of an existing ConfigMap with PostgreSQL Primary extended configuration\n  ## NOTE: `primary.extendedConfiguration` will be ignored\n  ##\n  existingExtendedConfigmap: \"\"\n  ## Initdb configuration\n  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#specifying-initdb-arguments\n  ##\n  initdb:\n    ## @param primary.initdb.args PostgreSQL initdb extra arguments\n    ##\n    args: \"\"\n    ## @param primary.initdb.postgresqlWalDir Specify a custom location for the PostgreSQL transaction log\n    ##\n    postgresqlWalDir: \"\"\n    ## @param primary.initdb.scripts Dictionary of initdb scripts\n    ## Specify dictionary of scripts to be run at first boot\n    ## e.g:\n    ## scripts:\n    ##   my_init_script.sh: |\n    ##      #!/bin/sh\n    ##      echo \"Do something.\"\n    ##\n    scripts: {}\n    ## @param primary.initdb.scriptsConfigMap ConfigMap with scripts to be run at first boot\n    ## NOTE: This will override `primary.initdb.scripts`\n    ##\n    scriptsConfigMap: \"\"\n    ## @param primary.initdb.scriptsSecret Secret with scripts to be run at first boot (in case it contains sensitive information)\n    ## NOTE: This can work along `primary.initdb.scripts` or `primary.initdb.scriptsConfigMap`\n    ##\n    scriptsSecret: \"\"\n    ## @param primary.initdb.user Specify the PostgreSQL username to execute the initdb scripts\n    ##\n    user: \"\"\n    ## @param primary.initdb.password Specify the PostgreSQL password to execute the initdb scripts\n    ##\n    password: \"\"\n  ## Configure current cluster's primary server to be the standby server in other cluster.\n  ## This will allow cross cluster replication and provide cross cluster high availability.\n  ## You will need to configure pgHbaConfiguration if you want to enable this feature with local cluster replication enabled.\n  ## @param primary.standby.enabled Whether to enable current cluster's primary as standby server of another cluster or not\n  ## @param primary.standby.primaryHost The Host of replication primary in the other cluster\n  ## @param primary.standby.primaryPort The Port of replication primary in the other cluster\n  ##\n  standby:\n    enabled: false\n    primaryHost: \"\"\n    primaryPort: \"\"\n  ## @param primary.extraEnvVars Array with extra environment variables to add to PostgreSQL Primary nodes\n  ## e.g:\n  ## extraEnvVars:\n  ##   - name: FOO\n  ##     value: \"bar\"\n  ##\n  extraEnvVars: []\n  ## @param primary.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for PostgreSQL Primary nodes\n  ##\n  extraEnvVarsCM: \"\"\n  ## @param primary.extraEnvVarsSecret Name of existing Secret containing extra env vars for PostgreSQL Primary nodes\n  ##\n  extraEnvVarsSecret: \"\"\n  ## @param primary.command Override default container command (useful when using custom images)\n  ##\n  command: []\n  ## @param primary.args Override default container args (useful when using custom images)\n  ##\n  args: []\n  ## Configure extra options for PostgreSQL Primary containers' liveness, readiness and startup probes\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\n  ## @param primary.livenessProbe.enabled Enable livenessProbe on PostgreSQL Primary containers\n  ## @param primary.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param primary.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param primary.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param primary.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param primary.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 30\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 6\n    successThreshold: 1\n  ## @param primary.readinessProbe.enabled Enable readinessProbe on PostgreSQL Primary containers\n  ## @param primary.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param primary.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param primary.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param primary.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param primary.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 6\n    successThreshold: 1\n  ## @param primary.startupProbe.enabled Enable startupProbe on PostgreSQL Primary containers\n  ## @param primary.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n  ## @param primary.startupProbe.periodSeconds Period seconds for startupProbe\n  ## @param primary.startupProbe.timeoutSeconds Timeout seconds for startupProbe\n  ## @param primary.startupProbe.failureThreshold Failure threshold for startupProbe\n  ## @param primary.startupProbe.successThreshold Success threshold for startupProbe\n  ##\n  startupProbe:\n    enabled: false\n    initialDelaySeconds: 30\n    periodSeconds: 10\n    timeoutSeconds: 1\n    failureThreshold: 15\n    successThreshold: 1\n  ## @param primary.customLivenessProbe Custom livenessProbe that overrides the default one\n  ##\n  customLivenessProbe: {}\n  ## @param primary.customReadinessProbe Custom readinessProbe that overrides the default one\n  ##\n  customReadinessProbe: {}\n  ## @param primary.customStartupProbe Custom startupProbe that overrides the default one\n  ##\n  customStartupProbe: {}\n  ## @param primary.lifecycleHooks for the PostgreSQL Primary container to automate configuration before or after startup\n  ##\n  lifecycleHooks: {}\n  ## PostgreSQL Primary resource requests and limits\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## @param primary.resources.limits The resources limits for the PostgreSQL Primary containers\n  ## @param primary.resources.requests.memory The requested memory for the PostgreSQL Primary containers\n  ## @param primary.resources.requests.cpu The requested cpu for the PostgreSQL Primary containers\n  ##\n  resources:\n    limits:\n      memory: 1024Mi\n      cpu: 1000m\n    requests:\n      memory: 256Mi\n      cpu: 250m\n  ## Pod Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n  ## @param primary.podSecurityContext.enabled Enable security context\n  ## @param primary.podSecurityContext.fsGroup Group ID for the pod\n  ##\n  podSecurityContext:\n    enabled: true\n    fsGroup: 1001\n  ## Container Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n  ## @param primary.containerSecurityContext.enabled Enable container security context\n  ## @param primary.containerSecurityContext.runAsUser User ID for the container\n  ##\n  containerSecurityContext:\n    enabled: true\n    runAsUser: 1001\n  ## @param primary.hostAliases PostgreSQL primary pods host aliases\n  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  ##\n  hostAliases: []\n  ## @param primary.hostNetwork Specify if host network should be enabled for PostgreSQL pod (postgresql primary)\n  ##\n  hostNetwork: false\n  ## @param primary.hostIPC Specify if host IPC should be enabled for PostgreSQL pod (postgresql primary)\n  ##\n  hostIPC: false\n  ## @param primary.labels Map of labels to add to the statefulset (postgresql primary)\n  ##\n  labels: {}\n  ## @param primary.annotations Annotations for PostgreSQL primary pods\n  ##\n  annotations: {}\n  ## @param primary.podLabels Map of labels to add to the pods (postgresql primary)\n  ##\n  podLabels: {}\n  ## @param primary.podAnnotations Map of annotations to add to the pods (postgresql primary)\n  ##\n  podAnnotations: {}\n  ## @param primary.podAffinityPreset PostgreSQL primary pod affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAffinityPreset: \"\"\n  ## @param primary.podAntiAffinityPreset PostgreSQL primary pod anti-affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAntiAffinityPreset: soft\n  ## PostgreSQL Primary node affinity preset\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n  ##\n  nodeAffinityPreset:\n    ## @param primary.nodeAffinityPreset.type PostgreSQL primary node affinity preset type. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`\n    ##\n    type: \"\"\n    ## @param primary.nodeAffinityPreset.key PostgreSQL primary node label key to match Ignored if `primary.affinity` is set.\n    ## E.g.\n    ## key: \"kubernetes.io/e2e-az-name\"\n    ##\n    key: \"\"\n    ## @param primary.nodeAffinityPreset.values PostgreSQL primary node label values to match. Ignored if `primary.affinity` is set.\n    ## E.g.\n    ## values:\n    ##   - e2e-az1\n    ##   - e2e-az2\n    ##\n    values: []\n  ## @param primary.affinity Affinity for PostgreSQL primary pods assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n  ## Note: primary.podAffinityPreset, primary.podAntiAffinityPreset, and primary.nodeAffinityPreset will be ignored when it's set\n  ##\n  affinity: {}\n  ## @param primary.nodeSelector Node labels for PostgreSQL primary pods assignment\n  ## ref: https://kubernetes.io/docs/user-guide/node-selection/\n  ##\n  nodeSelector: {}\n  ## @param primary.tolerations Tolerations for PostgreSQL primary pods assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n  ## @param primary.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template\n  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods\n  ##\n  topologySpreadConstraints: []\n  ## @param primary.priorityClassName Priority Class to use for each pod (postgresql primary)\n  ##\n  priorityClassName: \"\"\n  ## @param primary.schedulerName Use an alternate scheduler, e.g. \"stork\".\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  schedulerName: \"\"\n  ## @param primary.terminationGracePeriodSeconds Seconds PostgreSQL primary pod needs to terminate gracefully\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods\n  ##\n  terminationGracePeriodSeconds: \"\"\n  ## @param primary.updateStrategy.type PostgreSQL Primary statefulset strategy type\n  ## @param primary.updateStrategy.rollingUpdate PostgreSQL Primary statefulset rolling update configuration parameters\n  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n  ##\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate: {}\n  ## @param primary.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the PostgreSQL Primary container(s)\n  ##\n  extraVolumeMounts: []\n  ## @param primary.extraVolumes Optionally specify extra list of additional volumes for the PostgreSQL Primary pod(s)\n  ##\n  extraVolumes: []\n  ## @param primary.sidecars Add additional sidecar containers to the PostgreSQL Primary pod(s)\n  ## For example:\n  ## sidecars:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  sidecars: []\n  ## @param primary.initContainers Add additional init containers to the PostgreSQL Primary pod(s)\n  ## Example\n  ##\n  ## initContainers:\n  ##   - name: do-something\n  ##     image: busybox\n  ##     command: ['do', 'something']\n  ##\n  initContainers: []\n  ## @param primary.extraPodSpec Optionally specify extra PodSpec for the PostgreSQL Primary pod(s)\n  ##\n  extraPodSpec: {}\n  ## PostgreSQL Primary service configuration\n  ##\n  service:\n    ## @param primary.service.type Kubernetes Service type\n    ##\n    type: ClusterIP\n    ## @param primary.service.ports.postgresql PostgreSQL service port\n    ##\n    ports:\n      postgresql: 5432\n    ## Node ports to expose\n    ## NOTE: choose port between \u003c30000-32767\u003e\n    ## @param primary.service.nodePorts.postgresql Node port for PostgreSQL\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n    ##\n    nodePorts:\n      postgresql: \"\"\n    ## @param primary.service.clusterIP Static clusterIP or None for headless services\n    ## e.g:\n    ## clusterIP: None\n    ##\n    clusterIP: \"\"\n    ## @param primary.service.annotations Annotations for PostgreSQL primary service\n    ##\n    annotations: {}\n    ## @param primary.service.loadBalancerIP Load balancer IP if service type is `LoadBalancer`\n    ## Set the LoadBalancer service type to internal only\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n    ##\n    loadBalancerIP: \"\"\n    ## @param primary.service.externalTrafficPolicy Enable client source IP preservation\n    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n    ##\n    externalTrafficPolicy: Cluster\n    ## @param primary.service.loadBalancerSourceRanges Addresses that are allowed when service is LoadBalancer\n    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n    ##\n    ## loadBalancerSourceRanges:\n    ## - 10.10.10.0/24\n    ##\n    loadBalancerSourceRanges: []\n    ## @param primary.service.extraPorts Extra ports to expose in the PostgreSQL primary service\n    ##\n    extraPorts: []\n    ## @param primary.service.sessionAffinity Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"\n    ## If \"ClientIP\", consecutive client requests will be directed to the same Pod\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n    ##\n    sessionAffinity: None\n    ## @param primary.service.sessionAffinityConfig Additional settings for the sessionAffinity\n    ## sessionAffinityConfig:\n    ##   clientIP:\n    ##     timeoutSeconds: 300\n    ##\n    sessionAffinityConfig: {}\n    ## Headless service properties\n    ##\n    headless:\n      ## @param primary.service.headless.annotations Additional custom annotations for headless PostgreSQL primary service\n      ##\n      annotations: {}\n  ## PostgreSQL Primary persistence configuration\n  ##\n  persistence:\n    ## @param primary.persistence.enabled Enable PostgreSQL Primary data persistence using PVC\n    ##\n    enabled: true\n    ## @param primary.persistence.existingClaim Name of an existing PVC to use\n    ##\n    existingClaim: \"\"\n    ## @param primary.persistence.mountPath The path the volume will be mounted at\n    ## Note: useful when using custom PostgreSQL images\n    ##\n    mountPath: /bitnami/postgresql\n    ## @param primary.persistence.subPath The subdirectory of the volume to mount to\n    ## Useful in dev environments and one PV for multiple services\n    ##\n    subPath: \"\"\n    ## @param primary.persistence.storageClass PVC Storage Class for PostgreSQL Primary data volume\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n    ##   GKE, AWS \u0026 OpenStack)\n    ##\n    storageClass: \"\"\n    ## @param primary.persistence.accessModes PVC Access Mode for PostgreSQL volume\n    ##\n    accessModes:\n      - ReadWriteOnce\n    ## @param primary.persistence.size PVC Storage Request for PostgreSQL volume\n    ##\n    size: 40Gi\n    ## @param primary.persistence.annotations Annotations for the PVC\n    ##\n    annotations: {}\n    ## @param primary.persistence.labels Labels for the PVC\n    ##\n    labels: {}\n    ## @param primary.persistence.selector Selector to match an existing Persistent Volume (this value is evaluated as a template)\n    ## selector:\n    ##   matchLabels:\n    ##     app: my-app\n    ##\n    selector: {}\n    ## @param primary.persistence.dataSource Custom PVC data source\n    ##\n    dataSource: {}\n\n## @section PostgreSQL read only replica parameters (only used when `architecture` is set to `replication`)\n##\nreadReplicas:\n  ## @param readReplicas.name Name of the read replicas database (eg secondary, slave, ...)\n  ##\n  name: read\n  ## @param readReplicas.replicaCount Number of PostgreSQL read only replicas\n  ##\n  replicaCount: 1\n  ## @param readReplicas.extendedConfiguration Extended PostgreSQL read only replicas configuration (appended to main or default configuration)\n  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#allow-settings-to-be-loaded-from-files-other-than-the-default-postgresqlconf\n  ##\n  extendedConfiguration: \"\"\n  ## @param readReplicas.extraEnvVars Array with extra environment variables to add to PostgreSQL read only nodes\n  ## e.g:\n  ## extraEnvVars:\n  ##   - name: FOO\n  ##     value: \"bar\"\n  ##\n  extraEnvVars: []\n  ## @param readReplicas.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for PostgreSQL read only nodes\n  ##\n  extraEnvVarsCM: \"\"\n  ## @param readReplicas.extraEnvVarsSecret Name of existing Secret containing extra env vars for PostgreSQL read only nodes\n  ##\n  extraEnvVarsSecret: \"\"\n  ## @param readReplicas.command Override default container command (useful when using custom images)\n  ##\n  command: []\n  ## @param readReplicas.args Override default container args (useful when using custom images)\n  ##\n  args: []\n  ## Configure extra options for PostgreSQL read only containers' liveness, readiness and startup probes\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\n  ## @param readReplicas.livenessProbe.enabled Enable livenessProbe on PostgreSQL read only containers\n  ## @param readReplicas.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param readReplicas.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param readReplicas.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param readReplicas.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param readReplicas.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 30\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 6\n    successThreshold: 1\n  ## @param readReplicas.readinessProbe.enabled Enable readinessProbe on PostgreSQL read only containers\n  ## @param readReplicas.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param readReplicas.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param readReplicas.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param readReplicas.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param readReplicas.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 6\n    successThreshold: 1\n  ## @param readReplicas.startupProbe.enabled Enable startupProbe on PostgreSQL read only containers\n  ## @param readReplicas.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n  ## @param readReplicas.startupProbe.periodSeconds Period seconds for startupProbe\n  ## @param readReplicas.startupProbe.timeoutSeconds Timeout seconds for startupProbe\n  ## @param readReplicas.startupProbe.failureThreshold Failure threshold for startupProbe\n  ## @param readReplicas.startupProbe.successThreshold Success threshold for startupProbe\n  ##\n  startupProbe:\n    enabled: false\n    initialDelaySeconds: 30\n    periodSeconds: 10\n    timeoutSeconds: 1\n    failureThreshold: 15\n    successThreshold: 1\n  ## @param readReplicas.customLivenessProbe Custom livenessProbe that overrides the default one\n  ##\n  customLivenessProbe: {}\n  ## @param readReplicas.customReadinessProbe Custom readinessProbe that overrides the default one\n  ##\n  customReadinessProbe: {}\n  ## @param readReplicas.customStartupProbe Custom startupProbe that overrides the default one\n  ##\n  customStartupProbe: {}\n  ## @param readReplicas.lifecycleHooks for the PostgreSQL read only container to automate configuration before or after startup\n  ##\n  lifecycleHooks: {}\n  ## PostgreSQL read only resource requests and limits\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## @param readReplicas.resources.limits The resources limits for the PostgreSQL read only containers\n  ## @param readReplicas.resources.requests.memory The requested memory for the PostgreSQL read only containers\n  ## @param readReplicas.resources.requests.cpu The requested cpu for the PostgreSQL read only containers\n  ##\n  resources:\n    limits: {}\n    requests:\n      memory: 256Mi\n      cpu: 250m\n  ## Pod Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n  ## @param readReplicas.podSecurityContext.enabled Enable security context\n  ## @param readReplicas.podSecurityContext.fsGroup Group ID for the pod\n  ##\n  podSecurityContext:\n    enabled: true\n    fsGroup: 1001\n  ## Container Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n  ## @param readReplicas.containerSecurityContext.enabled Enable container security context\n  ## @param readReplicas.containerSecurityContext.runAsUser User ID for the container\n  ##\n  containerSecurityContext:\n    enabled: true\n    runAsUser: 1001\n  ## @param readReplicas.hostAliases PostgreSQL read only pods host aliases\n  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  ##\n  hostAliases: []\n  ## @param readReplicas.hostNetwork Specify if host network should be enabled for PostgreSQL pod (PostgreSQL read only)\n  ##\n  hostNetwork: false\n  ## @param readReplicas.hostIPC Specify if host IPC should be enabled for PostgreSQL pod (postgresql primary)\n  ##\n  hostIPC: false\n  ## @param readReplicas.labels Map of labels to add to the statefulset (PostgreSQL read only)\n  ##\n  labels: {}\n  ## @param readReplicas.annotations Annotations for PostgreSQL read only pods\n  ##\n  annotations: {}\n  ## @param readReplicas.podLabels Map of labels to add to the pods (PostgreSQL read only)\n  ##\n  podLabels: {}\n  ## @param readReplicas.podAnnotations Map of annotations to add to the pods (PostgreSQL read only)\n  ##\n  podAnnotations: {}\n  ## @param readReplicas.podAffinityPreset PostgreSQL read only pod affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAffinityPreset: \"\"\n  ## @param readReplicas.podAntiAffinityPreset PostgreSQL read only pod anti-affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n  ##\n  podAntiAffinityPreset: soft\n  ## PostgreSQL read only node affinity preset\n  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity\n  ##\n  nodeAffinityPreset:\n    ## @param readReplicas.nodeAffinityPreset.type PostgreSQL read only node affinity preset type. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`\n    ##\n    type: \"\"\n    ## @param readReplicas.nodeAffinityPreset.key PostgreSQL read only node label key to match Ignored if `primary.affinity` is set.\n    ## E.g.\n    ## key: \"kubernetes.io/e2e-az-name\"\n    ##\n    key: \"\"\n    ## @param readReplicas.nodeAffinityPreset.values PostgreSQL read only node label values to match. Ignored if `primary.affinity` is set.\n    ## E.g.\n    ## values:\n    ##   - e2e-az1\n    ##   - e2e-az2\n    ##\n    values: []\n  ## @param readReplicas.affinity Affinity for PostgreSQL read only pods assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n  ## Note: primary.podAffinityPreset, primary.podAntiAffinityPreset, and primary.nodeAffinityPreset will be ignored when it's set\n  ##\n  affinity: {}\n  ## @param readReplicas.nodeSelector Node labels for PostgreSQL read only pods assignment\n  ## ref: https://kubernetes.io/docs/user-guide/node-selection/\n  ##\n  nodeSelector: {}\n  ## @param readReplicas.tolerations Tolerations for PostgreSQL read only pods assignment\n  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n  ## @param readReplicas.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template\n  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods\n  ##\n  topologySpreadConstraints: []\n  ## @param readReplicas.priorityClassName Priority Class to use for each pod (PostgreSQL read only)\n  ##\n  priorityClassName: \"\"\n  ## @param readReplicas.schedulerName Use an alternate scheduler, e.g. \"stork\".\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\n  ##\n  schedulerName: \"\"\n  ## @param readReplicas.terminationGracePeriodSeconds Seconds PostgreSQL read only pod needs to terminate gracefully\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods\n  ##\n  terminationGracePeriodSeconds: \"\"\n  ## @param readReplicas.updateStrategy.type PostgreSQL read only statefulset strategy type\n  ## @param readReplicas.updateStrategy.rollingUpdate PostgreSQL read only statefulset rolling update configuration parameters\n  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n  ##\n  updateStrategy:\n    type: RollingUpdate\n    rollingUpdate: {}\n  ## @param readReplicas.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the PostgreSQL read only container(s)\n  ##\n  extraVolumeMounts: []\n  ## @param readReplicas.extraVolumes Optionally specify extra list of additional volumes for the PostgreSQL read only pod(s)\n  ##\n  extraVolumes: []\n  ## @param readReplicas.sidecars Add additional sidecar containers to the PostgreSQL read only pod(s)\n  ## For example:\n  ## sidecars:\n  ##   - name: your-image-name\n  ##     image: your-image\n  ##     imagePullPolicy: Always\n  ##     ports:\n  ##       - name: portname\n  ##         containerPort: 1234\n  ##\n  sidecars: []\n  ## @param readReplicas.initContainers Add additional init containers to the PostgreSQL read only pod(s)\n  ## Example\n  ##\n  ## initContainers:\n  ##   - name: do-something\n  ##     image: busybox\n  ##     command: ['do', 'something']\n  ##\n  initContainers: []\n  ## @param readReplicas.extraPodSpec Optionally specify extra PodSpec for the PostgreSQL read only pod(s)\n  ##\n  extraPodSpec: {}\n  ## PostgreSQL read only service configuration\n  ##\n  service:\n    ## @param readReplicas.service.type Kubernetes Service type\n    ##\n    type: ClusterIP\n    ## @param readReplicas.service.ports.postgresql PostgreSQL service port\n    ##\n    ports:\n      postgresql: 5432\n    ## Node ports to expose\n    ## NOTE: choose port between \u003c30000-32767\u003e\n    ## @param readReplicas.service.nodePorts.postgresql Node port for PostgreSQL\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n    ##\n    nodePorts:\n      postgresql: \"\"\n    ## @param readReplicas.service.clusterIP Static clusterIP or None for headless services\n    ## e.g:\n    ## clusterIP: None\n    ##\n    clusterIP: \"\"\n    ## @param readReplicas.service.annotations Annotations for PostgreSQL read only service\n    ##\n    annotations: {}\n    ## @param readReplicas.service.loadBalancerIP Load balancer IP if service type is `LoadBalancer`\n    ## Set the LoadBalancer service type to internal only\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer\n    ##\n    loadBalancerIP: \"\"\n    ## @param readReplicas.service.externalTrafficPolicy Enable client source IP preservation\n    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip\n    ##\n    externalTrafficPolicy: Cluster\n    ## @param readReplicas.service.loadBalancerSourceRanges Addresses that are allowed when service is LoadBalancer\n    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service\n    ##\n    ## loadBalancerSourceRanges:\n    ## - 10.10.10.0/24\n    ##\n    loadBalancerSourceRanges: []\n    ## @param readReplicas.service.extraPorts Extra ports to expose in the PostgreSQL read only service\n    ##\n    extraPorts: []\n    ## @param readReplicas.service.sessionAffinity Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"\n    ## If \"ClientIP\", consecutive client requests will be directed to the same Pod\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n    ##\n    sessionAffinity: None\n    ## @param readReplicas.service.sessionAffinityConfig Additional settings for the sessionAffinity\n    ## sessionAffinityConfig:\n    ##   clientIP:\n    ##     timeoutSeconds: 300\n    ##\n    sessionAffinityConfig: {}\n    ## Headless service properties\n    ##\n    headless:\n      ## @param readReplicas.service.headless.annotations Additional custom annotations for headless PostgreSQL read only service\n      ##\n      annotations: {}\n  ## PostgreSQL read only persistence configuration\n  ##\n  persistence:\n    ## @param readReplicas.persistence.enabled Enable PostgreSQL read only data persistence using PVC\n    ##\n    enabled: true\n    ## @param readReplicas.persistence.existingClaim Name of an existing PVC to use\n    ##\n    existingClaim: \"\"\n    ## @param readReplicas.persistence.mountPath The path the volume will be mounted at\n    ## Note: useful when using custom PostgreSQL images\n    ##\n    mountPath: /bitnami/postgresql\n    ## @param readReplicas.persistence.subPath The subdirectory of the volume to mount to\n    ## Useful in dev environments and one PV for multiple services\n    ##\n    subPath: \"\"\n    ## @param readReplicas.persistence.storageClass PVC Storage Class for PostgreSQL read only data volume\n    ## If defined, storageClassName: \u003cstorageClass\u003e\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n    ## If undefined (the default) or set to null, no storageClassName spec is\n    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n    ##   GKE, AWS \u0026 OpenStack)\n    ##\n    storageClass: \"\"\n    ## @param readReplicas.persistence.accessModes PVC Access Mode for PostgreSQL volume\n    ##\n    accessModes:\n      - ReadWriteOnce\n    ## @param readReplicas.persistence.size PVC Storage Request for PostgreSQL volume\n    ##\n    size: 8Gi\n    ## @param readReplicas.persistence.annotations Annotations for the PVC\n    ##\n    annotations: {}\n    ## @param readReplicas.persistence.labels Labels for the PVC\n    ##\n    labels: {}\n    ## @param readReplicas.persistence.selector Selector to match an existing Persistent Volume (this value is evaluated as a template)\n    ## selector:\n    ##   matchLabels:\n    ##     app: my-app\n    ##\n    selector: {}\n    ## @param readReplicas.persistence.dataSource Custom PVC data source\n    ##\n    dataSource: {}\n\n## @section NetworkPolicy parameters\n##\n\n## Add networkpolicies\n##\nnetworkPolicy:\n  ## @param networkPolicy.enabled Enable network policies\n  ##\n  enabled: false\n  ## @param networkPolicy.metrics.enabled Enable network policies for metrics (prometheus)\n  ## @param networkPolicy.metrics.namespaceSelector [object] Monitoring namespace selector labels. These labels will be used to identify the prometheus' namespace.\n  ## @param networkPolicy.metrics.podSelector [object] Monitoring pod selector labels. These labels will be used to identify the Prometheus pods.\n  ##\n  metrics:\n    enabled: false\n    ## e.g:\n    ## namespaceSelector:\n    ##   label: monitoring\n    ##\n    namespaceSelector: {}\n    ## e.g:\n    ## podSelector:\n    ##   label: monitoring\n    ##\n    podSelector: {}\n  ## Ingress Rules\n  ##\n  ingressRules:\n    ## @param networkPolicy.ingressRules.primaryAccessOnlyFrom.enabled Enable ingress rule that makes PostgreSQL primary node only accessible from a particular origin.\n    ## @param networkPolicy.ingressRules.primaryAccessOnlyFrom.namespaceSelector [object] Namespace selector label that is allowed to access the PostgreSQL primary node. This label will be used to identified the allowed namespace(s).\n    ## @param networkPolicy.ingressRules.primaryAccessOnlyFrom.podSelector [object] Pods selector label that is allowed to access the PostgreSQL primary node. This label will be used to identified the allowed pod(s).\n    ## @param networkPolicy.ingressRules.primaryAccessOnlyFrom.customRules Custom network policy for the PostgreSQL primary node.\n    ##\n    primaryAccessOnlyFrom:\n      enabled: false\n      ## e.g:\n      ## namespaceSelector:\n      ##   label: ingress\n      ##\n      namespaceSelector: {}\n      ## e.g:\n      ## podSelector:\n      ##   label: access\n      ##\n      podSelector: {}\n      ## custom ingress rules\n      ## e.g:\n      ## customRules:\n      ##   - from:\n      ##       - namespaceSelector:\n      ##           matchLabels:\n      ##             label: example\n      ##\n      customRules: []\n    ## @param networkPolicy.ingressRules.readReplicasAccessOnlyFrom.enabled Enable ingress rule that makes PostgreSQL read-only nodes only accessible from a particular origin.\n    ## @param networkPolicy.ingressRules.readReplicasAccessOnlyFrom.namespaceSelector [object] Namespace selector label that is allowed to access the PostgreSQL read-only nodes. This label will be used to identified the allowed namespace(s).\n    ## @param networkPolicy.ingressRules.readReplicasAccessOnlyFrom.podSelector [object] Pods selector label that is allowed to access the PostgreSQL read-only nodes. This label will be used to identified the allowed pod(s).\n    ## @param networkPolicy.ingressRules.readReplicasAccessOnlyFrom.customRules Custom network policy for the PostgreSQL read-only nodes.\n    ##\n    readReplicasAccessOnlyFrom:\n      enabled: false\n      ## e.g:\n      ## namespaceSelector:\n      ##   label: ingress\n      ##\n      namespaceSelector: {}\n      ## e.g:\n      ## podSelector:\n      ##   label: access\n      ##\n      podSelector: {}\n      ## custom ingress rules\n      ## e.g:\n      ## CustomRules:\n      ##   - from:\n      ##       - namespaceSelector:\n      ##           matchLabels:\n      ##             label: example\n      ##\n      customRules: []\n  ## @param networkPolicy.egressRules.denyConnectionsToExternal Enable egress rule that denies outgoing traffic outside the cluster, except for DNS (port 53).\n  ## @param networkPolicy.egressRules.customRules Custom network policy rule\n  ##\n  egressRules:\n    # Deny connections to external. This is not compatible with an external database.\n    denyConnectionsToExternal: false\n    ## Additional custom egress rules\n    ## e.g:\n    ## customRules:\n    ##   - to:\n    ##       - namespaceSelector:\n    ##           matchLabels:\n    ##             label: example\n    ##\n    customRules: []\n\n## @section Volume Permissions parameters\n##\n\n## Init containers parameters:\n## volumePermissions: Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each node\n##\nvolumePermissions:\n  ## @param volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume\n  ##\n  enabled: false\n  ## @param volumePermissions.image.registry Init container volume-permissions image registry\n  ## @param volumePermissions.image.repository Init container volume-permissions image repository\n  ## @param volumePermissions.image.tag Init container volume-permissions image tag (immutable tags are recommended)\n  ## @param volumePermissions.image.digest Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n  ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy\n  ## @param volumePermissions.image.pullSecrets Init container volume-permissions image pull secrets\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/bitnami-shell\n    tag: 11-debian-11-r120\n    digest: \"\"\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ## Example:\n    ## pullSecrets:\n    ##   - myRegistryKeySecretName\n    ##\n    pullSecrets: []\n  ## Init container resource requests and limits\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## @param volumePermissions.resources.limits Init container volume-permissions resource limits\n  ## @param volumePermissions.resources.requests Init container volume-permissions resource requests\n  ##\n  resources:\n    limits: {}\n    requests: {}\n  ## Init container' Security Context\n  ## Note: the chown of the data folder is done to containerSecurityContext.runAsUser\n  ## and not the below volumePermissions.containerSecurityContext.runAsUser\n  ## @param volumePermissions.containerSecurityContext.runAsUser User ID for the init container\n  ##\n  containerSecurityContext:\n    runAsUser: 0\n\n## @section Other Parameters\n##\n\n## @param serviceBindings.enabled Create secret for service binding (Experimental)\n## Ref: https://servicebinding.io/service-provider/\n##\nserviceBindings:\n  enabled: false\n\n## Service account for PostgreSQL to use.\n## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n##\nserviceAccount:\n  ## @param serviceAccount.create Enable creation of ServiceAccount for PostgreSQL pod\n  ##\n  create: false\n  ## @param serviceAccount.name The name of the ServiceAccount to use.\n  ## If not set and create is true, a name is generated using the common.names.fullname template\n  ##\n  name: \"\"\n  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created\n  ## Can be set to false if pods using this serviceAccount do not need to use K8s API\n  ##\n  automountServiceAccountToken: true\n  ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount\n  ##\n  annotations: {}\n## Creates role for ServiceAccount\n## @param rbac.create Create Role and RoleBinding (required for PSP to work)\n##\nrbac:\n  create: false\n  ## @param rbac.rules Custom RBAC rules to set\n  ## e.g:\n  ## rules:\n  ##   - apiGroups:\n  ##       - \"\"\n  ##     resources:\n  ##       - pods\n  ##     verbs:\n  ##       - get\n  ##       - list\n  ##\n  rules: []\n## Pod Security Policy\n## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/\n## @param psp.create Whether to create a PodSecurityPolicy. WARNING: PodSecurityPolicy is deprecated in Kubernetes v1.21 or later, unavailable in v1.25 or later\n##\npsp:\n  create: false\n\n## @section Metrics Parameters\n##\n\nmetrics:\n  ## @param metrics.enabled Start a prometheus exporter\n  ##\n  enabled: false\n  ## @param metrics.image.registry PostgreSQL Prometheus Exporter image registry\n  ## @param metrics.image.repository PostgreSQL Prometheus Exporter image repository\n  ## @param metrics.image.tag PostgreSQL Prometheus Exporter image tag (immutable tags are recommended)\n  ## @param metrics.image.digest PostgreSQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n  ## @param metrics.image.pullPolicy PostgreSQL Prometheus Exporter image pull policy\n  ## @param metrics.image.pullSecrets Specify image pull secrets\n  ##\n  image:\n    registry: docker.io\n    repository: bitnami/postgres-exporter\n    tag: 0.12.0-debian-11-r91\n    digest: \"\"\n    pullPolicy: IfNotPresent\n    ## Optionally specify an array of imagePullSecrets.\n    ## Secrets must be manually created in the namespace.\n    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n    ## Example:\n    ## pullSecrets:\n    ##   - myRegistryKeySecretName\n    ##\n    pullSecrets: []\n  ## @param metrics.customMetrics Define additional custom metrics\n  ## ref: https://github.com/wrouesnel/postgres_exporter#adding-new-metrics-via-a-config-file\n  ## customMetrics:\n  ##   pg_database:\n  ##     query: \"SELECT d.datname AS name, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size_bytes FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')\"\n  ##     metrics:\n  ##       - name:\n  ##           usage: \"LABEL\"\n  ##           description: \"Name of the database\"\n  ##       - size_bytes:\n  ##           usage: \"GAUGE\"\n  ##           description: \"Size of the database in bytes\"\n  ##\n  customMetrics: {}\n  ## @param metrics.extraEnvVars Extra environment variables to add to PostgreSQL Prometheus exporter\n  ## see: https://github.com/wrouesnel/postgres_exporter#environment-variables\n  ## For example:\n  ##  extraEnvVars:\n  ##  - name: PG_EXPORTER_DISABLE_DEFAULT_METRICS\n  ##    value: \"true\"\n  ##\n  extraEnvVars: []\n  ## PostgreSQL Prometheus exporter containers' Security Context\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container\n  ## @param metrics.containerSecurityContext.enabled Enable PostgreSQL Prometheus exporter containers' Security Context\n  ## @param metrics.containerSecurityContext.runAsUser Set PostgreSQL Prometheus exporter containers' Security Context runAsUser\n  ## @param metrics.containerSecurityContext.runAsNonRoot Set PostgreSQL Prometheus exporter containers' Security Context runAsNonRoot\n  ##\n  containerSecurityContext:\n    enabled: true\n    runAsUser: 1001\n    runAsNonRoot: true\n  ## Configure extra options for PostgreSQL Prometheus exporter containers' liveness, readiness and startup probes\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\n  ## @param metrics.livenessProbe.enabled Enable livenessProbe on PostgreSQL Prometheus exporter containers\n  ## @param metrics.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe\n  ## @param metrics.livenessProbe.periodSeconds Period seconds for livenessProbe\n  ## @param metrics.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe\n  ## @param metrics.livenessProbe.failureThreshold Failure threshold for livenessProbe\n  ## @param metrics.livenessProbe.successThreshold Success threshold for livenessProbe\n  ##\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 6\n    successThreshold: 1\n  ## @param metrics.readinessProbe.enabled Enable readinessProbe on PostgreSQL Prometheus exporter containers\n  ## @param metrics.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe\n  ## @param metrics.readinessProbe.periodSeconds Period seconds for readinessProbe\n  ## @param metrics.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe\n  ## @param metrics.readinessProbe.failureThreshold Failure threshold for readinessProbe\n  ## @param metrics.readinessProbe.successThreshold Success threshold for readinessProbe\n  ##\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 6\n    successThreshold: 1\n  ## @param metrics.startupProbe.enabled Enable startupProbe on PostgreSQL Prometheus exporter containers\n  ## @param metrics.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe\n  ## @param metrics.startupProbe.periodSeconds Period seconds for startupProbe\n  ## @param metrics.startupProbe.timeoutSeconds Timeout seconds for startupProbe\n  ## @param metrics.startupProbe.failureThreshold Failure threshold for startupProbe\n  ## @param metrics.startupProbe.successThreshold Success threshold for startupProbe\n  ##\n  startupProbe:\n    enabled: false\n    initialDelaySeconds: 10\n    periodSeconds: 10\n    timeoutSeconds: 1\n    failureThreshold: 15\n    successThreshold: 1\n  ## @param metrics.customLivenessProbe Custom livenessProbe that overrides the default one\n  ##\n  customLivenessProbe: {}\n  ## @param metrics.customReadinessProbe Custom readinessProbe that overrides the default one\n  ##\n  customReadinessProbe: {}\n  ## @param metrics.customStartupProbe Custom startupProbe that overrides the default one\n  ##\n  customStartupProbe: {}\n  ## @param metrics.containerPorts.metrics PostgreSQL Prometheus exporter metrics container port\n  ##\n  containerPorts:\n    metrics: 9187\n  ## PostgreSQL Prometheus exporter resource requests and limits\n  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/\n  ## @param metrics.resources.limits The resources limits for the PostgreSQL Prometheus exporter container\n  ## @param metrics.resources.requests The requested resources for the PostgreSQL Prometheus exporter container\n  ##\n  resources:\n    limits: {}\n    requests: {}\n  ## Service configuration\n  ##\n  service:\n    ## @param metrics.service.ports.metrics PostgreSQL Prometheus Exporter service port\n    ##\n    ports:\n      metrics: 9187\n    ## @param metrics.service.clusterIP Static clusterIP or None for headless services\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address\n    ##\n    clusterIP: \"\"\n    ## @param metrics.service.sessionAffinity Control where client requests go, to the same pod or round-robin\n    ## Values: ClientIP or None\n    ## ref: https://kubernetes.io/docs/user-guide/services/\n    ##\n    sessionAffinity: None\n    ## @param metrics.service.annotations [object] Annotations for Prometheus to auto-discover the metrics endpoint\n    ##\n    annotations:\n      prometheus.io/scrape: \"true\"\n      prometheus.io/port: \"{{ .Values.metrics.service.ports.metrics }}\"\n  ## Prometheus Operator ServiceMonitor configuration\n  ##\n  serviceMonitor:\n    ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using Prometheus Operator\n    ##\n    enabled: false\n    ## @param metrics.serviceMonitor.namespace Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)\n    ##\n    namespace: \"\"\n    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n    ##\n    interval: \"\"\n    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended\n    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint\n    ##\n    scrapeTimeout: \"\"\n    ## @param metrics.serviceMonitor.labels Additional labels that can be used so ServiceMonitor will be discovered by Prometheus\n    ##\n    labels: {}\n    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels\n    ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration\n    ##\n    selector: {}\n    ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping\n    ##\n    relabelings: []\n    ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion\n    ##\n    metricRelabelings: []\n    ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint\n    ##\n    honorLabels: false\n    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.\n    ##\n    jobLabel: \"\"\n  ## Custom PrometheusRule to be defined\n  ## The value is evaluated as a template, so, for example, the value can depend on .Release or .Chart\n  ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions\n  ##\n  prometheusRule:\n    ## @param metrics.prometheusRule.enabled Create a PrometheusRule for Prometheus Operator\n    ##\n    enabled: false\n    ## @param metrics.prometheusRule.namespace Namespace for the PrometheusRule Resource (defaults to the Release Namespace)\n    ##\n    namespace: \"\"\n    ## @param metrics.prometheusRule.labels Additional labels that can be used so PrometheusRule will be discovered by Prometheus\n    ##\n    labels: {}\n    ## @param metrics.prometheusRule.rules PrometheusRule definitions\n    ## Make sure to constraint the rules to the current postgresql service.\n    ## rules:\n    ##   - alert: HugeReplicationLag\n    ##     expr: pg_replication_lag{service=\"{{ printf \"%s-metrics\" (include \"common.names.fullname\" .) }}\"} / 3600 \u003e 1\n    ##     for: 1m\n    ##     labels:\n    ##       severity: critical\n    ##     annotations:\n    ##       description: replication for {{ include \"common.names.fullname\" . }} PostgreSQL is lagging by {{ \"{{ $value }}\" }} hour(s).\n    ##       summary: PostgreSQL replication is lagging by {{ \"{{ $value }}\" }} hour(s).\n    ##\n    rules: []\n"
            ],
            "verify": false,
            "version": "12.6.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.datalake_ns-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "traefik_name",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "traefik",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-traefik",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.10.1",
                "chart": "traefik",
                "name": "ingress-traefik",
                "namespace": "ingress-traefik",
                "revision": 32,
                "values": "{\"additionalArguments\":[\"--providers.kubernetesingress.ingressclass=ingress-traefik\",\"--log.level=DEBUG\",\"--providers.kubernetescrd\"],\"additionalVolumeMounts\":[],\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/hostname\",\"operator\":\"In\",\"values\":[\"kube-prd-master-01\",\"kube-prd-master-02\"]}]}]}}},\"autoscaling\":{\"enabled\":false},\"certResolvers\":{},\"commonLabels\":{},\"deployment\":{\"additionalContainers\":[],\"additionalVolumes\":[],\"annotations\":{},\"dnsConfig\":{},\"enabled\":true,\"imagePullSecrets\":[],\"initContainers\":[],\"kind\":\"Deployment\",\"labels\":{},\"lifecycle\":{},\"minReadySeconds\":0,\"podAnnotations\":{},\"podLabels\":{},\"replicas\":1,\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":60},\"env\":[],\"envFrom\":[],\"experimental\":{\"kubernetesGateway\":{\"enabled\":false,\"gateway\":{\"enabled\":false}},\"plugins\":{\"enabled\":true},\"v3\":{\"enabled\":true}},\"extraObjects\":[],\"globalArguments\":[\"--global.checknewversion\",\"--global.sendanonymoususage\",\"--global.sendanonymoususage=false\",\"--global.checknewversion=false\"],\"hostNetwork\":false,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"registry\":\"docker.io\",\"repository\":\"traefik\",\"tag\":\"\"},\"ingressClass\":{\"enabled\":true,\"isDefaultClass\":false},\"ingressRoute\":{\"dashboard\":{\"annotations\":{},\"enabled\":true,\"entryPoints\":[\"web\"],\"labels\":{},\"matchRule\":\"PathPrefix(`/dashboard`) || PathPrefix(`/api`)\",\"middlewares\":[],\"tls\":{}}},\"livenessProbe\":{\"failureThreshold\":3,\"initialDelaySeconds\":2,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":2},\"logs\":{\"access\":{\"enabled\":true,\"fields\":{\"general\":{\"defaultmode\":\"keep\",\"names\":{}},\"headers\":{\"defaultmode\":\"drop\",\"names\":{}}},\"filters\":{}},\"general\":{\"level\":\"INFO\"}},\"metrics\":{\"prometheus\":{\"entryPoint\":\"metrics\"}},\"persistence\":{\"accessMode\":\"ReadWriteOnce\",\"annotations\":{},\"enabled\":true,\"name\":\"data\",\"path\":\"/data\",\"size\":\"512Mi\"},\"podDisruptionBudget\":{\"enabled\":false},\"podSecurityContext\":{\"fsGroupChangePolicy\":\"OnRootMismatch\",\"runAsGroup\":65532,\"runAsNonRoot\":true,\"runAsUser\":65532},\"podSecurityPolicy\":{\"enabled\":false},\"ports\":{\"apm\":{\"expose\":true,\"exposedPort\":8200,\"port\":8200,\"protocol\":\"TCP\"},\"clickhouse\":{\"expose\":true,\"exposedPort\":8101,\"port\":8101,\"protocol\":\"TCP\"},\"influx\":{\"expose\":true,\"exposedPort\":8079,\"port\":8079,\"protocol\":\"TCP\"},\"jupyterhub\":{\"expose\":true,\"exposedPort\":8103,\"port\":8103,\"protocol\":\"TCP\"},\"kibana\":{\"expose\":true,\"exposedPort\":5601,\"port\":5601,\"protocol\":\"TCP\"},\"metrics\":{\"expose\":false,\"exposedPort\":9100,\"port\":9100,\"protocol\":\"TCP\"},\"minio\":{\"expose\":true,\"exposedPort\":8102,\"port\":8102,\"protocol\":\"TCP\"},\"mongodb\":{\"expose\":true,\"exposedPort\":27017,\"port\":27017,\"protocol\":\"TCP\"},\"mysql\":{\"expose\":true,\"exposedPort\":3306,\"port\":3306,\"protocol\":\"TCP\"},\"mysqlaws\":{\"expose\":true,\"exposedPort\":4306,\"port\":4306,\"protocol\":\"TCP\"},\"prometheus\":{\"expose\":true,\"exposedPort\":9090,\"port\":9090,\"protocol\":\"TCP\"},\"redis\":{\"expose\":true,\"exposedPort\":6379,\"port\":6379,\"protocol\":\"TCP\"},\"tcp1\":{\"expose\":true,\"exposedPort\":8080,\"port\":8080,\"protocol\":\"TCP\"},\"tcp10\":{\"expose\":true,\"exposedPort\":8089,\"port\":8089,\"protocol\":\"TCP\"},\"tcp11\":{\"expose\":true,\"exposedPort\":8090,\"port\":8090,\"protocol\":\"TCP\"},\"tcp12\":{\"expose\":true,\"exposedPort\":8091,\"port\":8091,\"protocol\":\"TCP\"},\"tcp13\":{\"expose\":true,\"exposedPort\":8092,\"port\":8092,\"protocol\":\"TCP\"},\"tcp14\":{\"expose\":true,\"exposedPort\":8093,\"port\":8093,\"protocol\":\"TCP\"},\"tcp15\":{\"expose\":true,\"exposedPort\":8094,\"port\":8094,\"protocol\":\"TCP\"},\"tcp16\":{\"expose\":true,\"exposedPort\":8095,\"port\":8095,\"protocol\":\"TCP\"},\"tcp17\":{\"expose\":true,\"exposedPort\":8096,\"port\":8096,\"protocol\":\"TCP\"},\"tcp18\":{\"expose\":true,\"exposedPort\":8097,\"port\":8097,\"protocol\":\"TCP\"},\"tcp19\":{\"expose\":true,\"exposedPort\":8098,\"port\":8098,\"protocol\":\"TCP\"},\"tcp2\":{\"expose\":true,\"exposedPort\":8081,\"port\":8081,\"protocol\":\"TCP\"},\"tcp20\":{\"expose\":true,\"exposedPort\":8099,\"port\":8099,\"protocol\":\"TCP\"},\"tcp3\":{\"expose\":true,\"exposedPort\":8082,\"port\":8082,\"protocol\":\"TCP\"},\"tcp4\":{\"expose\":true,\"exposedPort\":8083,\"port\":8083,\"protocol\":\"TCP\"},\"tcp5\":{\"expose\":true,\"exposedPort\":8084,\"port\":8084,\"protocol\":\"TCP\"},\"tcp6\":{\"expose\":true,\"exposedPort\":8085,\"port\":8085,\"protocol\":\"TCP\"},\"tcp7\":{\"expose\":true,\"exposedPort\":8086,\"port\":8086,\"protocol\":\"TCP\"},\"tcp8\":{\"expose\":true,\"exposedPort\":8087,\"port\":8087,\"protocol\":\"TCP\"},\"tcp9\":{\"expose\":true,\"exposedPort\":8088,\"port\":8088,\"protocol\":\"TCP\"},\"telemetry14250\":{\"expose\":true,\"exposedPort\":14250,\"port\":14250,\"protocol\":\"TCP\"},\"telemetry14268\":{\"expose\":true,\"exposedPort\":14268,\"port\":14268,\"protocol\":\"TCP\"},\"telemetry4317\":{\"expose\":true,\"exposedPort\":4317,\"port\":4317,\"protocol\":\"TCP\"},\"telemetry4318\":{\"expose\":true,\"exposedPort\":4318,\"port\":4318,\"protocol\":\"TCP\"},\"telemetry6831\":{\"expose\":true,\"exposedPort\":6831,\"port\":6831,\"protocol\":\"UDP\"},\"telemetry9411\":{\"expose\":true,\"exposedPort\":9411,\"port\":9411,\"protocol\":\"TCP\"},\"tempo\":{\"expose\":true,\"exposedPort\":9600,\"port\":9600,\"protocol\":\"TCP\"},\"tempozipkin\":{\"expose\":true,\"exposedPort\":9700,\"port\":9700,\"protocol\":\"TCP\"},\"traefik\":{\"expose\":true,\"exposedPort\":9000,\"port\":9000,\"protocol\":\"TCP\"},\"udp1\":{\"expose\":true,\"exposedPort\":8001,\"port\":8001,\"protocol\":\"UDP\"},\"udp2\":{\"expose\":true,\"exposedPort\":8002,\"port\":8002,\"protocol\":\"UDP\"},\"udp3\":{\"expose\":true,\"exposedPort\":8003,\"port\":8003,\"protocol\":\"UDP\"},\"web\":{\"expose\":true,\"exposedPort\":8000,\"port\":8000,\"protocol\":\"TCP\"},\"websecure\":{\"expose\":true,\"exposedPort\":8443,\"http3\":{\"enabled\":false},\"middlewares\":[],\"port\":8443,\"protocol\":\"TCP\",\"tls\":{\"certResolver\":\"\",\"domains\":[],\"enabled\":true,\"options\":\"\"}},\"xtradb\":{\"expose\":true,\"exposedPort\":3307,\"port\":3307,\"protocol\":\"TCP\"},\"xtradbreplicas\":{\"expose\":true,\"exposedPort\":3308,\"port\":3308,\"protocol\":\"TCP\"},\"zipkin\":{\"expose\":true,\"exposedPort\":19411,\"port\":19411,\"protocol\":\"TCP\"}},\"priorityClassName\":\"\",\"providers\":{\"kubernetesCRD\":{\"allowCrossNamespace\":true,\"allowEmptyServices\":true,\"allowExternalNameServices\":true,\"enabled\":true,\"namespaces\":[]},\"kubernetesIngress\":{\"allowEmptyServices\":true,\"allowExternalNameServices\":true,\"enabled\":true,\"namespaces\":[],\"publishedService\":{\"enabled\":true}}},\"rbac\":{\"enabled\":true,\"namespaced\":false},\"readinessProbe\":{\"failureThreshold\":1,\"initialDelaySeconds\":2,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":2},\"resources\":{},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true},\"service\":{\"annotations\":{},\"annotationsTCP\":{},\"annotationsUDP\":{},\"enabled\":true,\"externalIPs\":[\"192.168.36.90\"],\"labels\":{},\"loadBalancerSourceRanges\":[],\"single\":true,\"spec\":{},\"type\":\"LoadBalancer\"},\"serviceAccount\":{\"name\":\"\"},\"serviceAccountAnnotations\":{},\"tlsOptions\":{},\"tlsStore\":{},\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\",\"operator\":\"Exists\"}],\"topologySpreadConstraints\":[],\"tracing\":{},\"updateStrategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":0},\"type\":\"RollingUpdate\"},\"volumes\":[]}",
                "version": "23.1.0"
              }
            ],
            "name": "ingress-traefik",
            "namespace": "ingress-traefik",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://traefik.github.io/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for Traefik\nimage:\n  # -- Traefik image host registry\n  registry: docker.io\n  # -- Traefik image repository\n  repository: traefik\n  # -- defaults to appVersion\n  tag: \"\"\n  # -- Traefik image pull policy\n  pullPolicy: IfNotPresent\n\n# -- Add additional label to all resources\ncommonLabels: {}\n\n#\n# Configure the deployment\n#\ndeployment:\n  # -- Enable deployment\n  enabled: true\n  # -- Deployment or DaemonSet\n  kind: Deployment\n  # -- Number of pods of the deployment (only applies when kind == Deployment)\n  replicas: 1\n  # -- Number of old history to retain to allow rollback (If not set, default Kubernetes value is set to 10)\n  # revisionHistoryLimit: 1\n  # -- Amount of time (in seconds) before Kubernetes will send the SIGKILL signal if Traefik does not shut down\n  terminationGracePeriodSeconds: 60\n  # -- The minimum number of seconds Traefik needs to be up and running before the DaemonSet/Deployment controller considers it available\n  minReadySeconds: 0\n  # -- Additional deployment annotations (e.g. for jaeger-operator sidecar injection)\n  annotations: {}\n  # -- Additional deployment labels (e.g. for filtering deployment by custom labels)\n  labels: {}\n  # -- Additional pod annotations (e.g. for mesh injection or prometheus scraping)\n  podAnnotations: {}\n  # -- Additional Pod labels (e.g. for filtering Pod by custom labels)\n  podLabels: {}\n  # -- Additional containers (e.g. for metric offloading sidecars)\n  additionalContainers: []\n  # https://docs.datadoghq.com/developers/dogstatsd/unix_socket/?tab=host\n  # - name: socat-proxy\n  #   image: alpine/socat:1.0.5\n  #   args: [\"-s\", \"-u\", \"udp-recv:8125\", \"unix-sendto:/socket/socket\"]\n  #   volumeMounts:\n  #     - name: dsdsocket\n  #       mountPath: /socket\n  # -- Additional volumes available for use with initContainers and additionalContainers\n  additionalVolumes: []\n  # - name: dsdsocket\n  #   hostPath:\n  #     path: /var/run/statsd-exporter\n  # -- Additional initContainers (e.g. for setting file permission as shown below)\n  initContainers: []\n  # The \"volume-permissions\" init container is required if you run into permission issues.\n  # Related issue: https://github.com/traefik/traefik-helm-chart/issues/396\n  # - name: volume-permissions\n  #   image: busybox:latest\n  #   command: [\"sh\", \"-c\", \"touch /data/acme.json; chmod -v 600 /data/acme.json\"]\n  #   securityContext:\n  #     runAsNonRoot: true\n  #     runAsGroup: 65532\n  #     runAsUser: 65532\n  #   volumeMounts:\n  #     - name: data\n  #       mountPath: /data\n  # -- Use process namespace sharing\n  shareProcessNamespace: false\n  # -- Custom pod DNS policy. Apply if `hostNetwork: true`\n  # dnsPolicy: ClusterFirstWithHostNet\n  dnsConfig: {}\n  # nameservers:\n  #   - 192.0.2.1 # this is an example\n  # searches:\n  #   - ns1.svc.cluster-domain.example\n  #   - my.dns.search.suffix\n  # options:\n  #   - name: ndots\n  #     value: \"2\"\n  #   - name: edns0\n  # -- Additional imagePullSecrets\n  imagePullSecrets: []\n  # - name: myRegistryKeySecretName\n  # -- Pod lifecycle actions\n  lifecycle: {}\n  # preStop:\n  #   exec:\n  #     command: [\"/bin/sh\", \"-c\", \"sleep 40\"]\n  # postStart:\n  #   httpGet:\n  #     path: /ping\n  #     port: 9000\n  #     host: localhost\n  #     scheme: HTTP\n\n# -- Pod disruption budget\npodDisruptionBudget:\n  enabled: false\n  # maxUnavailable: 1\n  # maxUnavailable: 33%\n  # minAvailable: 0\n  # minAvailable: 25%\n\n# -- Create a default IngressClass for Traefik\ningressClass:\n  enabled: true\n  isDefaultClass: false\n\n# Traefik experimental features\nexperimental:\n  v3:\n    # -- Enable traefik version 3\n    enabled: true\n  plugins:\n    # -- Enable traefik experimental plugins\n    enabled: true\n  kubernetesGateway:\n    # -- Enable traefik experimental GatewayClass CRD\n    enabled: false\n    gateway:\n      # -- Enable traefik regular kubernetes gateway\n      enabled: false\n      # certificate:\n      #   group: \"core\"\n      #   kind: \"Secret\"\n      #   name: \"mysecret\"\n      # -- By default, Gateway would be created to the Namespace you are deploying Traefik to.\n      # You may create that Gateway in another namespace, setting its name below:\n      # namespace: default\n      # Additional gateway annotations (e.g. for cert-manager.io/issuer)\n      # annotations:\n      #   cert-manager.io/issuer: letsencrypt\n\n## Create an IngressRoute for the dashboard\ningressRoute:\n  dashboard:\n    # -- Create an IngressRoute for the dashboard\n    enabled: true\n    # -- Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)\n    annotations: {}\n    # -- Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)\n    labels: {}\n    # -- The router match rule used for the dashboard ingressRoute\n    matchRule: PathPrefix(`/dashboard`) || PathPrefix(`/api`)\n    # -- Specify the allowed entrypoints to use for the dashboard ingress route, (e.g. traefik, web, websecure).\n    # By default, it's using traefik entrypoint, which is not exposed.\n    # /!\\ Do not expose your dashboard without any protection over the internet /!\\\n    entryPoints: [\"web\"]\n    # -- Additional ingressRoute middlewares (e.g. for authentication)\n    middlewares: []\n    # -- TLS options (e.g. secret containing certificate)\n    tls: {}\n\nupdateStrategy:\n  # -- Customize updateStrategy: RollingUpdate or OnDelete\n  type: RollingUpdate\n  rollingUpdate:\n    maxUnavailable: 0\n    maxSurge: 1\n\nreadinessProbe:\n  # -- The number of consecutive failures allowed before considering the probe as failed.\n  failureThreshold: 1\n  # -- The number of seconds to wait before starting the first probe.\n  initialDelaySeconds: 2\n  # -- The number of seconds to wait between consecutive probes.\n  periodSeconds: 10\n  # -- The minimum consecutive successes required to consider the probe successful.\n  successThreshold: 1\n  # -- The number of seconds to wait for a probe response before considering it as failed.\n  timeoutSeconds: 2\nlivenessProbe:\n  # -- The number of consecutive failures allowed before considering the probe as failed.\n  failureThreshold: 3\n  # -- The number of seconds to wait before starting the first probe.\n  initialDelaySeconds: 2\n  # -- The number of seconds to wait between consecutive probes.\n  periodSeconds: 10\n  # -- The minimum consecutive successes required to consider the probe successful.\n  successThreshold: 1\n  # -- The number of seconds to wait for a probe response before considering it as failed.\n  timeoutSeconds: 2\n\nproviders:\n  kubernetesCRD:\n    # -- Load Kubernetes IngressRoute provider\n    enabled: true\n    # -- Allows IngressRoute to reference resources in namespace other than theirs\n    allowCrossNamespace: true\n    # -- Allows to reference ExternalName services in IngressRoute\n    allowExternalNameServices: true\n    # -- Allows to return 503 when there is no endpoints available\n    allowEmptyServices: true\n    # ingressClass: traefik-internal\n    # labelSelector: environment=production,method=traefik\n    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.\n    namespaces: []\n    # - \"default\"\n\n  kubernetesIngress:\n    # -- Load Kubernetes IngressRoute provider\n    enabled: true\n    # -- Allows to reference ExternalName services in Ingress\n    allowExternalNameServices: true\n    # -- Allows to return 503 when there is no endpoints available\n    allowEmptyServices: true\n    # ingressClass: traefik-internal\n    # labelSelector: environment=production,method=traefik\n    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.\n    namespaces: []\n    # - \"default\"\n    # IP used for Kubernetes Ingress endpoints\n    publishedService:\n      enabled: true\n      # Published Kubernetes Service to copy status from. Format: namespace/servicename\n      # By default this Traefik service\n      # pathOverride: \"\"\n\n#\n# -- Add volumes to the traefik pod. The volume name will be passed to tpl.\n# This can be used to mount a cert pair or a configmap that holds a config.toml file.\n# After the volume has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:\n# `additionalArguments:\n# - \"--providers.file.filename=/config/dynamic.toml\"\n# - \"--ping\"\n# - \"--ping.entrypoint=web\"`\nvolumes: []\n# - name: public-cert\n#   mountPath: \"/certs\"\n#   type: secret\n# - name: '{{ printf \"%s-configs\" .Release.Name }}'\n#   mountPath: \"/config\"\n#   type: configMap\n\n# -- Additional volumeMounts to add to the Traefik container\nadditionalVolumeMounts: []\n# -- For instance when using a logshipper for access logs\n# - name: traefik-logs\n#   mountPath: /var/log/traefik\n\nlogs:\n  general:\n    # -- By default, the logs use a text format (common), but you can\n    # also ask for the json format in the format option\n    # format: json\n    # By default, the level is set to ERROR.\n    # -- Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.\n    level: INFO\n  access:\n    # -- To enable access logs\n    enabled: true\n    ## By default, logs are written using the Common Log Format (CLF) on stdout.\n    ## To write logs in JSON, use json in the format option.\n    ## If the given format is unsupported, the default (CLF) is used instead.\n    # format: json\n    # filePath: \"/var/log/traefik/access.log\n    ## To write the logs in an asynchronous fashion, specify a bufferingSize option.\n    ## This option represents the number of log lines Traefik will keep in memory before writing\n    ## them to the selected output. In some cases, this option can greatly help performances.\n    # bufferingSize: 100\n    ## Filtering\n    # -- https://docs.traefik.io/observability/access-logs/#filtering\n    filters: {}\n    # statuscodes: \"200,300-302\"\n    # retryattempts: true\n    # minduration: 10ms\n    fields:\n      general:\n        # -- Available modes: keep, drop, redact.\n        defaultmode: keep\n        # -- Names of the fields to limit.\n        names: {}\n        ## Examples:\n        # ClientUsername: drop\n      headers:\n        # -- Available modes: keep, drop, redact.\n        defaultmode: drop\n        # -- Names of the headers to limit.\n        names: {}\n        ## Examples:\n        # User-Agent: redact\n        # Authorization: drop\n        # Content-Type: keep\n\nmetrics:\n  ## -- Prometheus is enabled by default.\n  ## -- It can be disabled by setting \"prometheus: null\"\n  prometheus:\n    # -- Entry point used to expose metrics.\n    entryPoint: metrics\n    ## Enable metrics on entry points. Default=true\n    # addEntryPointsLabels: false\n    ## Enable metrics on routers. Default=false\n    # addRoutersLabels: true\n    ## Enable metrics on services. Default=true\n    # addServicesLabels: false\n    ## Buckets for latency metrics. Default=\"0.1,0.3,1.2,5.0\"\n    # buckets: \"0.5,1.0,2.5\"\n    ## When manualRouting is true, it disables the default internal router in\n    ## order to allow creating a custom router for prometheus@internal service.\n    # manualRouting: true\n  #  datadog:\n  #    ## Address instructs exporter to send metrics to datadog-agent at this address.\n  #    address: \"127.0.0.1:8125\"\n  #    ## The interval used by the exporter to push metrics to datadog-agent. Default=10s\n  #    # pushInterval: 30s\n  #    ## The prefix to use for metrics collection. Default=\"traefik\"\n  #    # prefix: traefik\n  #    ## Enable metrics on entry points. Default=true\n  #    # addEntryPointsLabels: false\n  #    ## Enable metrics on routers. Default=false\n  #    # addRoutersLabels: true\n  #    ## Enable metrics on services. Default=true\n  #    # addServicesLabels: false\n  #  influxdb:\n  #    ## Address instructs exporter to send metrics to influxdb at this address.\n  #    address: localhost:8089\n  #    ## InfluxDB's address protocol (udp or http). Default=\"udp\"\n  #    protocol: udp\n  #    ## InfluxDB database used when protocol is http. Default=\"\"\n  #    # database: \"\"\n  #    ## InfluxDB retention policy used when protocol is http. Default=\"\"\n  #    # retentionPolicy: \"\"\n  #    ## InfluxDB username (only with http). Default=\"\"\n  #    # username: \"\"\n  #    ## InfluxDB password (only with http). Default=\"\"\n  #    # password: \"\"\n  #    ## The interval used by the exporter to push metrics to influxdb. Default=10s\n  #    # pushInterval: 30s\n  #    ## Additional labels (influxdb tags) on all metrics.\n  #    # additionalLabels:\n  #    #   env: production\n  #    #   foo: bar\n  #    ## Enable metrics on entry points. Default=true\n  #    # addEntryPointsLabels: false\n  #    ## Enable metrics on routers. Default=false\n  #    # addRoutersLabels: true\n  #    ## Enable metrics on services. Default=true\n  #    # addServicesLabels: false\n  #  influxdb2:\n  #    ## Address instructs exporter to send metrics to influxdb v2 at this address.\n  #    address: localhost:8086\n  #    ## Token with which to connect to InfluxDB v2.\n  #    token: xxx\n  #    ## Organisation where metrics will be stored.\n  #    org: \"\"\n  #    ## Bucket where metrics will be stored.\n  #    bucket: \"\"\n  #    ## The interval used by the exporter to push metrics to influxdb. Default=10s\n  #    # pushInterval: 30s\n  #    ## Additional labels (influxdb tags) on all metrics.\n  #    # additionalLabels:\n  #    #   env: production\n  #    #   foo: bar\n  #    ## Enable metrics on entry points. Default=true\n  #    # addEntryPointsLabels: false\n  #    ## Enable metrics on routers. Default=false\n  #    # addRoutersLabels: true\n  #    ## Enable metrics on services. Default=true\n  #    # addServicesLabels: false\n  #  statsd:\n  #    ## Address instructs exporter to send metrics to statsd at this address.\n  #    address: localhost:8125\n  #    ## The interval used by the exporter to push metrics to influxdb. Default=10s\n  #    # pushInterval: 30s\n  #    ## The prefix to use for metrics collection. Default=\"traefik\"\n  #    # prefix: traefik\n  #    ## Enable metrics on entry points. Default=true\n  #    # addEntryPointsLabels: false\n  #    ## Enable metrics on routers. Default=false\n  #    # addRoutersLabels: true\n  #    ## Enable metrics on services. Default=true\n  #    # addServicesLabels: false\n  #  openTelemetry:\n  #    ## Address of the OpenTelemetry Collector to send metrics to.\n  #    address: \"localhost:4318\"\n  #    ## Enable metrics on entry points.\n  #    addEntryPointsLabels: true\n  #    ## Enable metrics on routers.\n  #    addRoutersLabels: true\n  #    ## Enable metrics on services.\n  #    addServicesLabels: true\n  #    ## Explicit boundaries for Histogram data points.\n  #    explicitBoundaries:\n  #      - \"0.1\"\n  #      - \"0.3\"\n  #      - \"1.2\"\n  #      - \"5.0\"\n  #    ## Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.\n  #    headers:\n  #      foo: bar\n  #      test: test\n  #    ## Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.\n  #    insecure: true\n  #    ## Interval at which metrics are sent to the OpenTelemetry Collector.\n  #    pushInterval: 10s\n  #    ## Allows to override the default URL path used for sending metrics. This option has no effect when using gRPC transport.\n  #    path: /foo/v1/traces\n  #    ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.\n  #    tls:\n  #      ## The path to the certificate authority, it defaults to the system bundle.\n  #      ca: path/to/ca.crt\n  #      ## The path to the public certificate. When using this option, setting the key option is required.\n  #      cert: path/to/foo.cert\n  #      ## The path to the private key. When using this option, setting the cert option is required.\n  #      key: path/to/key.key\n  #      ## If set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.\n  #      insecureSkipVerify: true\n  #    ## This instructs the reporter to send metrics to the OpenTelemetry Collector using gRPC.\n  #    grpc: true\n\n  ## -- enable optional CRDs for Prometheus Operator\n  ##\n  ## Create a dedicated metrics service for use with ServiceMonitor\n  #  service:\n  #    enabled: false\n  #    labels: {}\n  #    annotations: {}\n  ## When set to true, it won't check if Prometheus Operator CRDs are deployed\n  #  disableAPICheck: false\n  #  serviceMonitor:\n  #    metricRelabelings: []\n  #      - sourceLabels: [__name__]\n  #        separator: ;\n  #        regex: ^fluentd_output_status_buffer_(oldest|newest)_.+\n  #        replacement: $1\n  #        action: drop\n  #    relabelings: []\n  #      - sourceLabels: [__meta_kubernetes_pod_node_name]\n  #        separator: ;\n  #        regex: ^(.*)$\n  #        targetLabel: nodename\n  #        replacement: $1\n  #        action: replace\n  #    jobLabel: traefik\n  #    interval: 30s\n  #    honorLabels: true\n  #    # (Optional)\n  #    # scrapeTimeout: 5s\n  #    # honorTimestamps: true\n  #    # enableHttp2: true\n  #    # followRedirects: true\n  #    # additionalLabels:\n  #    #   foo: bar\n  #    # namespace: \"another-namespace\"\n  #    # namespaceSelector: {}\n  #  prometheusRule:\n  #    additionalLabels: {}\n  #    namespace: \"another-namespace\"\n  #    rules:\n  #      - alert: TraefikDown\n  #        expr: up{job=\"traefik\"} == 0\n  #        for: 5m\n  #        labels:\n  #          context: traefik\n  #          severity: warning\n  #        annotations:\n  #          summary: \"Traefik Down\"\n  #          description: \"{{ $labels.pod }} on {{ $labels.nodename }} is down\"\n\n## Tracing\n# -- https://doc.traefik.io/traefik/observability/tracing/overview/\ntracing: {}\n# instana:\n#   localAgentHost: 127.0.0.1\n#   localAgentPort: 42699\n#   logLevel: info\n#   enableAutoProfile: true\n# datadog:\n#   localAgentHostPort: 127.0.0.1:8126\n#   debug: false\n#   globalTag: \"\"\n#   prioritySampling: false\n# jaeger:\n#   samplingServerURL: http://localhost:5778/sampling\n#   samplingType: const\n#   samplingParam: 1.0\n#   localAgentHostPort: 127.0.0.1:6831\n#   gen128Bit: false\n#   propagation: jaeger\n#   traceContextHeaderName: uber-trace-id\n#   disableAttemptReconnecting: true\n#   collector:\n#      endpoint: \"\"\n#      user: \"\"\n#      password: \"\"\n# zipkin:\n#   httpEndpoint: http://localhost:9411/api/v2/spans\n#   sameSpan: false\n#   id128Bit: true\n#   sampleRate: 1.0\n# haystack:\n#   localAgentHost: 127.0.0.1\n#   localAgentPort: 35000\n#   globalTag: \"\"\n#   traceIDHeaderName: \"\"\n#   parentIDHeaderName: \"\"\n#   spanIDHeaderName: \"\"\n#   baggagePrefixHeaderName: \"\"\n# elastic:\n#   serverURL: http://localhost:8200\n#   secretToken: \"\"\n#   serviceEnvironment: \"\"\n\n# -- Global command arguments to be passed to all traefik's pods\nglobalArguments:\n- \"--global.checknewversion\"\n- \"--global.sendanonymoususage\"\n- \"--global.sendanonymoususage=false\"\n- \"--global.checknewversion=false\"\n#\n# Configure Traefik static configuration\n# -- Additional arguments to be passed at Traefik's binary\n# All available options available on https://docs.traefik.io/reference/static-configuration/cli/\n## Use curly braces to pass values: `helm install --set=\"additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}\"`\nadditionalArguments:\n- \"--providers.kubernetesingress.ingressclass=ingress-traefik\"\n- \"--log.level=DEBUG\"\n- \"--providers.kubernetescrd\"\n\n# -- Environment variables to be passed to Traefik's binary\nenv: []\n# - name: SOME_VAR\n#   value: some-var-value\n# - name: SOME_VAR_FROM_CONFIG_MAP\n#   valueFrom:\n#     configMapRef:\n#       name: configmap-name\n#       key: config-key\n# - name: SOME_SECRET\n#   valueFrom:\n#     secretKeyRef:\n#       name: secret-name\n#       key: secret-key\n\n# -- Environment variables to be passed to Traefik's binary from configMaps or secrets\nenvFrom: []\n# - configMapRef:\n#     name: config-map-name\n# - secretRef:\n#     name: secret-name\n\nports:\n  traefik:\n    port: 9000\n    # -- Use hostPort if set.\n    # hostPort: 9000\n    #\n    # -- Use hostIP if set. If not set, Kubernetes will default to 0.0.0.0, which\n    # means it's listening on all your interfaces and all your IPs. You may want\n    # to set this value if you need traefik to listen on specific interface\n    # only.\n    # hostIP: 192.168.100.10\n\n    # Override the liveness/readiness port. This is useful to integrate traefik\n    # with an external Load Balancer that performs healthchecks.\n    # Default: ports.traefik.port\n    # healthchecksPort: 9000\n\n    # Override the liveness/readiness scheme. Useful for getting ping to\n    # respond on websecure entryPoint.\n    # healthchecksScheme: HTTPS\n\n    # Defines whether the port is exposed if service.type is LoadBalancer or\n    # NodePort.\n    #\n    # -- You SHOULD NOT expose the traefik port on production deployments.\n    # If you want to access it from outside of your cluster,\n    # use `kubectl port-forward` or create a secure ingress\n    expose: true\n    # -- The exposed port for this service\n    exposedPort: 9000\n    # -- The port protocol (TCP/UDP)\n    protocol: TCP\n  web:\n    ## -- Enable this entrypoint as a default entrypoint. When a service doesn't explicity set an entrypoint it will only use this entrypoint.\n    # asDefault: true\n    port: 8000\n    # hostPort: 8000\n    # containerPort: 8000\n    expose: true\n    exposedPort: 8000\n    ## -- Different target traefik port on the cluster, useful for IP type LB\n    # targetPort: 80\n    # The port protocol (TCP/UDP)\n    protocol: TCP\n    # -- Use nodeport if set. This is useful if you have configured Traefik in a\n    # LoadBalancer.\n    # nodePort: 32080\n    # Port Redirections\n    # Added in 2.2, you can make permanent redirects via entrypoints.\n    # https://docs.traefik.io/routing/entrypoints/#redirection\n    # redirectTo: websecure\n    #\n    # Trust forwarded  headers information (X-Forwarded-*).\n    # forwardedHeaders:\n    #   trustedIPs: []\n    #   insecure: false\n    #\n    # Enable the Proxy Protocol header parsing for the entry point\n    # proxyProtocol:\n    #   trustedIPs: []\n    #   insecure: false\n  websecure:\n    ## -- Enable this entrypoint as a default entrypoint. When a service doesn't explicity set an entrypoint it will only use this entrypoint.\n    # asDefault: true\n    port: 8443\n    # hostPort: 8443\n    # containerPort: 8443\n    expose: true\n    exposedPort: 8443\n    ## -- Different target traefik port on the cluster, useful for IP type LB\n    # targetPort: 80\n    ## -- The port protocol (TCP/UDP)\n    protocol: TCP\n    # nodePort: 32443\n    ## -- Specify an application protocol. This may be used as a hint for a Layer 7 load balancer.\n    # appProtocol: https\n    #\n    ## -- Enable HTTP/3 on the entrypoint\n    ## Enabling it will also enable http3 experimental feature\n    ## https://doc.traefik.io/traefik/routing/entrypoints/#http3\n    ## There are known limitations when trying to listen on same ports for\n    ## TCP \u0026 UDP (Http3). There is a workaround in this chart using dual Service.\n    ## https://github.com/kubernetes/kubernetes/issues/47249#issuecomment-587960741\n    http3:\n      enabled: false\n    # advertisedPort: 4443\n    #\n    ## -- Trust forwarded  headers information (X-Forwarded-*).\n    #forwardedHeaders:\n    #  trustedIPs: []\n    #  insecure: false\n    #\n    ## -- Enable the Proxy Protocol header parsing for the entry point\n    #proxyProtocol:\n    #  trustedIPs: []\n    #  insecure: false\n    #\n    ## Set TLS at the entrypoint\n    ## https://doc.traefik.io/traefik/routing/entrypoints/#tls\n    tls:\n      enabled: true\n      # this is the name of a TLSOption definition\n      options: \"\"\n      certResolver: \"\"\n      domains: []\n      # - main: example.com\n      #   sans:\n      #     - foo.example.com\n      #     - bar.example.com\n    #\n    # -- One can apply Middlewares on an entrypoint\n    # https://doc.traefik.io/traefik/middlewares/overview/\n    # https://doc.traefik.io/traefik/routing/entrypoints/#middlewares\n    # -- /!\\ It introduces here a link between your static configuration and your dynamic configuration /!\\\n    # It follows the provider naming convention: https://doc.traefik.io/traefik/providers/overview/#provider-namespace\n    # middlewares:\n    #   - namespace-name1@kubernetescrd\n    #   - namespace-name2@kubernetescrd\n    middlewares: []\n  metrics:\n    # -- When using hostNetwork, use another port to avoid conflict with node exporter:\n    # https://github.com/prometheus/prometheus/wiki/Default-port-allocations\n    port: 9100\n    # hostPort: 9100\n    # Defines whether the port is exposed if service.type is LoadBalancer or\n    # NodePort.\n    #\n    # -- You may not want to expose the metrics port on production deployments.\n    # If you want to access it from outside of your cluster,\n    # use `kubectl port-forward` or create a secure ingress\n    expose: false\n    # -- The exposed port for this service\n    exposedPort: 9100\n    # -- The port protocol (TCP/UDP)\n    protocol: TCP\n\n  clickhouse:\n    port: 8101\n    expose: true\n    exposedPort: 8101\n    protocol: TCP\n\n  jupyterhub:\n    port: 8103\n    expose: true\n    exposedPort: 8103\n    protocol: TCP\n\n  mongodb:\n    port: 27017\n    expose: true\n    exposedPort: 27017\n    protocol: TCP\n\n  redis:\n    port: 6379\n    expose: true\n    exposedPort: 6379\n    protocol: TCP\n\n  mysql:\n    port: 3306\n    expose: true\n    exposedPort: 3306\n    protocol: TCP\n\n  xtradb:\n    port: 3307\n    expose: true\n    exposedPort: 3307\n    protocol: TCP\n\n\n  xtradbreplicas:\n    port: 3308\n    expose: true\n    exposedPort: 3308\n    protocol: TCP\n\n  mysqlaws:\n    port: 4306\n    expose: true\n    exposedPort: 4306\n    protocol: TCP\n\n  zipkin:\n    port: 19411\n    expose: true\n    exposedPort: 19411\n    protocol: TCP\n\n  prometheus:\n    port: 9090\n    expose: true\n    exposedPort: 9090\n    protocol: TCP\n\n  kibana:\n    port: 5601\n    expose: true\n    exposedPort: 5601\n    protocol: TCP\n\n  tempo:\n    port: 9600\n    expose: true\n    exposedPort: 9600\n    protocol: TCP\n\n  tempozipkin:\n    port: 9700\n    expose: true\n    exposedPort: 9700\n    protocol: TCP\n\n  apm:\n    port: 8200\n    expose: true\n    exposedPort: 8200\n    protocol: TCP\n\n\n\n  minio:\n    port: 8102\n    expose: true\n    exposedPort: 8102\n    protocol: TCP\n\n  influx:\n    port: 8079\n    expose: true\n    exposedPort: 8079\n    protocol: TCP\n\n  telemetry6831:\n    port: 6831\n    expose: true\n    exposedPort: 6831\n    protocol: UDP\n\n  telemetry14250:\n    port: 14250\n    expose: true\n    exposedPort: 14250\n    protocol: TCP\n\n  telemetry14268:\n    port: 14268\n    expose: true\n    exposedPort: 14268\n    protocol: TCP\n\n  telemetry4317:\n    port: 4317\n    expose: true\n    exposedPort: 4317\n    protocol: TCP\n\n  telemetry4318:\n    port: 4318\n    expose: true\n    exposedPort: 4318\n    protocol: TCP\n\n\n  telemetry9411:\n    port: 9411\n    expose: true\n    exposedPort: 9411\n    protocol: TCP\n\n\n  tcp1:\n    port: 8080\n    expose: true\n    exposedPort: 8080\n    protocol: TCP\n\n  tcp2:\n    port: 8081\n    expose: true\n    exposedPort: 8081\n    protocol: TCP\n\n  tcp3:\n    port: 8082\n    expose: true\n    exposedPort: 8082\n    protocol: TCP\n\n  tcp4:\n    port: 8083\n    expose: true\n    exposedPort: 8083\n    protocol: TCP\n\n  tcp5:\n    port: 8084\n    expose: true\n    exposedPort: 8084\n    protocol: TCP\n\n  tcp6:\n    port: 8085\n    expose: true\n    exposedPort: 8085\n    protocol: TCP\n\n  tcp7:\n    port: 8086\n    expose: true\n    exposedPort: 8086\n    protocol: TCP\n\n  tcp8:\n    port: 8087\n    expose: true\n    exposedPort: 8087\n    protocol: TCP\n\n  tcp9:\n    port: 8088\n    expose: true\n    exposedPort: 8088\n    protocol: TCP\n\n  tcp10:\n    port: 8089\n    expose: true\n    exposedPort: 8089\n    protocol: TCP\n\n  tcp11:\n    port: 8090\n    expose: true\n    exposedPort: 8090\n    protocol: TCP\n\n  tcp12:\n    port: 8091\n    expose: true\n    exposedPort: 8091\n    protocol: TCP\n\n  tcp13:\n    port: 8092\n    expose: true\n    exposedPort: 8092\n    protocol: TCP\n\n  tcp14:\n    port: 8093\n    expose: true\n    exposedPort: 8093\n    protocol: TCP\n\n  tcp15:\n    port: 8094\n    expose: true\n    exposedPort: 8094\n    protocol: TCP\n\n  tcp16:\n    port: 8095\n    expose: true\n    exposedPort: 8095\n    protocol: TCP\n\n  tcp17:\n    port: 8096\n    expose: true\n    exposedPort: 8096\n    protocol: TCP\n\n  tcp18:\n    port: 8097\n    expose: true\n    exposedPort: 8097\n    protocol: TCP\n\n  tcp19:\n    port: 8098\n    expose: true\n    exposedPort: 8098\n    protocol: TCP\n\n  tcp20:\n    port: 8099\n    expose: true\n    exposedPort: 8099\n    protocol: TCP\n\n  udp1:\n    port: 8001\n    expose: true\n    exposedPort: 8001\n    protocol: UDP\n\n  udp2:\n    port: 8002\n    expose: true\n    exposedPort: 8002\n    protocol: UDP\n\n  udp3:\n    port: 8003\n    expose: true\n    exposedPort: 8003\n    protocol: UDP\n\n\n# -- TLS Options are created as TLSOption CRDs\n# https://doc.traefik.io/traefik/https/tls/#tls-options\n# When using `labelSelector`, you'll need to set labels on tlsOption accordingly.\n# Example:\n# tlsOptions:\n#   default:\n#     labels: {}\n#     sniStrict: true\n#     preferServerCipherSuites: true\n#   customOptions:\n#     labels: {}\n#     curvePreferences:\n#       - CurveP521\n#       - CurveP384\ntlsOptions: {}\n\n# -- TLS Store are created as TLSStore CRDs. This is useful if you want to set a default certificate\n# https://doc.traefik.io/traefik/https/tls/#default-certificate\n# Example:\n# tlsStore:\n#   default:\n#     defaultCertificate:\n#       secretName: tls-cert\ntlsStore: {}\n\nservice:\n  enabled: true\n  ## -- Single service is using `MixedProtocolLBService` feature gate.\n  ## -- When set to false, it will create two Service, one for TCP and one for UDP.\n  single: true\n  type: LoadBalancer\n  # -- Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)\n  annotations: {}\n  # -- Additional annotations for TCP service only\n  annotationsTCP: {}\n  # -- Additional annotations for UDP service only\n  annotationsUDP: {}\n  # -- Additional service labels (e.g. for filtering Service by custom labels)\n  labels: {}\n  # -- Additional entries here will be added to the service spec.\n  # -- Cannot contain type, selector or ports entries.\n  spec: {}\n  # externalTrafficPolicy: Cluster\n  # loadBalancerIP: \"1.2.3.4\"\n  # clusterIP: \"2.3.4.5\"\n  loadBalancerSourceRanges: []\n  # - 192.168.0.1/32\n  # - 172.16.0.0/16\n  ## -- Class of the load balancer implementation\n  # loadBalancerClass: service.k8s.aws/nlb\n  externalIPs:\n  - 192.168.36.90\n  ## One of SingleStack, PreferDualStack, or RequireDualStack.\n  # ipFamilyPolicy: SingleStack\n  ## List of IP families (e.g. IPv4 and/or IPv6).\n  ## ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services\n  # ipFamilies:\n  #   - IPv4\n  #   - IPv6\n  ##\n  ## -- An additionnal and optional internal Service.\n  ## Same parameters as external Service\n  # internal:\n  #   type: ClusterIP\n  #   # labels: {}\n  #   # annotations: {}\n  #   # spec: {}\n  #   # loadBalancerSourceRanges: []\n  #   # externalIPs: []\n  #   # ipFamilies: [ \"IPv4\",\"IPv6\" ]\n\nautoscaling:\n  # -- Create HorizontalPodAutoscaler object.\n  enabled: false\n#   minReplicas: 1\n#   maxReplicas: 10\n#   metrics:\n#   - type: Resource\n#     resource:\n#       name: cpu\n#       target:\n#         type: Utilization\n#         averageUtilization: 60\n#   - type: Resource\n#     resource:\n#       name: memory\n#       target:\n#         type: Utilization\n#         averageUtilization: 60\n#   behavior:\n#     scaleDown:\n#       stabilizationWindowSeconds: 300\n#       policies:\n#       - type: Pods\n#         value: 1\n#         periodSeconds: 60\n\npersistence:\n  # -- Enable persistence using Persistent Volume Claims\n  # ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n  # It can be used to store TLS certificates, see `storage` in certResolvers\n  enabled: true\n  name: data\n  #  existingClaim: \"\"\n  accessMode: ReadWriteOnce\n  size: 512Mi\n  # storageClass: \"\"\n  # volumeName: \"\"\n  path: /data\n  annotations: {}\n  # -- Only mount a subpath of the Volume into the pod\n  # subPath: \"\"\n\n# -- Certificates resolvers configuration\ncertResolvers: {}\n#   letsencrypt:\n#     # for challenge options cf. https://doc.traefik.io/traefik/https/acme/\n#     email: email@example.com\n#     dnsChallenge:\n#       # also add the provider's required configuration under env\n#       # or expand then from secrets/configmaps with envfrom\n#       # cf. https://doc.traefik.io/traefik/https/acme/#providers\n#       provider: digitalocean\n#       # add futher options for the dns challenge as needed\n#       # cf. https://doc.traefik.io/traefik/https/acme/#dnschallenge\n#       delayBeforeCheck: 30\n#       resolvers:\n#         - 1.1.1.1\n#         - 8.8.8.8\n#     tlsChallenge: true\n#     httpChallenge:\n#       entryPoint: \"web\"\n#     # It has to match the path with a persistent volume\n#     storage: /data/acme.json\n\n# -- If hostNetwork is true, runs traefik in the host network namespace\n# To prevent unschedulabel pods due to port collisions, if hostNetwork=true\n# and replicas\u003e1, a pod anti-affinity is recommended and will be set if the\n# affinity is left as default.\nhostNetwork: false\n\n# -- Whether Role Based Access Control objects like roles and rolebindings should be created\nrbac:\n  enabled: true\n  # If set to false, installs ClusterRole and ClusterRoleBinding so Traefik can be used across namespaces.\n  # If set to true, installs Role and RoleBinding. Providers will only watch target namespace.\n  namespaced: false\n  # Enable user-facing roles\n  # https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles\n  # aggregateTo: [ \"admin\" ]\n\n# -- Enable to create a PodSecurityPolicy and assign it to the Service Account via RoleBinding or ClusterRoleBinding\npodSecurityPolicy:\n  enabled: false\n\n# -- The service account the pods will use to interact with the Kubernetes API\nserviceAccount:\n  # If set, an existing service account is used\n  # If not set, a service account is created automatically using the fullname template\n  name: \"\"\n\n# -- Additional serviceAccount annotations (e.g. for oidc authentication)\nserviceAccountAnnotations: {}\n\n# -- The resources parameter defines CPU and memory requirements and limits for Traefik's containers.\nresources: {}\n# requests:\n#   cpu: \"100m\"\n#   memory: \"50Mi\"\n# limits:\n#   cpu: \"300m\"\n#   memory: \"150Mi\"\n\n# -- This example pod anti-affinity forces the scheduler to put traefik pods\n# -- on nodes where no other traefik pods are scheduled.\n# It should be used when hostNetwork: true to prevent port conflicts\naffinity:\n  nodeAffinity:\n    requiredDuringSchedulingIgnoredDuringExecution:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: kubernetes.io/hostname\n          operator: In\n          values:\n          - kube-prd-master-01\n          - kube-prd-master-02\n#  podAntiAffinity:\n#    requiredDuringSchedulingIgnoredDuringExecution:\n#      - labelSelector:\n#          matchLabels:\n#            app.kubernetes.io/name: '{{ template \"traefik.name\" . }}'\n#            app.kubernetes.io/instance: '{{ .Release.Name }}-{{ .Release.Namespace }}'\n#        topologyKey: kubernetes.io/hostname\n\n# -- nodeSelector is the simplest recommended form of node selection constraint.\n# nodeSelector:\n#   node-type: \"master\"\n\n#  kubernetes.io/hostname: \"kubenode-master-01\"\n# -- Tolerations allow the scheduler to schedule pods with matching taints.\ntolerations:\n- key: node-role.kubernetes.io/control-plane\n  operator: Exists\n  effect: NoSchedule\n# -- You can use topology spread constraints to control \n# how Pods are spread across your cluster among failure-domains.\ntopologySpreadConstraints: []\n# This example topologySpreadConstraints forces the scheduler to put traefik pods\n# on nodes where no other traefik pods are scheduled.\n#  - labelSelector:\n#      matchLabels:\n#        app: '{{ template \"traefik.name\" . }}'\n#    maxSkew: 1\n#    topologyKey: kubernetes.io/hostname\n#    whenUnsatisfiable: DoNotSchedule\n\n# -- Pods can have priority.\n# -- Priority indicates the importance of a Pod relative to other Pods.\npriorityClassName: \"\"\n\n# -- Set the container security context\n# -- To run the container with ports below 1024 this will need to be adjust to run as root\nsecurityContext:\n  capabilities:\n    drop: [ALL]\n  readOnlyRootFilesystem: true\n\npodSecurityContext:\n  # /!\\ When setting fsGroup, Kubernetes will recursively changes ownership and\n  # permissions for the contents of each volume to match the fsGroup. This can\n  # be an issue when storing sensitive content like TLS Certificates /!\\\n  # fsGroup: 65532\n  # -- Specifies the policy for changing ownership and permissions of volume contents to match the fsGroup.\n  fsGroupChangePolicy: \"OnRootMismatch\"\n  # -- The ID of the group for all containers in the pod to run as.\n  runAsGroup: 65532\n  # -- Specifies whether the containers should run as a non-root user.\n  runAsNonRoot: true\n  # -- The ID of the user for all containers in the pod to run as.\n  runAsUser: 65532\n\n#\n# -- Extra objects to deploy (value evaluated as a template)\n#\n# In some cases, it can avoid the need for additional, extended or adhoc deployments.\n# See #595 for more details and traefik/tests/values/extra.yaml for example.\nextraObjects: []\n\n# This will override the default Release Namespace for Helm.\n# It will not affect optional CRDs such as `ServiceMonitor` and `PrometheusRules`\n# namespaceOverride: traefik\n#\n## -- This will override the default app.kubernetes.io/instance label for all Objects.\n# instanceLabelOverride: traefik\n"
            ],
            "verify": false,
            "version": "23.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.traefik-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "users-mongodb",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "mongodb",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "auth-mongodb",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "7.0.5",
                "chart": "mongodb",
                "name": "auth-mongodb",
                "namespace": "datalake",
                "revision": 2,
                "values": "{\"affinity\":{},\"annotations\":{},\"arbiter\":{\"affinity\":{},\"annotations\":{},\"args\":[],\"command\":[],\"configuration\":\"\",\"containerPorts\":{\"mongodb\":27019},\"containerSecurityContext\":{\"enabled\":true,\"runAsNonRoot\":true,\"runAsUser\":1001},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"enabled\":true,\"existingConfigmap\":\"\",\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraFlags\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostAliases\":[],\"initContainers\":[],\"labels\":{},\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":30,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"pdb\":{\"create\":false,\"maxUnavailable\":\"\",\"minAvailable\":1},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podManagementPolicy\":\"OrderedReady\",\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001,\"sysctls\":[]},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"2\",\"memory\":\"4Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"runtimeClassName\":\"\",\"schedulerName\":\"\",\"service\":{\"annotations\":{},\"extraPorts\":[],\"headless\":{\"annotations\":{}},\"nameOverride\":\"\",\"ports\":{\"mongodb\":27019}},\"sidecars\":[],\"startupProbe\":{\"enabled\":false,\"failureThreshold\":30,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"terminationGracePeriodSeconds\":\"\",\"tolerations\":[],\"topologySpreadConstraints\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"}},\"architecture\":\"standalone\",\"args\":[],\"auth\":{\"database\":\"bifrost\",\"databases\":[\"bifrost\"],\"enabled\":true,\"existingSecret\":\"\",\"password\":\"Maniac321.\",\"passwords\":[\"Maniac321.\"],\"rootPassword\":\"Maniac321.\",\"rootUser\":\"root\",\"standaloneKey\":\"\",\"username\":\"bifrost\",\"usernames\":[\"bifrost\"]},\"clusterDomain\":\"cluster.local\",\"command\":[],\"commonAnnotations\":{},\"commonLabels\":{},\"configuration\":\"\",\"containerPorts\":{\"mongodb\":27019},\"containerSecurityContext\":{\"enabled\":true,\"runAsNonRoot\":true,\"runAsUser\":1001},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"diagnosticMode\":{\"args\":[\"infinity\"],\"command\":[\"sleep\"],\"enabled\":false},\"directoryPerDB\":false,\"disableJavascript\":false,\"disableSystemLog\":false,\"enableIPv6\":false,\"enableJournal\":true,\"existingConfigmap\":\"\",\"externalAccess\":{\"autoDiscovery\":{\"enabled\":true,\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/kubectl\",\"tag\":\"1.25.11-debian-11-r5\"},\"resources\":{\"limits\":{\"cpu\":\"2\",\"memory\":\"4Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}}},\"enabled\":true,\"externalMaster\":{\"enabled\":false,\"host\":\"\",\"port\":27019},\"hidden\":{\"enabled\":false,\"service\":{\"allocateLoadBalancerNodePorts\":true,\"annotations\":{},\"domain\":\"\",\"externalTrafficPolicy\":\"Local\",\"extraPorts\":[],\"loadBalancerClass\":\"\",\"loadBalancerIPs\":[],\"loadBalancerSourceRanges\":[],\"nodePorts\":[],\"portName\":\"mongodb\",\"ports\":{\"mongodb\":27019},\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"LoadBalancer\"}},\"service\":{\"allocateLoadBalancerNodePorts\":true,\"annotations\":{},\"domain\":\"\",\"externalTrafficPolicy\":\"Local\",\"extraPorts\":[],\"loadBalancerClass\":\"\",\"loadBalancerIPs\":[],\"loadBalancerSourceRanges\":[],\"nodePorts\":[],\"portName\":\"mongodb\",\"ports\":{\"mongodb\":27019},\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"LoadBalancer\"}},\"extraDeploy\":[],\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraFlags\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"fullnameOverride\":\"\",\"global\":{\"imagePullSecrets\":[],\"imageRegistry\":\"\",\"namespaceOverride\":\"\",\"storageClass\":\"\"},\"hidden\":{\"affinity\":{},\"annotations\":{},\"args\":[],\"command\":[],\"configuration\":\"\",\"containerPorts\":{\"mongodb\":27019},\"containerSecurityContext\":{\"enabled\":true,\"runAsNonRoot\":true,\"runAsUser\":1001},\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"enabled\":false,\"existingConfigmap\":\"\",\"extraEnvVars\":[],\"extraEnvVarsCM\":\"\",\"extraEnvVarsSecret\":\"\",\"extraFlags\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostAliases\":[],\"initContainers\":[],\"labels\":{},\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":30,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"pdb\":{\"create\":false,\"maxUnavailable\":\"\",\"minAvailable\":1},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"enabled\":true,\"medium\":\"\",\"mountPath\":\"/bitnami/mongodb\",\"size\":\"10Gi\",\"storageClass\":\"\",\"subPath\":\"\",\"volumeClaimTemplates\":{\"dataSource\":{},\"requests\":{},\"selector\":{}}},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podManagementPolicy\":\"OrderedReady\",\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001,\"sysctls\":[]},\"priorityClassName\":\"\",\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"replicaCount\":3,\"resources\":{\"limits\":{\"cpu\":\"2\",\"memory\":\"4Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"runtimeClassName\":\"\",\"schedulerName\":\"\",\"service\":{\"annotations\":{},\"extraPorts\":[],\"headless\":{\"annotations\":{}},\"portName\":\"mongodb\",\"ports\":{\"mongodb\":27019}},\"sidecars\":[],\"startupProbe\":{\"enabled\":false,\"failureThreshold\":30,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"terminationGracePeriodSeconds\":\"\",\"tolerations\":[],\"topologySpreadConstraints\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"}},\"hostAliases\":[],\"image\":{\"debug\":false,\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/mongodb\",\"tag\":\"7.0.5-debian-11-r6\"},\"initContainers\":[],\"initdbScripts\":{},\"initdbScriptsConfigMap\":\"\",\"kubeVersion\":\"\",\"labels\":{},\"lifecycleHooks\":{},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":30,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"metrics\":{\"args\":[],\"collector\":{\"all\":false,\"collstats\":false,\"collstatsColls\":[],\"collstatsLimit\":0,\"dbstats\":false,\"diagnosticdata\":true,\"indexstats\":false,\"indexstatsColls\":[],\"standalonestatus\":true,\"topmetrics\":false},\"command\":[],\"compatibleMode\":true,\"containerPort\":9216,\"customLivenessProbe\":{},\"customReadinessProbe\":{},\"customStartupProbe\":{},\"enabled\":true,\"extraFlags\":\"\",\"extraVolumeMounts\":[],\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/mongodb-exporter\",\"tag\":\"0.39.0-debian-11-r10\"},\"livenessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":15,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":10},\"password\":\"Maniac321.\",\"prometheusRule\":{\"additionalLabels\":{},\"enabled\":false,\"namespace\":\"\",\"rules\":[]},\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"2\",\"memory\":\"4Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"service\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"{{ .Values.metrics.service.ports.metrics }}\",\"prometheus.io/scrape\":\"true\"},\"extraPorts\":[],\"ports\":{\"metrics\":9216},\"type\":\"ClusterIP\"},\"serviceMonitor\":{\"enabled\":false,\"honorLabels\":false,\"interval\":\"30s\",\"jobLabel\":\"\",\"labels\":{},\"metricRelabelings\":[],\"namespace\":\"\",\"relabelings\":[],\"scrapeTimeout\":\"\",\"selector\":{}},\"startupProbe\":{\"enabled\":false,\"failureThreshold\":30,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"username\":\"bifrost\"},\"nameOverride\":\"\",\"namespaceOverride\":\"\",\"nodeAffinityPreset\":{\"key\":\"\",\"type\":\"\",\"values\":[]},\"nodeSelector\":{},\"pdb\":{\"create\":false,\"maxUnavailable\":\"\",\"minAvailable\":1},\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"enabled\":true,\"existingClaim\":\"\",\"medium\":\"\",\"mountPath\":\"/bitnami/mongodb\",\"resourcePolicy\":\"\",\"size\":\"15Gi\",\"storageClass\":\"\",\"subPath\":\"\",\"volumeClaimTemplates\":{\"dataSource\":{},\"requests\":{},\"selector\":{}}},\"podAffinityPreset\":\"\",\"podAnnotations\":{},\"podAntiAffinityPreset\":\"soft\",\"podLabels\":{},\"podManagementPolicy\":\"OrderedReady\",\"podSecurityContext\":{\"enabled\":true,\"fsGroup\":1001,\"sysctls\":[]},\"podSecurityPolicy\":{\"allowPrivilegeEscalation\":false,\"create\":false,\"privileged\":false,\"spec\":{}},\"priorityClassName\":\"\",\"rbac\":{\"create\":false,\"rules\":[]},\"readinessProbe\":{\"enabled\":true,\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"replicaCount\":3,\"resources\":{\"limits\":{\"cpu\":\"2\",\"memory\":\"4Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"runtimeClassName\":\"\",\"schedulerName\":\"\",\"service\":{\"allocateLoadBalancerNodePorts\":true,\"annotations\":{},\"clusterIP\":\"\",\"externalIPs\":[\"192.168.36.99\"],\"externalTrafficPolicy\":\"Local\",\"extraPorts\":[],\"headless\":{\"annotations\":{}},\"loadBalancerClass\":\"\",\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":[],\"nameOverride\":\"\",\"nodePorts\":{\"mongodb\":\"\"},\"portName\":\"mongodb\",\"ports\":{\"mongodb\":27019},\"sessionAffinity\":\"None\",\"sessionAffinityConfig\":{},\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"automountServiceAccountToken\":true,\"create\":true,\"name\":\"\"},\"serviceBindings\":{\"enabled\":false},\"sidecars\":[],\"standaloneConfigurationSettings\":{\"configuration\":{},\"enabled\":true},\"standaloneHostnames\":true,\"standaloneName\":\"rs0\",\"startupProbe\":{\"enabled\":false,\"failureThreshold\":30,\"initialDelaySeconds\":5,\"periodSeconds\":20,\"successThreshold\":1,\"timeoutSeconds\":10},\"systemLogVerbosity\":0,\"terminationGracePeriodSeconds\":\"\",\"tls\":{\"arbiter\":{\"existingSecret\":\"\"},\"autoGenerated\":true,\"caCert\":\"\",\"caKey\":\"\",\"enabled\":false,\"existingSecret\":\"\",\"extraDnsNames\":[],\"hidden\":{\"existingSecrets\":[]},\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/nginx\",\"tag\":\"1.25.1-debian-11-r5\"},\"mode\":\"requireTLS\",\"pemChainIncluded\":false,\"resources\":{\"limits\":{\"cpu\":\"2\",\"memory\":\"4Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"standalone\":{\"existingSecret\":\"\"}},\"tolerations\":[],\"topologyKey\":\"\",\"topologySpreadConstraints\":[],\"updateStrategy\":{\"type\":\"RollingUpdate\"},\"useStatefulSet\":false,\"volumePermissions\":{\"enabled\":false,\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"pullSecrets\":[],\"registry\":\"docker.io\",\"repository\":\"bitnami/bitnami-shell\",\"tag\":\"11-debian-11-r131\"},\"resources\":{\"limits\":{\"cpu\":\"2\",\"memory\":\"4Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"securityContext\":{\"runAsUser\":0}}}",
                "version": "14.8.3"
              }
            ],
            "name": "auth-mongodb",
            "namespace": "datalake",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "affinity: {}\nannotations: {}\narbiter:\n  affinity: {}\n  annotations: {}\n  args: []\n  command: []\n  configuration: \"\"\n  containerPorts:\n    mongodb: 27019\n  containerSecurityContext:\n    enabled: true\n    runAsNonRoot: true\n    runAsUser: 1001\n  customLivenessProbe: {}\n  customReadinessProbe: {}\n  customStartupProbe: {}\n  enabled: true\n  existingConfigmap: \"\"\n  extraEnvVars: []\n  extraEnvVarsCM: \"\"\n  extraEnvVarsSecret: \"\"\n  extraFlags: []\n  extraVolumeMounts: []\n  extraVolumes: []\n  hostAliases: []\n  initContainers: []\n  labels: {}\n  lifecycleHooks: {}\n  livenessProbe:\n    enabled: true\n    failureThreshold: 6\n    initialDelaySeconds: 30\n    periodSeconds: 20\n    successThreshold: 1\n    timeoutSeconds: 10\n  nodeAffinityPreset:\n    key: \"\"\n    type: \"\"\n    values: []\n  nodeSelector: {}\n  pdb:\n    create: false\n    maxUnavailable: \"\"\n    minAvailable: 1\n  podAffinityPreset: \"\"\n  podAnnotations: {}\n  podAntiAffinityPreset: soft\n  podLabels: {}\n  podManagementPolicy: OrderedReady\n  podSecurityContext:\n    enabled: true\n    fsGroup: 1001\n    sysctls: []\n  priorityClassName: \"\"\n  readinessProbe:\n    enabled: true\n    failureThreshold: 6\n    initialDelaySeconds: 5\n    periodSeconds: 20\n    successThreshold: 1\n    timeoutSeconds: 10\n  resources:\n    requests:\n      memory: \"2Gi\"\n      cpu: \"500m\"\n    limits:\n      memory: \"4Gi\"\n      cpu: \"2\"\n  runtimeClassName: \"\"\n  schedulerName: \"\"\n  service:\n    annotations: {}\n    extraPorts: []\n    headless:\n      annotations: {}\n    nameOverride: \"\"\n    ports:\n      mongodb: 27019\n  sidecars: []\n  startupProbe:\n    enabled: false\n    failureThreshold: 30\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 5\n  terminationGracePeriodSeconds: \"\"\n  tolerations: []\n  topologySpreadConstraints: []\n  updateStrategy:\n    type: RollingUpdate\narchitecture: standalone\nargs: []\nauth:\n  database: bifrost\n  databases:\n  - bifrost\n  enabled: true\n  existingSecret: \"\"\n  password: Maniac321.\n  passwords:\n  - Maniac321.\n  standaloneKey: \"\"\n  rootPassword: Maniac321.\n  rootUser: root\n  username: bifrost\n  usernames:\n  - bifrost\nclusterDomain: cluster.local\ncommand: []\ncommonAnnotations: {}\ncommonLabels: {}\nconfiguration: \"\"\ncontainerPorts:\n  mongodb: 27019\ncontainerSecurityContext:\n  enabled: true\n  runAsNonRoot: true\n  runAsUser: 1001\ncustomLivenessProbe: {}\ncustomReadinessProbe: {}\ncustomStartupProbe: {}\ndiagnosticMode:\n  args:\n  - infinity\n  command:\n  - sleep\n  enabled: false\ndirectoryPerDB: false\ndisableJavascript: false\ndisableSystemLog: false\nenableIPv6: false\nenableJournal: true\nexistingConfigmap: \"\"\nexternalAccess:\n  autoDiscovery:\n    enabled: true\n    image:\n      digest: \"\"\n      pullPolicy: IfNotPresent\n      pullSecrets: []\n      registry: docker.io\n      repository: bitnami/kubectl\n      tag: 1.25.11-debian-11-r5\n    resources:\n      requests:\n        memory: \"2Gi\"\n        cpu: \"500m\"\n      limits:\n        memory: \"4Gi\"\n        cpu: \"2\"\n  enabled: true\n  externalMaster:\n    enabled: false\n    host: \"\"\n    port: 27019\n  hidden:\n    enabled: false\n    service:\n      allocateLoadBalancerNodePorts: true\n      annotations: {}\n      domain: \"\"\n      externalTrafficPolicy: Local\n      extraPorts: []\n      loadBalancerClass: \"\"\n      loadBalancerIPs: []\n      loadBalancerSourceRanges: []\n      nodePorts: []\n      portName: mongodb\n      ports:\n        mongodb: 27019\n      sessionAffinity: None\n      sessionAffinityConfig: {}\n      type: LoadBalancer\n  service:\n    allocateLoadBalancerNodePorts: true\n    annotations: {}\n    domain: \"\"\n    externalTrafficPolicy: Local\n    extraPorts: []\n    loadBalancerClass: \"\"\n    loadBalancerIPs: []\n    loadBalancerSourceRanges: []\n    nodePorts: []\n    portName: mongodb\n    ports:\n      mongodb: 27019\n    sessionAffinity: None\n    sessionAffinityConfig: {}\n    type: LoadBalancer\nextraDeploy: []\nextraEnvVars: []\nextraEnvVarsCM: \"\"\nextraEnvVarsSecret: \"\"\nextraFlags: []\nextraVolumeMounts: []\nextraVolumes: []\nfullnameOverride: \"\"\nglobal:\n  imagePullSecrets: []\n  imageRegistry: \"\"\n  namespaceOverride: \"\"\n  storageClass: \"\"\nhidden:\n  affinity: {}\n  annotations: {}\n  args: []\n  command: []\n  configuration: \"\"\n  containerPorts:\n    mongodb: 27019\n  containerSecurityContext:\n    enabled: true\n    runAsNonRoot: true\n    runAsUser: 1001\n  customLivenessProbe: {}\n  customReadinessProbe: {}\n  customStartupProbe: {}\n  enabled: false\n  existingConfigmap: \"\"\n  extraEnvVars: []\n  extraEnvVarsCM: \"\"\n  extraEnvVarsSecret: \"\"\n  extraFlags: []\n  extraVolumeMounts: []\n  extraVolumes: []\n  hostAliases: []\n  initContainers: []\n  labels: {}\n  lifecycleHooks: {}\n  livenessProbe:\n    enabled: true\n    failureThreshold: 6\n    initialDelaySeconds: 30\n    periodSeconds: 20\n    successThreshold: 1\n    timeoutSeconds: 10\n  nodeAffinityPreset:\n    key: \"\"\n    type: \"\"\n    values: []\n  nodeSelector: {}\n  pdb:\n    create: false\n    maxUnavailable: \"\"\n    minAvailable: 1\n  persistence:\n    accessModes:\n    - ReadWriteOnce\n    annotations: {}\n    enabled: true\n    medium: \"\"\n    mountPath: /bitnami/mongodb\n    size: 10Gi\n    storageClass: \"\"\n    subPath: \"\"\n    volumeClaimTemplates:\n      dataSource: {}\n      requests: {}\n      selector: {}\n  podAffinityPreset: \"\"\n  podAnnotations: {}\n  podAntiAffinityPreset: soft\n  podLabels: {}\n  podManagementPolicy: OrderedReady\n  podSecurityContext:\n    enabled: true\n    fsGroup: 1001\n    sysctls: []\n  priorityClassName: \"\"\n  readinessProbe:\n    enabled: true\n    failureThreshold: 6\n    initialDelaySeconds: 5\n    periodSeconds: 20\n    successThreshold: 1\n    timeoutSeconds: 10\n  replicaCount: 3\n  resources:\n    requests:\n      memory: \"2Gi\"\n      cpu: \"500m\"\n    limits:\n      memory: \"4Gi\"\n      cpu: \"2\"\n  runtimeClassName: \"\"\n  schedulerName: \"\"\n  service:\n    annotations: {}\n    extraPorts: []\n    headless:\n      annotations: {}\n    portName: mongodb\n    ports:\n      mongodb: 27019\n  sidecars: []\n  startupProbe:\n    enabled: false\n    failureThreshold: 30\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 5\n  terminationGracePeriodSeconds: \"\"\n  tolerations: []\n  topologySpreadConstraints: []\n  updateStrategy:\n    type: RollingUpdate\nhostAliases: []\nimage:\n  debug: false\n  digest: \"\"\n  pullPolicy: IfNotPresent\n  pullSecrets: []\n  registry: docker.io\n  repository: bitnami/mongodb\n  tag: 7.0.5-debian-11-r6\ninitContainers: []\ninitdbScripts: {}\ninitdbScriptsConfigMap: \"\"\nkubeVersion: \"\"\nlabels: {}\nlifecycleHooks: {}\nlivenessProbe:\n  enabled: true\n  failureThreshold: 6\n  initialDelaySeconds: 30\n  periodSeconds: 20\n  successThreshold: 1\n  timeoutSeconds: 10\nmetrics:\n  args: []\n  collector:\n    all: false\n    collstats: false\n    collstatsColls: []\n    collstatsLimit: 0\n    dbstats: false\n    diagnosticdata: true\n    indexstats: false\n    indexstatsColls: []\n    standalonestatus: true\n    topmetrics: false\n  command: []\n  compatibleMode: true\n  containerPort: 9216\n  customLivenessProbe: {}\n  customReadinessProbe: {}\n  customStartupProbe: {}\n  enabled: true\n  extraFlags: \"\"\n  extraVolumeMounts: []\n  image:\n    digest: \"\"\n    pullPolicy: IfNotPresent\n    pullSecrets: []\n    registry: docker.io\n    repository: bitnami/mongodb-exporter\n    tag: 0.39.0-debian-11-r10\n  livenessProbe:\n    enabled: true\n    failureThreshold: 3\n    initialDelaySeconds: 15\n    periodSeconds: 5\n    successThreshold: 1\n    timeoutSeconds: 10\n  password: Maniac321.\n  prometheusRule:\n    additionalLabels: {}\n    enabled: false\n    namespace: \"\"\n    rules: []\n  readinessProbe:\n    enabled: true\n    failureThreshold: 3\n    initialDelaySeconds: 5\n    periodSeconds: 5\n    successThreshold: 1\n    timeoutSeconds: 10\n  resources:\n    requests:\n      memory: \"2Gi\"\n      cpu: \"500m\"\n    limits:\n      memory: \"4Gi\"\n      cpu: \"2\"\n  service:\n    annotations:\n      prometheus.io/path: /metrics\n      prometheus.io/port: '{{ .Values.metrics.service.ports.metrics }}'\n      prometheus.io/scrape: \"true\"\n    extraPorts: []\n    ports:\n      metrics: 9216\n    type: ClusterIP\n  serviceMonitor:\n    enabled: false\n    honorLabels: false\n    interval: 30s\n    jobLabel: \"\"\n    labels: {}\n    metricRelabelings: []\n    namespace: \"\"\n    relabelings: []\n    scrapeTimeout: \"\"\n    selector: {}\n  startupProbe:\n    enabled: false\n    failureThreshold: 30\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    successThreshold: 1\n    timeoutSeconds: 5\n  username: bifrost\nnameOverride: \"\"\nnamespaceOverride: \"\"\nnodeAffinityPreset:\n  key: \"\"\n  type: \"\"\n  values: []\nnodeSelector: {}\npdb:\n  create: false\n  maxUnavailable: \"\"\n  minAvailable: 1\npersistence:\n  accessModes:\n  - ReadWriteOnce\n  annotations: {}\n  enabled: true\n  existingClaim: \"\"\n  medium: \"\"\n  mountPath: /bitnami/mongodb\n  resourcePolicy: \"\"\n  size: 15Gi\n  storageClass: \"\"\n  subPath: \"\"\n  volumeClaimTemplates:\n    dataSource: {}\n    requests: {}\n    selector: {}\npodAffinityPreset: \"\"\npodAnnotations: {}\npodAntiAffinityPreset: soft\npodLabels: {}\npodManagementPolicy: OrderedReady\npodSecurityContext:\n  enabled: true\n  fsGroup: 1001\n  sysctls: []\npodSecurityPolicy:\n  allowPrivilegeEscalation: false\n  create: false\n  privileged: false\n  spec: {}\npriorityClassName: \"\"\nrbac:\n  create: false\n  rules: []\nreadinessProbe:\n  enabled: true\n  failureThreshold: 6\n  initialDelaySeconds: 5\n  periodSeconds: 10\n  successThreshold: 1\n  timeoutSeconds: 5\nreplicaCount: 3\nstandaloneConfigurationSettings:\n  configuration: {}\n  enabled: true\nstandaloneHostnames: true\nstandaloneName: rs0\nresources:\n  requests:\n    memory: \"2Gi\"\n    cpu: \"500m\"\n  limits:\n    memory: \"4Gi\"\n    cpu: \"2\"\nruntimeClassName: \"\"\nschedulerName: \"\"\nservice:\n  allocateLoadBalancerNodePorts: true\n  annotations: {}\n  clusterIP: \"\"\n  externalIPs: [192.168.36.99]\n  externalTrafficPolicy: Local\n  extraPorts: []\n  headless:\n    annotations: {}\n  loadBalancerClass: \"\"\n  loadBalancerIP: \"\"\n  loadBalancerSourceRanges: []\n  nameOverride: \"\"\n  nodePorts:\n    mongodb: \"\"\n  portName: mongodb\n  ports:\n    mongodb: 27019\n  sessionAffinity: None\n  sessionAffinityConfig: {}\n  type: ClusterIP\nserviceAccount:\n  annotations: {}\n  automountServiceAccountToken: true\n  create: true\n  name: \"\"\nserviceBindings:\n  enabled: false\nsidecars: []\nstartupProbe:\n  enabled: false\n  failureThreshold: 30\n  initialDelaySeconds: 5\n  periodSeconds: 20\n  successThreshold: 1\n  timeoutSeconds: 10\nsystemLogVerbosity: 0\nterminationGracePeriodSeconds: \"\"\ntls:\n  arbiter:\n    existingSecret: \"\"\n  autoGenerated: true\n  caCert: \"\"\n  caKey: \"\"\n  enabled: false\n  existingSecret: \"\"\n  extraDnsNames: []\n  hidden:\n    existingSecrets: []\n  image:\n    digest: \"\"\n    pullPolicy: IfNotPresent\n    pullSecrets: []\n    registry: docker.io\n    repository: bitnami/nginx\n    tag: 1.25.1-debian-11-r5\n  mode: requireTLS\n  pemChainIncluded: false\n  standalone:\n    existingSecrets: []\n  resources:\n    requests:\n      memory: \"2Gi\"\n      cpu: \"500m\"\n    limits:\n      memory: \"4Gi\"\n      cpu: \"2\"\n  standalone:\n    existingSecret: \"\"\ntolerations: []\ntopologyKey: \"\"\ntopologySpreadConstraints: []\nupdateStrategy:\n  type: RollingUpdate\nuseStatefulSet: false\nvolumePermissions:\n  enabled: false\n  image:\n    digest: \"\"\n    pullPolicy: IfNotPresent\n    pullSecrets: []\n    registry: docker.io\n    repository: bitnami/bitnami-shell\n    tag: 11-debian-11-r131\n  resources:\n    requests:\n      memory: \"2Gi\"\n      cpu: \"500m\"\n    limits:\n      memory: \"4Gi\"\n      cpu: \"2\"\n  securityContext:\n    runAsUser: 0"
            ],
            "verify": false,
            "version": "14.8.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.datalake_ns-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "example_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "datalake/airflow",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 4,
                "labels": {},
                "name": "airflow",
                "namespace": "datalake",
                "resource_version": "62812493",
                "uid": "0ad62a18-7b7c-4ffc-a499-e5ce3acc688f"
              }
            ],
            "spec": [
              {
                "default_backend": [
                  {
                    "resource": [],
                    "service": [
                      {
                        "name": "airflow-prd-web",
                        "port": [
                          {
                            "name": "",
                            "number": 8080
                          }
                        ]
                      }
                    ]
                  }
                ],
                "ingress_class_name": "ingress-traefik",
                "rule": [],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "first_metallb_bgp",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "metallb.io/v1beta1",
                "kind": "L2Advertisement",
                "metadata": {
                  "name": "external",
                  "namespace": "metalb"
                },
                "spec": {
                  "interfaces": [
                    "ens160"
                  ],
                  "ipAddressPools": [
                    "external-pool"
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "interfaces": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "ipAddressPools": [
                        "tuple",
                        [
                          "string"
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "metallb.io/v1beta1",
                "kind": "L2Advertisement",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "external",
                  "namespace": "metalb",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "interfaces": [
                    "ens160"
                  ],
                  "ipAddressPoolSelectors": null,
                  "ipAddressPools": [
                    "external-pool"
                  ],
                  "nodeSelectors": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "interfaces": [
                        "list",
                        "string"
                      ],
                      "ipAddressPoolSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "ipAddressPools": [
                        "list",
                        "string"
                      ],
                      "nodeSelectors": [
                        "list",
                        [
                          "object",
                          {
                            "matchExpressions": [
                              "list",
                              [
                                "object",
                                {
                                  "key": "string",
                                  "operator": "string",
                                  "values": [
                                    "list",
                                    "string"
                                  ]
                                }
                              ]
                            ],
                            "matchLabels": [
                              "map",
                              "string"
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "helm_release.metalb",
            "kubernetes_namespace.metalb-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "first_metallb_pooladdress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "metallb.io/v1beta1",
                "kind": "IPAddressPool",
                "metadata": {
                  "name": "external-pool",
                  "namespace": "metalb"
                },
                "spec": {
                  "addresses": [
                    "192.168.10.0/24"
                  ],
                  "autoAssign": true
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addresses": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "autoAssign": "bool"
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "metallb.io/v1beta1",
                "kind": "IPAddressPool",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "external-pool",
                  "namespace": "metalb",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "addresses": [
                    "192.168.10.0/24"
                  ],
                  "autoAssign": true,
                  "avoidBuggyIPs": false,
                  "serviceAllocation": {
                    "namespaceSelectors": null,
                    "namespaces": null,
                    "priority": null,
                    "serviceSelectors": null
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "addresses": [
                        "list",
                        "string"
                      ],
                      "autoAssign": "bool",
                      "avoidBuggyIPs": "bool",
                      "serviceAllocation": [
                        "object",
                        {
                          "namespaceSelectors": [
                            "list",
                            [
                              "object",
                              {
                                "matchExpressions": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "key": "string",
                                      "operator": "string",
                                      "values": [
                                        "list",
                                        "string"
                                      ]
                                    }
                                  ]
                                ],
                                "matchLabels": [
                                  "map",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "namespaces": [
                            "list",
                            "string"
                          ],
                          "priority": "number",
                          "serviceSelectors": [
                            "list",
                            [
                              "object",
                              {
                                "matchExpressions": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "key": "string",
                                      "operator": "string",
                                      "values": [
                                        "list",
                                        "string"
                                      ]
                                    }
                                  ]
                                ],
                                "matchLabels": [
                                  "map",
                                  "string"
                                ]
                              }
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "helm_release.metalb",
            "kubernetes_namespace.metalb-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "ingressroutetcp_apm",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "name": "apm",
                  "namespace": "monitoring"
                },
                "spec": {
                  "entryPoints": [
                    "apm"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "services": [
                        {
                          "name": "apm-server-quickstart-apm-http",
                          "port": 8200
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "match": "string",
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "number"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "apm",
                  "namespace": "monitoring",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "apm"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "middlewares": null,
                      "priority": null,
                      "services": [
                        {
                          "name": "apm-server-quickstart-apm-http",
                          "namespace": null,
                          "port": "8200",
                          "proxyProtocol": {
                            "version": null
                          },
                          "terminationDelay": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "passthrough": null,
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "port": "string",
                                  "proxyProtocol": [
                                    "object",
                                    {
                                      "version": "number"
                                    }
                                  ],
                                  "terminationDelay": "number",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "passthrough": "bool",
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "ingressroutetcp_haproxy",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "name": "xtradb",
                  "namespace": "datalake"
                },
                "spec": {
                  "entryPoints": [
                    "xtradb"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "services": [
                        {
                          "name": "mysql",
                          "port": 3306
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "match": "string",
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "number"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "xtradb",
                  "namespace": "datalake",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "xtradb"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "middlewares": null,
                      "priority": null,
                      "services": [
                        {
                          "name": "mysql",
                          "namespace": null,
                          "port": "3306",
                          "proxyProtocol": {
                            "version": null
                          },
                          "terminationDelay": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "passthrough": null,
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "port": "string",
                                  "proxyProtocol": [
                                    "object",
                                    {
                                      "version": "number"
                                    }
                                  ],
                                  "terminationDelay": "number",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "passthrough": "bool",
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "ingressroutetcp_haproxy_replicas",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "name": "xtradbreplicas",
                  "namespace": "datalake"
                },
                "spec": {
                  "entryPoints": [
                    "xtradbreplicas"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "services": [
                        {
                          "name": "percona-xtradb-cluste-haproxy-replicas",
                          "port": 3306
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "match": "string",
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "number"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "xtradbreplicas",
                  "namespace": "datalake",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "xtradbreplicas"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "middlewares": null,
                      "priority": null,
                      "services": [
                        {
                          "name": "percona-xtradb-cluste-haproxy-replicas",
                          "namespace": null,
                          "port": "3306",
                          "proxyProtocol": {
                            "version": null
                          },
                          "terminationDelay": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "passthrough": null,
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "port": "string",
                                  "proxyProtocol": [
                                    "object",
                                    {
                                      "version": "number"
                                    }
                                  ],
                                  "terminationDelay": "number",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "passthrough": "bool",
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "ingressroutetcp_mongo",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "name": "mongodb",
                  "namespace": "datalake"
                },
                "spec": {
                  "entryPoints": [
                    "mongodb"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "services": [
                        {
                          "name": "mongo-mongodb",
                          "port": 27017
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "match": "string",
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "number"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "mongodb",
                  "namespace": "datalake",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "mongodb"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "middlewares": null,
                      "priority": null,
                      "services": [
                        {
                          "name": "mongo-mongodb",
                          "namespace": null,
                          "port": "27017",
                          "proxyProtocol": {
                            "version": null
                          },
                          "terminationDelay": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "passthrough": null,
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "port": "string",
                                  "proxyProtocol": [
                                    "object",
                                    {
                                      "version": "number"
                                    }
                                  ],
                                  "terminationDelay": "number",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "passthrough": "bool",
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "ingressroutetcp_mysql",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "name": "mysql",
                  "namespace": "datalake"
                },
                "spec": {
                  "entryPoints": [
                    "mysql"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "services": [
                        {
                          "name": "percona-xtradb-cluste-haproxy",
                          "port": 3306
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "match": "string",
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "number"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "mysql",
                  "namespace": "datalake",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "mysql"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "middlewares": null,
                      "priority": null,
                      "services": [
                        {
                          "name": "percona-xtradb-cluste-haproxy",
                          "namespace": null,
                          "port": "3306",
                          "proxyProtocol": {
                            "version": null
                          },
                          "terminationDelay": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "passthrough": null,
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "port": "string",
                                  "proxyProtocol": [
                                    "object",
                                    {
                                      "version": "number"
                                    }
                                  ],
                                  "terminationDelay": "number",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "passthrough": "bool",
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "ingressroutetcp_telemetry4318",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "name": "otel-collector-cluster-opentelemetry-collector4318",
                  "namespace": "monitoring"
                },
                "spec": {
                  "entryPoints": [
                    "telemetry4318"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "services": [
                        {
                          "name": "otel-collector-cluster-opentelemetry-collector",
                          "port": 4318
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "match": "string",
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "number"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "otel-collector-cluster-opentelemetry-collector4318",
                  "namespace": "monitoring",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "telemetry4318"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "middlewares": null,
                      "priority": null,
                      "services": [
                        {
                          "name": "otel-collector-cluster-opentelemetry-collector",
                          "namespace": null,
                          "port": "4318",
                          "proxyProtocol": {
                            "version": null
                          },
                          "terminationDelay": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "passthrough": null,
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "port": "string",
                                  "proxyProtocol": [
                                    "object",
                                    {
                                      "version": "number"
                                    }
                                  ],
                                  "terminationDelay": "number",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "passthrough": "bool",
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "ingressroutetcp_zipkin",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "name": "zipkin",
                  "namespace": "monitoring"
                },
                "spec": {
                  "entryPoints": [
                    "zipkin"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "services": [
                        {
                          "name": "zipkin",
                          "port": 9411
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "match": "string",
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "number"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "zipkin",
                  "namespace": "monitoring",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "zipkin"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "middlewares": null,
                      "priority": null,
                      "services": [
                        {
                          "name": "zipkin",
                          "namespace": null,
                          "port": "9411",
                          "proxyProtocol": {
                            "version": null
                          },
                          "terminationDelay": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "passthrough": null,
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "port": "string",
                                  "proxyProtocol": [
                                    "object",
                                    {
                                      "version": "number"
                                    }
                                  ],
                                  "terminationDelay": "number",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "passthrough": "bool",
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "name": "prometheus",
                  "namespace": "monitoring"
                },
                "spec": {
                  "entryPoints": [
                    "prometheus"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "services": [
                        {
                          "name": "prometheus-operated",
                          "port": 9090
                        }
                      ]
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "tuple",
                        [
                          "string"
                        ]
                      ],
                      "routes": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "match": "string",
                              "services": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "name": "string",
                                      "port": "number"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "traefik.containo.us/v1alpha1",
                "kind": "IngressRouteTCP",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "prometheus",
                  "namespace": "monitoring",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "entryPoints": [
                    "prometheus"
                  ],
                  "routes": [
                    {
                      "match": "HostSNI(`*`)",
                      "middlewares": null,
                      "priority": null,
                      "services": [
                        {
                          "name": "prometheus-operated",
                          "namespace": null,
                          "port": "9090",
                          "proxyProtocol": {
                            "version": null
                          },
                          "terminationDelay": null,
                          "weight": null
                        }
                      ]
                    }
                  ],
                  "tls": {
                    "certResolver": null,
                    "domains": null,
                    "options": {
                      "name": null,
                      "namespace": null
                    },
                    "passthrough": null,
                    "secretName": null,
                    "store": {
                      "name": null,
                      "namespace": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entryPoints": [
                        "list",
                        "string"
                      ],
                      "routes": [
                        "list",
                        [
                          "object",
                          {
                            "match": "string",
                            "middlewares": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string"
                                }
                              ]
                            ],
                            "priority": "number",
                            "services": [
                              "list",
                              [
                                "object",
                                {
                                  "name": "string",
                                  "namespace": "string",
                                  "port": "string",
                                  "proxyProtocol": [
                                    "object",
                                    {
                                      "version": "number"
                                    }
                                  ],
                                  "terminationDelay": "number",
                                  "weight": "number"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "object",
                        {
                          "certResolver": "string",
                          "domains": [
                            "list",
                            [
                              "object",
                              {
                                "main": "string",
                                "sans": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "options": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ],
                          "passthrough": "bool",
                          "secretName": "string",
                          "store": [
                            "object",
                            {
                              "name": "string",
                              "namespace": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "datalake_ns-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "datalake",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "datalake",
                "resource_version": "7889854",
                "uid": "f01fc7e7-263a-447c-bdc5-5b9bf751ad45"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "letsencrypt-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cert-manager",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cert-manager",
                "resource_version": "7889780",
                "uid": "3c549bb7-714b-4efc-b2fa-67ca6426c064"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "metalb-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "metalb",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "metalb",
                "resource_version": "77827",
                "uid": "a3313d3d-145b-4b80-8ff5-63fcf92a43e1"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "openebs-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "openebs",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "openebs",
                "resource_version": "77825",
                "uid": "f10bff16-f528-4782-9075-408aa06d8726"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "prometheus-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitoring",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "monitoring",
                "resource_version": "103493677",
                "uid": "ea8f4134-2e0f-40ea-98c8-1fbf0cfa4d94"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "traefik-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-traefik",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "ingress-traefik",
                "resource_version": "1052158",
                "uid": "f3ebd62b-f12b-4199-ba6e-ca11404be7b4"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret_v1",
      "name": "airflow",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "httpSecretPasswordKey": "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",
              "httpSecretUsernameKey": "JACKT72xp"
            },
            "id": "datalake/airflow-git-https-secret",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "airflow-git-https-secret",
                "namespace": "datalake",
                "resource_version": "8387858",
                "uid": "36e55b42-0179-4b6d-8ae8-18f52b9b3c40"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19"
        }
      ]
    }
  ],
  "check_results": null
}
