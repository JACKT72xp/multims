name: Tag, Build and Release

on:
  push:
    branches:
      - master

jobs:
  tag_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
      
      - name: Bump version and create tag
        id: tag_version
        run: |
          # Obtener el último tag
          last_tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          # Dividir el tag en partes
          IFS='.' read -r -a parts <<< "${last_tag/v/}"
          # Incrementar la versión del parche 2
          patch=$((parts[2] + 1))
          new_tag="v${parts[0]}.${parts[1]}.$patch"
          # Crear un nuevo tag
          git tag $new_tag
          git push https://$GITHUB_ACTOR:${{ secrets.PAT_TOKEN }}@github.com/$GITHUB_REPOSITORY.git $new_tag
          echo "New tag created: $new_tag"
          echo "::set-output name=new_tag::$new_tag"
  
  release:
    needs: tag_and_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin, linux]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Necesario para obtener los tags

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Build binary
        run: |
          mkdir -p build
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/multims_${{ matrix.goos }}_${{ matrix.goarch }}

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: multims-${{ matrix.goos }}-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/multims_${{ matrix.goos }}_${{ matrix.goarch }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}