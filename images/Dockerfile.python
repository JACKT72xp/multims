# Usar Alpine Linux como base
FROM alpine:latest

# Añadir repositorio edge y community para las últimas versiones de los paquetes
RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories

# Actualizar índice de paquetes y instalar Python y pip
RUN apk update && \
    apk add --no-cache python3 py3-pip

# Instalar bibliotecas de desarrollo para compilar cualquier dependencia Python si necesario
RUN apk add --no-cache gcc musl-dev python3-dev libffi-dev openssl-dev

# Configurar el entorno de shell para bash
RUN apk add --no-cache bash bash-completion curl vim bind-tools procps rsync util-linux coreutils

# Configurar bash como el shell por defecto
SHELL ["/bin/bash", "-c"]

# Configuraciones adicionales para bash y herramientas de línea de comando
RUN echo "export PS1='\\h:\\W \\u\\$ '" >> /root/.bashrc && \
    echo "alias ll='ls -lah'" >> /root/.bashrc && \
    echo "alias l='ls -l'" >> /root/.bashrc && \
    echo "source /etc/profile.d/bash_completion.sh" >> /root/.bashrc

# Crear un script de entrada para la terminal
RUN echo '#!/bin/bash' > /entrypoint.sh && \
    echo 'export TERM=xterm-256color' >> /entrypoint.sh && \
    echo '# Habilitar bash completion si está disponible' >> /entrypoint.sh && \
    echo 'if [ -f /etc/profile.d/bash_completion.sh ]; then' >> /entrypoint.sh && \
    echo '    . /etc/profile.d/bash_completion.sh' >> /entrypoint.sh && \
    echo 'fi' >> /entrypoint.sh && \
    echo 'exec /bin/bash' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Definir el trabajo por defecto al iniciar el contenedor
CMD ["/entrypoint.sh"]
